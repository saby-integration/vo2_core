////////////////////////////////////////////////////

&НаКлиенте
Функция		Ини(Кэш, ИмяИни, ДопПараметры=Неопределено, Отказ=Ложь) Экспорт
	Перем ЗначениеИни;
	Принудительно =	Не	ДопПараметры = Неопределено
					И	ДопПараметры.Свойство("ПринудительноеЧтение")
					И	ДопПараметры.ПринудительноеЧтение;
	Если	Не Кэш.Ини.Свойство(ИмяИни, ЗначениеИни) Тогда
		//Это не ини из кэша
		Если Не Принудительно Тогда
			Возврат Неопределено;
		КонецЕсли;
		//Но включено принудительное чтение
	ИначеЕсли	Не ЗначениеИни = Неопределено Тогда
		//Есть в кэше
		Возврат ЗначениеИни;
	КонецЕсли;

	КлассIntegrationConnection = Кэш.КэшНастроек.ВыбранныеНастройки;
	СписокИниЗапрос = Новый Массив;
	СписокИниЗапрос.Добавить(ИмяИни);
	ПараметрыЧТения = Новый Структура("СписокИни_ВО", СписокИниЗапрос);
	Если 	Не	ДопПараметры = Неопределено
		И		ДопПараметры.Свойство("ДоступныеТипыИни") Тогда
		ПараметрыЧТения.Вставить("ДоступныеТипыИни", ДопПараметры.ДоступныеТипыИни);
	КонецЕсли;
	Результат = КлассIntegrationConnection_ДозапроситьИни(Кэш, КлассIntegrationConnection, ПараметрыЧТения, Отказ);
    Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.СбисИсключение(Результат, "ФайлыНастроекСервер.Ини");
	КонецЕсли;
	Для Каждого ИниРезультат Из Результат Цикл
		Если Не Принудительно Тогда
			Кэш.Ини.Вставить(ИмяИни, ЗначениеИни);
		КонецЕсли;
		Возврат ИниРезультат.Значение;
	КонецЦикла;
	Отказ = Истина;
	Возврат Кэш.ОбщиеФункции.СбисИсключение(779, "ФайлыНастроекСервер.Ини",,,СтрЗаменить("Ини ""{}"" не найдена в сбис Меню.", "{}", ИмяИни));
КонецФункции

&НаКлиенте
Функция		Ини_Выгрузка(Кэш, ДокументСсылка, Представление="", СбисРеестр=Неопределено) Экспорт
	Возврат Кэш.ФормаНастроекОбщее.Ини_Выгрузка(Кэш, ДокументСсылка, Представление, СбисРеестр);
КонецФункции

//Получим структуру разделов по указанному ИД. Если ид не заполнен, то это типовые настройки меню запишем при общей записи
&НаКлиенте
Функция		ПолучитьСтруктуруРазделов(Кэш, СбисДополнительныеПараметры=Неопределено, Отказ) Экспорт
	
	Если СбисДополнительныеПараметры = Неопределено Тогда
		СбисДополнительныеПараметры = Новый Структура;
	КонецЕсли;
	Если Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.ТипНастроек = "Стандартные" Тогда
		Кэш.КэшНастроек.ВыбранныеНастройки.Данные.Меню = КлассIntegrationConnection_СформироватьСбисМеню(Кэш, Кэш.КэшНастроек.ВыбранныеНастройки, СбисДополнительныеПараметры, Отказ);
	Иначе
		ЧтениеМеню = КлассIntegrationConnection_ПолучитьСбисМеню(Кэш, Кэш.КэшНастроек.ВыбранныеНастройки, СбисДополнительныеПараметры, Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(,"ФайлыНастроекСервер.ПолучитьСтруктуруРазделов", 785, "Ошибка во входящих данных", "Отсутствует описание разделов аккордеона в выбранных настройках");
		КонецЕсли;
	КонецЕсли;
	Если Кэш.КэшНастроек.ВыбранныеНастройки.Данные.Меню = Неопределено Тогда
		СбисМеню = Ини(Кэш, "СбисМеню", Новый Структура("ПринудительноеЧтение", Истина), Отказ);
		Кэш.КэшНастроек.ВыбранныеНастройки.Данные.Меню = СбисМеню;
	Иначе
		СбисМеню = Кэш.КэшНастроек.ВыбранныеНастройки.Данные.Меню;
	КонецЕсли;
	Если Отказ Тогда
		Возврат СбисМеню;
	КонецЕсли;
	СбисАккордеон = Неопределено;
	Если Не СбисМеню.Свойство("РазделыВнешнейОбработки", СбисАккордеон) Тогда
		Отказ = Истина;
		Возврат Кэш.ОбщиеФункции.СбисИсключение(,"ФайлыНастроекСервер.ПолучитьСтруктуруРазделов", 785, "Ошибка во входящих данных", "Отсутствует описание разделов аккордеона в выбранных настройках");
	КонецЕсли;
	
	Возврат СбисАккордеон;		
КонецФункции

&НаКлиенте
Функция		СбисОбновитьДанныеПоНастройкам(Кэш, ДополнительныеПараметры, Отказ) Экспорт
	//Если установлены типовые настройки, то структура раздела будет при создании коннекшена.
	Если Не Кэш.КэшНастроек.ВыбранныеНастройки.Идентификатор = "" Тогда
		РезультатОбновления = КлассIntegrationConnection_ДозапроситьИни(Кэш, Кэш.КэшНастроек.ВыбранныеНастройки, Новый Структура, Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатОбновления, "ФайлыНастроекСервер.СбисОбновитьДанныеПоНастройкам");
		КонецЕсли;
		РезультатОбновления = СбисОбновитьСтруктуруРазделов(Кэш, ДополнительныеПараметры, Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатОбновления, "ФайлыНастроекСервер.СбисОбновитьДанныеПоНастройкам");
		КонецЕсли;
	КонецЕсли;
	//Для всех настроек формируем печатные формы в том числе
	РезультатОбновления = Кэш.ФормаНастроекОбщее.СбисДобавитьПечатныеФормы(Кэш, Отказ);
	Если Отказ Тогда
		СбисПараметрыСтатистики = Новый Структура("Действие, Ошибка", "Запись ошибки", РезультатОбновления);
		Кэш.ОбщиеФункции.сбисСтатистика_СформироватьИЗаписатьСтатистикуНаСервис(Кэш, СбисПараметрыСтатистики, Ложь);
		//TODO39 ошибка ПФ является результатом с флагом отказа
		Отказ = Ложь;
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

//Функция обновляет структуру для формирования аккордеона и заполнения фильтров
&НаКлиенте
Функция		СбисОбновитьСтруктуруРазделов(Кэш, ДополнительныеПараметры, Отказ) Экспорт
	Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.СбисМеню.Обновить = Истина;
	Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.СбисПараметры.Обновить = Истина;
	//Если пользовательский коннекшен, то сразу запишем меню с аккордеоном. Если нет, то сформируем меню, что записали руками.
	Если		Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.ТипНастроек = "Пользовательские" 
		И		Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.СбисМеню.Отправлять
		И	Не	Кэш.ФормаНастроекОбщее.Открыта() Тогда
		Возврат _КлассIntegrationConnection_Записать(Кэш, Кэш.КэшНастроек.ВыбранныеНастройки, Новый Структура("ТихийРежим", Истина), Отказ);
	Иначе
		Кэш.КэшНастроек.ВыбранныеНастройки.Данные.Меню = КлассIntegrationConnection_СформироватьСбисМеню(Кэш, Кэш.КэшНастроек.ВыбранныеНастройки, Новый Структура, Отказ);
		Кэш.КэшНастроек.ИзмененияВНастройках = Истина;
	КонецЕсли;
	Возврат Истина;	
КонецФункции

&НаКлиенте
Функция		СбисПроверитьУстановленныеНастройки(Кэш, УстановленныеИниФайлы, СтруктураИни, СтруктураПараметров, ИдентификаторНастроек) Экспорт	
	Отказ = Ложь;
	КлассIntegrationConnection = Кэш.КэшНастроек.ВыбранныеНастройки;
	РезультатДозапроса = КлассIntegrationConnection_ДозапроситьИни(Кэш, КлассIntegrationConnection,Новый Структура,Отказ);
	Если Отказ Тогда
		Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, РезультатДозапроса, Новый Структура("ФормаВладелец", Кэш.ФормаНастроекОбщее)); 
		Возврат Ложь;
	КонецЕсли;
	СтруктураИни = КлассIntegrationConnection.Данные.Ини;
	//Так, как установленные ини были сформированы без данных, то требуется их переопределить для корректной расстановки флагов
	УстановленныеИниФайлы = ПолучитьМассивУстановленныхИниФайлов(СтруктураИни, КлассIntegrationConnection, Отказ);
	Возврат Кэш.ФормаНастроекОбщее.СбисПроверитьУстановленныеНастройки(Кэш,УстановленныеИниФайлы,СтруктураИни,СтруктураПараметров,ИдентификаторНастроек);
КонецФункции

&НаКлиенте
Функция		УстановитьПараметрыИнтеграции_УстановкаНастроек(Кэш, СтруктураСбисПараметров, ДополнительныеПараметры, Отказ) Экспорт
	Возврат Кэш.ФормаНастроекОбщее.УстановитьПараметрыИнтеграции_УстановкаНастроек(Кэш, СтруктураСбисПараметров, ДополнительныеПараметры, Отказ);	
КонецФункции

&НаКлиенте                                  
Функция		УстановитьИниРазделов(Кэш, СбисДополнительныеПараметры=Неопределено, Отказ) Экспорт
	
	СбисСтруктураРазделов = ПолучитьСтруктуруРазделов(Кэш, СбисДополнительныеПараметры, Отказ);
	Если Отказ Тогда
		//Кэш.КэшНастроек.ВыбранныеНастройки.Ошибки.Вставить(СбисСтруктураРазделов.code, СбисСтруктураРазделов);
		Кэш.КэшНастроек.ВыбранныеНастройки.ПараметрыРаботы.СбисМеню.Обновить = Истина;
		Кэш.КэшНастроек.ИзмененияВНастройках = Истина;
		Возврат Кэш.ОбщиеФункции.СбисИсключение(СбисСтруктураРазделов, "ФайлыНастроекСервер.УстановитьИниРазделов");
	КонецЕсли;
	Возврат Кэш.ФормаНастроекОбщее.УстановитьИниРазделов(Кэш, СбисСтруктураРазделов, СбисДополнительныеПараметры, Отказ)
	
КонецФункции	
	
&НаКлиенте                                  
Функция		УстановитьИниКонфигурации(Кэш, СбисДополнительныеПараметры=Неопределено, Отказ) Экспорт
	Возврат Кэш.ФормаНастроекОбщее.УстановитьИниКонфигурации(Кэш, Ини(Кэш, "Конфигурация", СбисДополнительныеПараметры, Отказ), СбисДополнительныеПараметры, Отказ);
КонецФункции	
	
&НаКлиенте                                  
Функция		СбисПолучитьМассивУстановленныхИниФайлов(Кэш, СбисДополнительныеПараметры=Неопределено, Отказ=Ложь) Экспорт
	
	ВыбранныеНастройки = Кэш.КэшНастроек.ВыбранныеНастройки;
	РезультатДозапроса = КлассIntegrationConnection_ДозапроситьИни(Кэш, ВыбранныеНастройки, Новый Структура, Отказ);
	Если Отказ Тогда
		Возврат РезультатДозапроса;
	КонецЕсли;
	Возврат ПолучитьМассивУстановленныхИниФайлов(ВыбранныеНастройки.Данные.Ини, ВыбранныеНастройки, Отказ);
	
КонецФункции

//Функция формирует класс настроек от текущих данных кэша, либо возвращает уже готовый, выбранный
&НаКлиенте                                  
Функция		СформироватьСтруктуруТекущихНастроек(Кэш, ДопПараметры, Отказ) Экспорт
	Перем ВыбранныеНастройки;
	Если  Не Кэш.КэшНастроек.Свойство("ВыбранныеНастройки", ВыбранныеНастройки) Тогда
		ПараметрыНовогоПодключения = Новый Структура("Идентификатор, ПараметрыКонфигурации, ИнициироватьДанные", Кэш.Парам.ИдентификаторНастроек, Кэш.КэшНастроек.ПараметрыКонфигурации, Ложь);
		Если ДопПараметры.Свойство("ТипНастроек") Тогда
			ПараметрыНовогоПодключения.Вставить("Тип", ДопПараметры.ТипНастроек);
		КонецЕсли;
		ВыбранныеНастройки = НовыйIntegrationConnection(Кэш, ПараметрыНовогоПодключения, Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(ВыбранныеНастройки, "ФайлыНастроекСервер.СформироватьСтруктуруДляТекущихНастроек");
		КонецЕсли;
	КонецЕсли;
	ВыбранныеНастройки.Данные.Ини = Новый Структура;
	Для Каждого КлючИЗначение Из Кэш.Ини Цикл
		ПараметрыИни = Кэш.ФормаНастроекОбщее.ОпределитьПараметрыИни(Кэш, КлючИЗначение.Значение, КлючИЗначение.Ключ);
		Если ПараметрыИни.Тип = "Загрузка" Тогда
			КлючИни = Кэш.СБИС.МодульОбъектаКлиент.СбисФормат("{Тип}_{Направление}_{Название}", Новый Структура("Заменить", ПараметрыИни));
		Иначе
			КлючИни = ПараметрыИни.Название;
		КонецЕсли;
		ВыбранныеНастройки.Данные.Ини.Вставить(КлючИни, КлючИЗначение.Значение)
	КонецЦикла;
	Если ДопПараметры.Свойство("СбисПараметры") Тогда
		Для Каждого СтруктураПараметра Из ДопПараметры.СбисПараметры Цикл
			Если	ВыбранныеНастройки.Данные.Параметры.Свойство(СтруктураПараметра.Ключ)
				И 	ВыбранныеНастройки.Данные.Параметры[СтруктураПараметра.Ключ] = СтруктураПараметра.Значение Тогда
				Продолжить;
			КонецЕсли;
			ВыбранныеНастройки.ПараметрыРаботы.СбисПараметры.Обновить = Истина;
			ВыбранныеНастройки.Данные.Параметры.Вставить(СтруктураПараметра.Ключ, СтруктураПараметра.Значение);
		КонецЦикла;
	КонецЕсли;
	Кэш.Ини = ВыбранныеНастройки.Данные.Ини;
	РезультатДозапроса = КлассIntegrationConnection_ДозапроситьИни(Кэш, ВыбранныеНастройки, Новый Структура, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатДозапроса, "ФайлыНастроекСервер.СформироватьСтруктуруДляТекущихНастроек");
	КонецЕсли;
	Возврат ВыбранныеНастройки;
КонецФункции

