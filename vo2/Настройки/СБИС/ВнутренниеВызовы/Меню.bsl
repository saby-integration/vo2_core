////////////////////////////////////////////////////

//Функция возвращает описание инишки меню для запроса методами получения данных
&НаКлиенте
Функция		СбисОписаниеИниМеню(Кэш, СбисМеню=Неопределено)
	Результат = СбисОписаниеИни(Кэш, СбисМеню);
	Результат.type = "Меню";
	Результат.name = "сбисМеню";
	Возврат Результат;
КонецФункции

//Формируем Сбис меню на основании переданного и внесенных изменений.
&НаКлиенте                                  
Функция		СформироватьМеню_Структура(Кэш, УстановленныеИни, БазовоеМеню=Неопределено, Отказ)//
	Если БазовоеМеню = Неопределено Тогда
		//Если меню отсутствует, то надо собрать его по алгоритму с нуля из инишек, которые имеются в наличии, если меню есть, то взять только отличия (то, что было переключено)
		БазовоеМеню	= Новый	Структура();
	КонецЕсли;
	СтруктураМеню = БазовоеМеню;
	Если СтруктураМеню = Неопределено Тогда
		СтруктураМеню = Новый Структура();
	КонецЕсли;

	//Сперва смотрим ини, которые есть в меню. Переставляем все флаги в базовом меню (по-идее, это меню от конфига)
	ПараметрыЗапроса= Новый Структура("СбисМеню, Искать, ДоступныеТипыИни", БазовоеМеню, Новый Структура("Включено", "1"), Кэш.КэшНастроек.ПараметрыНастроек.ДоступныеТипыИни);
	ДанныеСписка	= СформироватьСписокИни(Кэш, ПараметрыЗапроса, Отказ);
	Для	Каждого	КлючИЗначениеРаздел	Из	БазовоеМеню	Цикл//Переключить то, что установлено в типовых настройках
		Если Не ТипЗнч(КлючИЗначениеРаздел.Значение) = Тип("Структура") Тогда
			//На случай добавления в меню не структурных параметров, пропускаем их
			Продолжить;
		КонецЕсли;
		Для	Каждого	Ини	Из КлючИЗначениеРаздел.Значение Цикл
			//+++ МАИ 02.08.2021 На случай добавления в ини не структурных параметров, пропускаем их
			ИниВключена	= Неопределено;
			ИниТип		= Неопределено;
			Если	Не	ТипЗнч(Ини.Значение) = Тип("Структура")
				Или	Не	Ини.Значение.Свойство("enable", ИниВключена)
				Или	Не	Ини.Значение.Свойство("type",	ИниТип)
				Или		Кэш.КэшНастроек.ПараметрыНастроек.ДоступныеТипыИни.Найти(ИниТип) = Неопределено Тогда//Ини не из списка поддерживаемых обработкой, не трогаем 
				Продолжить;
			КонецЕсли;
			//--- МАИ 02.08.2021
			ИмяИниМеню	= Ини.Ключ;
			ИмяИниВо	= ПолучитьИмяИни(Кэш.КэшНастроек.ПараметрыНастроек, ИмяИниМеню);
			Добавить	= Ложь;
			Если		ИниВключена = "1"	Тогда
				Если	УстановленныеИни.Свойство(ИмяИниВо) Тогда
					Продолжить;//Уже включено.
				КонецЕсли;
				ИниВключена	= "0";
				Добавить	= Истина;
			ИначеЕсли	ИниВключена = "0"	Тогда
				Если Не УстановленныеИни.Свойство(ИмяИниВо) Тогда
					Продолжить;//Уже выключено.
				КонецЕсли;
				ИниВключена	= "1";
				Добавить	= Истина;
			КонецЕсли;
			Если Добавить Тогда
				Если Не	СтруктураМеню.Свойство(КлючИЗначениеРаздел.Ключ)	Тогда
					СтруктураМеню.Вставить(КлючИЗначениеРаздел.Ключ, Новый	Структура);
				КонецЕсли;
				Если Не СтруктураМеню[КлючИЗначениеРаздел.Ключ].Свойство(ИмяИниМеню)	Тогда
					СтруктураМеню[КлючИЗначениеРаздел.Ключ].Вставить(ИмяИниМеню, Новый Структура("enable", ИниВключена));
				Иначе
					СтруктураМеню[КлючИЗначениеРаздел.Ключ][ИмяИниМеню].enable = ИниВключена;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	//Смотрим установленные ини - возможно, добавлена не стандартная инишка
	Для	Каждого	КлючИЗначениеИни Из УстановленныеИни Цикл
		ИмяИниВО	= КлючИЗначениеИни.Ключ;
		ИмяИниМеню	= ПолучитьИмяИни(Кэш.КэшНастроек.ПараметрыНастроек, ИмяИниВО, "во_json");
		ПунктМеню	= СформироватьМеню_Элемент(КлючИЗначениеИни.Значение, ИмяИниМеню);
		Для	шаг = 1 По СтрЧислоСтрок(ПунктМеню.КнопкиРеестров)	Цикл
			ИмяКнопки	= СтрПолучитьСтроку(ПунктМеню.КнопкиРеестров, шаг);
			Раздел		= Неопределено;
			ПодРаздел	= Неопределено;
			Если Не СтруктураМеню.Свойство(ИмяКнопки, Раздел)	Тогда
				Раздел = Новый Структура();
				СтруктураМеню.Вставить(ИмяКнопки, Раздел);
			КонецЕсли;
			Если Раздел.Свойство(ИмяИниМеню, ПодРаздел)	Тогда
				ПодРаздел.enable = ПунктМеню.ЗначениеМеню.enable;
			Иначе
				Раздел.Вставить(ИмяИниМеню, ПунктМеню.ЗначениеМеню);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	СтруктураМеню.Вставить("РазделыВнешнейОбработки", Кэш.ФормаНастроекОбщее.СбисСформироватьСтруктуруРазделов(Кэш, УстановленныеИни, Новый Структура));
	
	Возврат	СтруктураМеню;
	
КонецФункции

&НаКлиенте                                  
Функция		СформироватьМеню_Элемент(ЗначениеИни, НазваниеИни)

	ИниВключена = "1";
    Если ЗначениеИни.Свойство("Реестр1С_Название")	Тогда
        ИмяРеестра = СтрЗаменить(ЗначениеИни.Реестр1С_Название.Значение,"'", "");
	Иначе	
		ИмяРеестра = НазваниеИни;
	КонецЕсли;
	КнопкиРеестров = "";
	Если ЗначениеИни.Свойство("РеестрСБИС_ИдМеню")	Тогда
        КнопкиРеестров = СтрЗаменить(СтрЗаменить(СтрЗаменить(ЗначениеИни.РеестрСБИС_ИдМеню.Значение,
						 " ", ""), 
						 "'", ""), 
						 ",", Символы.ПС);
	КонецЕсли;
	Если ЗначениеИни.Свойство("мДокумент") Тогда
		Для Каждого КлючИЗначениеМДокумент Из ЗначениеИни["мДокумент"] Цикл 
			ИмяРаздела	= Неопределено;
			РеестрИдМеню= КлючИЗначениеМДокумент.Значение;
			Если 	Не РеестрИдМеню.Свойство("Имя", ИмяРаздела)
				Или Не ИмяРаздела = "РеестрСБИС_ИдМеню" Тогда
				Продолжить;
			КонецЕсли;
			КнопкиРеестров = КнопкиРеестров 
						   + ?(ПустаяСтрока(КнопкиРеестров), "", ",") 
						   + СтрЗаменить(СтрЗаменить(СтрЗаменить(РеестрИдМеню["Значение"],
							 " ", ""), 
							 "'", ""), 
							 ",", Символы.ПС);
            Прервать;
		КонецЦикла;
	КонецЕсли;
	Если ПустаяСтрока(КнопкиРеестров) Тогда
		КнопкиРеестров = "Handling";
	КонецЕсли;
	Если ЗначениеИни.Свойство("РеестрПоУмолчанию")	Тогда
        ПоУмолчанию = СтрЗаменить(ЗначениеИни.РеестрПоУмолчанию.Значение, "'", "");
	Иначе	
        ПоУмолчанию = "0";
	КонецЕсли;
	Если		НазваниеИни = "Конфигурация"	Тогда
		ТипИни	= "Система";
	ИначеЕсли	ЗначениеИни.Свойство("ТипИни")	Тогда
		ТипИни	= СтрЗаменить(ЗначениеИни.ТипИни.Значение, "'", "");
	ИначеЕсли	НРег(Лев(НазваниеИни,8)) = "загрузка" Тогда
		МногострочнНазвание = СтрЗаменить(НазваниеИни, "_", Символы.ПС);
		ТипИни	= СтрПолучитьСтроку(МногострочнНазвание,1);
        Если НРег(СтрПолучитьСтроку(МногострочнНазвание,2)) = "исходящий" Тогда
            ТипИни = ТипИни + "Исходящих";
		КонецЕсли;
	ИначеЕсли	НРег(Лев(НазваниеИни,8)) = "выгрузка" Тогда
		МногострочнНазвание = СтрЗаменить(НазваниеИни, "_", Символы.ПС);
		ТипИни	= СтрПолучитьСтроку(МногострочнНазвание,1);
        Если НРег(СтрПолучитьСтроку(МногострочнНазвание,2)) = "входящий" Тогда
            ТипИни = ТипИни + "Входящих";
		КонецЕсли;
	ИначеЕсли	ЗначениеИни.Свойство("мДокумент")	Тогда
		ТипИни	= "Загрузка";
	Иначе
		ТипИни	= "Выгрузка";
	КонецЕсли;
	
	Возврат Новый Структура("КнопкиРеестров, ЗначениеМеню", КнопкиРеестров, Новый Структура("name,type,default,enable", ИмяРеестра, ТипИни, ПоУмолчанию, ИниВключена));

КонецФункции

