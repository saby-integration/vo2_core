////////////////////////////////////////////////////

//Функция добавляет выбранные настройки в список активных Вызов extSDK происходит на клиенте
&НаКлиенте
Функция		УстановитьФайлыНастроекНаСервере(МассивФайловДляУстановки, Кэш, СтруктураВыбранныхНастроек, НашаКонфигурация, Отказ)
		
	Если	Отказ
		Или	СтруктураВыбранныхНастроек	= Неопределено	Тогда//Настройки должны быть получены. Если нет, была ошибка
		Возврат	Неопределено;
	КонецЕсли;
	МассивДозапрос = Новый Массив;
	Для Каждого УстановленныйФайл Из МассивФайловДляУстановки Цикл
		МассивДозапрос.Добавить(СтрЗаменить(УстановленныйФайл.ИмяФайлаИсточника,".sbis3",""));
	КонецЦикла;
	
	КлассIntegrationConnection = НовыйIntegrationConnection(Кэш, Новый Структура("ПараметрыКонфигурации", НашаКонфигурация.ПараметрыКонфигурации), Отказ);
	Если Отказ Тогда
		Возврат	Кэш.ОбщиеФункции.СбисИсключение(КлассIntegrationConnection, "ФайлыНастроекСервер.УстановитьФайлыНастроекНаСервере");
	КонецЕсли;
	ИниКУстановке = КлассIntegrationConnection_ДозапроситьИни(Кэш, КлассIntegrationConnection, Новый Структура("СписокИни_ВО", МассивДозапрос), Отказ);
	Если Отказ Тогда
		Возврат	Кэш.ОбщиеФункции.СбисИсключение(ИниКУстановке, "ФайлыНастроекСервер.УстановитьФайлыНастроекНаСервере");
	КонецЕсли;
	Если Не ИниКУстановке.Количество() = МассивФайловДляУстановки.Количество() Тогда
		Отказ				= Истина;
		СтрокаОшибки		= "";
		ЧислоНеПолученных	=  МассивФайловДляУстановки.Количество() - ИниКУстановке.Количество();
		Возврат Кэш.ОбщиеФункции.СбисИсключение(, "ФайлыНастроекСервер.УстановитьФайлыНастроекНаСервере", 765, "Значение не найдено в таблице настроек", СтрокаОшибки);
		Для Каждого ЧистоеИмяИни Из МассивДозапрос Цикл
			Если Не ИниКУстановке.Свойство(ЧистоеИмяИни) Тогда
				СтрокаОшибки = СтрокаОшибки + ?(ПустаяСтрока(СтрокаОшибки), "", ", ") + ЧистоеИмяИни;
			КонецЕсли;	
			СтрокаОшибки = "Не удалось определить файл" + ?(ЧислоНеПолученных=1, " ", "ы ") + СтрокаОшибки + " для чтения."; 
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ИниДобавить Из ИниКУстановке Цикл
		ИниДобавить.Значение.СбисАвтообновление = СтруктураВыбранныхНастроек.ПараметрыРаботы.Автообновление;
		СтруктураВыбранныхНастроек.Данные.Ини.Вставить(ИниДобавить.Ключ, ИниДобавить.Значение);
	КонецЦикла;
	
	СтруктураВыбранныхНастроек.ПараметрыРаботы.ДатаИзмененияНастроек = ТекущаяДата();//Настройки меняются, а значит дата тоже	
	УстановленныеИни = КлассIntegrationConnection_СписокИниДляИнтерфейса(Кэш, СтруктураВыбранныхНастроек, Новый Структура, Отказ);
	Кэш.Вставить("ини", СтруктураВыбранныхНастроек.Данные.Ини);
	
	Возврат	УстановленныеИни;
	
КонецФункции

// Функция устанавливает стандартные настройки из списка подходящих конфигураций
&НаКлиенте
Функция		УстановитьСтандартныеНастройкиНаСервере(Кэш, Отказ, ДопПараметры=Неопределено)
	Перем	СписокИниУстановить,	// Определяет список ини к получению и установке.
			УстановитьИни,			// Определяет необходимость получения и установки ини.
			ПараметрыКонфигурацииУс,// service,subsystem и version устанавливаемой конфигурации
	        ПрименитьXSLT,			// Необходимость получения и применения стандартных xslt. Необходимо для возможности установить пользовательскую
									// конфу, если при получении что-то пошло не так и с сервера ничего не возвращается
			СтруктураКонфигураций, СписокТиповНастроек;
			
	Если Отказ Тогда
		Возврат Неопределено;
	ИначеЕсли ДопПараметры = Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	Если Не ДопПараметры.Свойство("СписокИни", СписокИниУстановить) Тогда
		СписокИниУстановить = Новый Массив;
	КонецЕсли;
	Если Не ДопПараметры.Свойство("УстановитьИни", УстановитьИни) Тогда
		УстановитьИни = Истина;
	КонецЕсли;
	Если Не ДопПараметры.Свойство("ПараметрыКонфигурации", ПараметрыКонфигурацииУс) Тогда
		ПараметрыКонфигурацииУс = Кэш.КэшНастроек.ПараметрыКонфигурации;
	КонецЕсли;
	Если Не ДопПараметры.Свойство("ПрименитьXSLT", ПрименитьXSLT) Тогда
		ПрименитьXSLT = Истина;
	КонецЕсли;
	ПараметрыКонфигурации = ПараметрыСтандартнойКонфигурации(Кэш, ПараметрыКонфигурацииУс);
	ГлавноеОкно = Кэш.ГлавноеОкно;
		
	//Ищем подходящую конфигурацию по параметрам системы: service,subsystem,version, получаем меню. Пока без данных ини.
	СписокИни = Новый Массив();
	СписокИни.Добавить(СбисОписаниеИниМеню(Кэш));
	ПараметрыПоиска = Новый Структура("СписокИни, ПараметрыКонфигурации, ДополнительныеПараметры", СписокИни,ПараметрыКонфигурации,Новый Структура("ТихийРежим,ЕстьРезультат", Истина, Истина));
	РезультатЗапроса = СбисПолучитьДанныеСервисаИнтеграции(Кэш, ПараметрыПоиска, Отказ);
	Если ПрименитьXSLT Тогда
		Если Кэш.Свойство("XSLT") Тогда
			// Очистим кэш XSLT, чтобы получать их поновой
			Кэш.XSLT = Новый Структура;
		КонецЕсли;
	КонецЕсли;
	
	//Вынесено 
	Если Отказ Тогда//По какой-то причине пришла ошибка и не удалось получить стандартные настройки.
		Возврат УстановитьПользовательскуюКонфигурациюНаСервере(Кэш, Отказ, ДопПараметры);
	КонецЕсли;
	
	СтандартнаяКонфигурация = РезультатЗапроса;
	
	//Заполняем список доступных конфигураций.
	Если	Не	Кэш.Свойство("Конфигурация", СтруктураКонфигураций)
		Или	Не	ЗначениеЗаполнено(СтруктураКонфигураций)	Тогда
		Если СписокТиповНастроек = Неопределено Тогда
			СписокТиповНастроек = СбисПолучитьСписокДоступныхНастроек(Кэш, Отказ);
		КонецЕсли;
		Если Отказ Тогда 
			Отказ = Ложь;
		Иначе
			ДанныеКонфигураций	= Кэш.ФормаНастроекОбщее.СформироватьСтруктуруКонфигураций(Кэш, СписокТиповНастроек);
			ГлавноеОкно.СбисЭлементФормы(ГлавноеОкно, "Конфигурация").СписокВыбора.ЗагрузитьЗначения(ДанныеКонфигураций.СписокВыбора);
			СтруктураКонфигураций = ДанныеКонфигураций.СтруктураКонфигураций;
			Кэш.Вставить("Конфигурация", СтруктураКонфигураций);		
		КонецЕсли;
	КонецЕсли;
	//Формируем префикс и устанавливаем на главном окне конфигурацию в левой колонке.
	Префикс = Кэш.ФормаНастроекОбщее.СформироватьПрефиксСистемыКлиент(СтандартнаяКонфигурация.ПараметрыКонфигурации);
	ИмяКонфигурации	= Кэш.ФормаНастроекОбщее.ОпределитьТипНастроекПоПрефиксу(СтандартнаяКонфигурация.ПараметрыКонфигурации.service, Префикс);
	
	УстановленныеИниФайлы = Неопределено;
	Если УстановитьИни Тогда//Смысл в том, что если мы делаем действие при установке файлов от другой конфигурации, то конвертация и установка ини нам не нужна - они всё равно потом отключаются и включаются только те, что были выбраны
		Кэш.ГлавноеОкно.СбисПоказатьСостояние("Формирование структуры настроек", Кэш.ГлавноеОкно);
		//Получаем включенные по-умолчанию ини.
		ПараметрыПоиска = Новый Структура("ПараметрыКонфигурации", СтандартнаяКонфигурация.ПараметрыКонфигурации);
		Если СписокИниУстановить.Количество() Тогда//Если указаны инишки к установке, то получаем и применяем. Иначе - по-умолчанию(установка только включенных)
			ПараметрыПоиска.Вставить("СписокИни", СписокИниУстановить);
		КонецЕсли;
		СтандартнаяКонфигурация = СбисПолучитьДанныеСервисаИнтеграции(Кэш, ПараметрыПоиска, Отказ);	
		Если Не Отказ Тогда
			УстановленныеИниФайлы	= ПолучитьМассивУстановленныхИниФайлов(СтандартнаяКонфигурация.Данные.Ини,СтандартнаяКонфигурация,Отказ);		//Массив установленных ини

			Кэш.Вставить("Ини", СтандартнаяКонфигурация.Данные.Ини);
			Кэш.ГлавноеОкно.СбисСпрятатьСостояние(Кэш.ГлавноеОкно);
		КонецЕсли;
	Иначе
		//СтандартнаяКонфигурация.Данные.Ини.Удалить("СбисМеню");
		УстановленныеИниФайлы = Новый Массив;
	КонецЕсли;
	
	СтандартнаяКонфигурация.Название = ИмяКонфигурации;
	ГлавноеОкно.Конфигурация = ИмяКонфигурации;
	Если ЗначениеЗаполнено(СтандартнаяКонфигурация) Тогда 
		Кэш.ФормаНастроекОбщее.НастройкиНазвание		= СтандартнаяКонфигурация.Название;
		Кэш.ФормаНастроекОбщее.НастройкиАвтообновление	= СтандартнаяКонфигурация.ПараметрыРаботы.Автообновление;
	КонецЕсли;
	
	СтандартнаяКонфигурация.ПараметрыРаботы.СбисМеню.Обновить = Истина;//Для типовой конфигурации обязательно вызываем формирование меню
	СтандартнаяКонфигурация.ПараметрыРаботы.Статус = "Новый";
	СтандартнаяКонфигурация.Идентификатор = "";
	
	Кэш.КэшНастроек.ИзмененияВНастройках = Истина;
	Кэш.КэшНастроек.Вставить("ВыбранныеНастройки", СтандартнаяКонфигурация);
	
	Возврат	УстановленныеИниФайлы;
	
КонецФункции

//Функция устанавливает стандартные настройки из списка подходящих конфигураций
&НаКлиенте
Функция		УстановитьПользовательскуюКонфигурациюНаСервере(Кэш, Отказ, ДополнительныеПараметры=Неопределено)
	
	ПараметрыПользовательскойСистемы = Кэш.ОбщиеФункции.СбисСкопироватьОбъектНаКлиенте(Кэш.КэшНастроек.ПараметрыКонфигурации);
	ПараметрыПользовательскойСистемы.Вставить("subsystem", "");
	ДополнительныеПараметрыПользовательское = Новый Структура;
	Если ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		Для Каждого КлючИЗначение Из Кэш.ОбщиеФункции.СбисСкопироватьОбъектНаКлиенте(ДополнительныеПараметры) Цикл
			ДополнительныеПараметрыПользовательское.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	ДополнительныеПараметрыПользовательское.Вставить("ПараметрыКонфигурации", ПараметрыПользовательскойСистемы);
	Если Отказ Тогда
		ДополнительныеПараметрыПользовательское.Вставить("ПрименитьXSLT", Ложь);
	КонецЕсли;
	Отказ = Ложь;
	//ДополнительныеПараметрыПользовательское.Вставить("ПрименитьПользовательскую", Истина);
	Возврат УстановитьСтандартныеНастройкиНаСервере(Кэш, Отказ, ДополнительныеПараметрыПользовательское);

КонецФункции

