////////////////////////////////////////////////////

&НаКлиенте
Функция		ПолучитьПараметрыСБИС(Кэш,Идентификатор,Отказ=Ложь) Экспорт
	
	СтруктураНастроекДефолт	= Кэш.ФормаНастроекОбщее.МеткиСтатусовПоУмолчанию();
	Если Отказ Тогда
		Возврат СтруктураНастроекДефолт;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Идентификатор) Тогда
		СтруктураНастроек = ПолучитьСБИСПараметрыСоединения(Кэш, Идентификатор, Отказ);
		//Если		ЗначениеЗаполнено(СтруктураНастроек)
		//	И Не	Отказ Тогда
		//	//Если есть параметры СБИС, то проверим наличие меток статусов и добавим дефолтные параметры при их отсутствии.
		//	Для Каждого КлючИЗначанение Из СтруктураНастроекДефолт Цикл
		//		Если СтруктураНастроек.Свойство(КлючИЗначанение.Ключ) Тогда
		//			Продолжить;
		//		КонецЕсли;
		//		СтруктураНастроек.Вставить(КлючИЗначанение.Ключ, КлючИЗначанение.Значение);
		//	КонецЦикла;
		//Иначе
		//	СтруктураНастроек = СтруктураНастроекДефолт;
		//КонецЕсли;
	Иначе
		СтруктураНастроек = СтруктураНастроекДефолт;
	КонецЕсли;
	
	Кэш.ФормаНастроекОбщее.ДополнитьПараметрыСбис(СтруктураНастроек, Кэш);
	
	Возврат	СтруктураНастроек;
	
КонецФункции

&НаКлиенте
Процедура	СбисУстановитьПараметры(Кэш, Идентификатор=Неопределено, СтруктураНастроек=Неопределено, Отказ=Ложь) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураНастроек = Неопределено Тогда
		СтруктураНастроек = ПолучитьПараметрыСБИС(Кэш, Идентификатор, Отказ);
	КонецЕсли;
	Кэш.ФормаНастроекОбщее.УстановитьСбисПараметры(Кэш, СтруктураНастроек);		
	
КонецПроцедуры

&НаКлиенте
Функция		СохранитьПараметрыСБИС(Кэш, СтруктураНастроек, Идентификатор, Отказ=Ложь) Экспорт
	Перем ВыбранныеНастройки;
	
	Если СтруктураНастроек = Неопределено Тогда
		//Нечего записывать
		Возврат	Неопределено;
	ИначеЕсли 	Кэш.КэшНастроек.Свойство("ВыбранныеНастройки", ВыбранныеНастройки) 
			И	ЗначениеЗаполнено(ВыбранныеНастройки)
			И	ВыбранныеНастройки.Идентификатор = Идентификатор Тогда
		//Есть настройки
	ИначеЕсли	ЗначениеЗаполнено(Идентификатор) Тогда
		//Поднимем класс
		ВыбранныеНастройки = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор", Идентификатор), Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(ВыбранныеНастройки, "ФайлыНастроекСервер.СохранитьПараметрыСБИС");
		КонецЕсли;
	Иначе
		//Хз что, ничего не делать
		Возврат Неопределено;
	КонецЕсли;	
	КлассIntegrationConnection_СохранитьСбисПараметры(Кэш, ВыбранныеНастройки, Новый Структура("ПараметрыДописать", СтруктураНастроек), Отказ);
		
КонецФункции

&НаКлиенте
Функция		УстановитьПараметрыИнтеграции_ДоВключения(Кэш, ПараметрыИнтеграции, ДополнительныеПараметры, ИзмененияПараметров=Ложь) Экспорт
	Перем АдресСервера;
	Если		ПараметрыИнтеграции.Свойство("АдресСервера", АдресСервера) 
		И  Не	АдресСервера = Кэш.СБИС.АдресСервера Тогда
		Кэш.СБИС.Вставить("АдресСервера", АдресСервера);//Восстановление значения адреса сервера по-умолчанию, если раньше было изменено.
		ИзмененияПараметров = Истина;
	КонецЕсли;
	Если ИзмененияПараметров Тогда//Были изменения в настройках, переопределить формы интеграции.
		//Переключили сервер и повторно идём на определение форм, только уже пропуская установку параметров
		Если ДополнительныеПараметры.ВызыватьРекурсивно	Тогда
			ДополнительныеПараметры.ВызыватьРекурсивно = Ложь;
			Возврат Кэш.ГлавноеОкно.ОпределитьИнтеграциюРабочиеФормы(Кэш,ПараметрыИнтеграции,ДополнительныеПараметры);
		Иначе
			Возврат Ложь;
		КонецЕсли;       
	КонецЕсли;
	Возврат	Истина;
	
КонецФункции

// Функция - Прочитать общую настройку подключения
//
// Параметры:
//  ОписаниеНастройкиВходящее	 - Структура -
//		Идентификатор	- идентификатор коннекшена, либо каталог настроек для определения коннекшена.
//		Ключ			- Ключ объекта разреза в корне (Saby)
//		КлючНастройки	- Ключ настройки
//		
//		
//  Кэш							 - Структура - кэш обработки
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция		ПрочитатьОбщуюНастройкуПодключения(ОписаниеНастройкиВходящее, Кэш) Экспорт
	Перем ИдентификаторНастроек, КлассПодключенияЗаписи, ИдЧтенияПараметров, Результат;
	
	Если Не ОписаниеНастройкиВходящее.Свойство("Идентификатор", ИдентификаторНастроек) Тогда
		ИдентификаторНастроек = Кэш.Парам.ИдентификаторНастроек;
	КонецЕсли;
	
	Отказ = Ложь;
	Если	Кэш.КэшНастроек.Свойство("ВыбранныеНастройки", КлассПодключенияЗаписи)
		И	ЗначениеЗаполнено(КлассПодключенияЗаписи)
		И	КлассПодключенияЗаписи.Идентификатор = ИдентификаторНастроек Тогда
	Иначе
		КлассПодключенияЗаписи = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор, ИнициироватьДанные", ИдентификаторНастроек, Отказ), Отказ);
		Если Отказ Тогда
			МодульОбъектаКлиент().ВызватьСбисИсключение(КлассПодключенияЗаписи, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
		КонецЕсли;
	КонецЕсли;
	
	Если КлассПодключенияЗаписи.ПараметрыРаботы.ТипНастроек = "Шаблон" Тогда
		ИдЧтенияПараметров = КлассПодключенияЗаписи.Идентификатор;
	ИначеЕсли ЗначениеЗаполнено(КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон) Тогда
		ИдЧтенияПараметров = КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон;
	Иначе
		Возврат Результат;
	КонецЕсли;
	СтруктураПараметров = ПолучитьСБИСПараметрыСоединения(Кэш, ИдЧтенияПараметров, Отказ);
	Если	ОписаниеНастройкиВходящее.Свойство("Ключ") Тогда
		СтруктураПараметров.Свойство(ОписаниеНастройкиВходящее.Ключ, Результат);
		Если		Результат = Неопределено Тогда
			Результат = Новый Структура;
		ИначеЕсли	ТипЗнч(Результат) = Тип("Строка")
			И	Лев(Результат, 1) = "{" Тогда
			Результат = Кэш.РаботаСJSON.сбисПрочитатьJSON(Результат);
		КонецЕсли;
	Иначе
		Результат = Новый Структура;
		Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
			Если	ТипЗнч(КлючИЗначение.Значение) = Тип("Строка")
				И	Лев(КлючИЗначение.Значение, 1) = "{" Тогда
				Результат.Вставить(КлючИЗначение.Ключ, Кэш.РаботаСJSON.сбисПрочитатьJSON(КлючИЗначение.Значение));
			Иначе
				Результат.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если		ОписаниеНастройкиВходящее.Свойство("КлючНастройки")
		И	Не	ОписаниеНастройкиВходящее.КлючНастройки = Неопределено Тогда
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Результат.Свойство(ОписаниеНастройкиВходящее.КлючНастройки, Результат);
			Если	ТипЗнч(Результат) = Тип("Строка")
				И	Лев(Результат, 1) = "{" Тогда
				Результат = Кэш.РаботаСJSON.сбисПрочитатьJSON(Результат);
			КонецЕсли;
		Иначе
			МодульОбъектаКлиент().ВызватьСбисИсключение(, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения",,,"Невозможно прочитать значение общего параметра.", ОписаниеНастройкиВходящее);
		КонецЕсли;
	ИначеЕсли ТипЗнч(Результат) = Тип("Структура") Тогда
		Для Каждого КлючИЗначениеРезультат Из Результат Цикл
			Если	ТипЗнч(КлючИЗначениеРезультат.Значение) = Тип("Строка")
				И	Лев(КлючИЗначениеРезультат.Значение, 1) = "{" Тогда
				Результат.Вставить(КлючИЗначениеРезультат.Ключ, Кэш.РаботаСJSON.сбисПрочитатьJSON(КлючИЗначениеРезультат.Значение))
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
		
КонецФункции

&НаКлиенте
Процедура	ЗаписатьОбщуюНастройкуПодключения(ОписаниеНастройкиВходящее, Кэш) Экспорт
	
	Перем ИдентификаторНастроек, КлассПодключенияЗаписи;
	
	Если Не ОписаниеНастройкиВходящее.Свойство("Идентификатор", ИдентификаторНастроек) Тогда
		ИдентификаторНастроек = Кэш.Парам.ИдентификаторНастроек;
	КонецЕсли;
	
	//Взять класс шаблона для записи. Если у подключения нет шаблона, либо он сам является шаблоном, то пишется на текущий класс.
	Отказ = Ложь;
	Если	Кэш.КэшНастроек.Свойство("ВыбранныеНастройки", КлассПодключенияЗаписи)
		И	ЗначениеЗаполнено(КлассПодключенияЗаписи)
		И	КлассПодключенияЗаписи.Идентификатор = ИдентификаторНастроек Тогда
	Иначе
		КлассПодключенияЗаписи = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор, ИнициироватьДанные", ИдентификаторНастроек, Ложь), Отказ);
		Если Отказ Тогда
			МодульОбъектаКлиент().ВызватьСбисИсключение(КлассПодключенияЗаписи, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон) Тогда
		КлассШаблон = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор, ИнициироватьДанные", КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон, Ложь), Отказ);
		Если Отказ Тогда
			МодульОбъектаКлиент().ВызватьСбисИсключение(КлассШаблон, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
		КонецЕсли;
		КлассПодключенияЗаписи = КлассШаблон;
	КонецЕсли;
	
	//Верхний уровень остаётся как есть, все составные параметры оборачиваются в JSON.
	ПараметрыПриведения = Новый Структура("Уровень, ОборачиватьУровень", 0, "2");
	ПараметрыДописать = ЗаписатьОбщуюНастройкуПодключения_ПривестиЗначения(ОписаниеНастройкиВходящее.Настройка, ПараметрыПриведения, Кэш);
	
	РезультатЗаписи = КлассIntegrationConnection_СохранитьСбисПараметры(Кэш, КлассПодключенияЗаписи, Новый Структура("ПараметрыДописать", ПараметрыДописать), Отказ);
	Если Отказ Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение(РезультатЗаписи, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция		ЗаписатьОбщуюНастройкуПодключения_ПривестиЗначения(ОписаниеНастройкиВходящее, КонетекстЗаписи, Кэш) Экспорт
	
	Если	ТипЗнч(ОписаниеНастройкиВходящее) = Тип("Структура") Тогда
		Если	Найти(КонетекстЗаписи.Уровень, КонетекстЗаписи.ОборачиватьУровень) Тогда
			Возврат Кэш.РаботаСJSON.ПреобразоватьЗначениеВJSON(ОписаниеНастройкиВходящее);
		КонецЕсли;
		Результат = Новый Структура;		
		//Обернуть составные настройки в строку, т.к. СБИС не заменяет настройку на БЛ, а обновляет её.
		КонтекстОбработки = Новый Структура("Уровень, ОборачиватьУровень", КонетекстЗаписи.Уровень + 1, КонетекстЗаписи.ОборачиватьУровень);
		Для Каждого ЭлементНастройки Из ОписаниеНастройкиВходящее Цикл
			Результат.Вставить(ЭлементНастройки.Ключ, ЗаписатьОбщуюНастройкуПодключения_ПривестиЗначения(ЭлементНастройки.Значение, КонтекстОбработки, Кэш));
		КонецЦикла;
	Иначе
		Результат = ОписаниеНастройкиВходящее;
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция		ЗаписатьОбщиеНастройкиПодключения(Кэш, СтруктураНастроек, ИдентификаторНастроек, Отказ=Ложь) Экспорт
	
	Перем КлассПодключенияЗаписи;
	
	Если	Кэш.КэшНастроек.Свойство("ВыбранныеНастройки", КлассПодключенияЗаписи)
		И	ЗначениеЗаполнено(КлассПодключенияЗаписи)
		И	КлассПодключенияЗаписи.Идентификатор = ИдентификаторНастроек Тогда
	Иначе
		КлассПодключенияЗаписи = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор, ИнициироватьДанные", ИдентификаторНастроек, Ложь), Отказ);
		Если Отказ Тогда
			Возврат МодульОбъектаКлиент().НовыйСбисИсключение(КлассПодключенияЗаписи, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон) Тогда
		КлассШаблон = НовыйIntegrationConnection(Кэш, Новый Структура("Идентификатор, ИнициироватьДанные", КлассПодключенияЗаписи.ПараметрыРаботы.Шаблон, Ложь), Отказ);
		Если Отказ Тогда
			Возврат МодульОбъектаКлиент().НовыйСбисИсключение(КлассШаблон, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
		КонецЕсли;
		КлассПодключенияЗаписи = КлассШаблон;
	КонецЕсли;
	КлассIntegrationConnection_СохранитьСбисПараметры(Кэш, КлассПодключенияЗаписи, Новый Структура("ПараметрыДописать", СтруктураНастроек), Отказ);
	Если Отказ Тогда
		Возврат МодульОбъектаКлиент().НовыйСбисИсключение(КлассШаблон, "ФайлыНастроекСервер.ЗаписатьОбщиеНастройкиПодключения");
	КонецЕсли;
	
КонецФункции

