
&НаКлиенте
Функция		КлассIntegrationConnection_СписокИниДляИнтерфейса(Кэш, КлассIntegrationConnection, ДопПараметры, Отказ)
	Перем ПрефиксИни;
	МассивУстановленныхИниФайлов = Новый Массив;
	КэшИни = КлассIntegrationConnection.Данные.Ини;
	
	ДатаНастроек		= КлассIntegrationConnection.ПараметрыРаботы.ДатаИзмененияНастроек;
	АвтообновлениеДефолт= КлассIntegrationConnection.ПараметрыРаботы.Автообновление;
	Если Не ДопПараметры.Свойство("ПрефиксИни", ПрефиксИни) Тогда
		ПрефиксИни = "";
	КонецЕсли;
	
	КлючиСтрок	= "Имяфайла,ИмяфайлаБезРасширения,ПутьДоИниФайла,ЕстьИзменения,Автообновление,Стандартная,Пользовательская,ДатаФайла,ДатаФайлаКлиент,Ини_ИмяИни,Ини_ИмяБезРасширения";
	СписокСтрок	= Новый	СписокЗначений();
	Для Каждого КлючИЗначениеИни Из КэшИни	Цикл
		ИмяИни		= КлючИЗначениеИни.Ключ;
		ЗначениеИни	= КлючИЗначениеИни.Значение;
		Если		ИмяИни	= "Конфигурация"	Тогда//Конфигурация вверху.
			ПолеСортировки = "а";
		ИначеЕсли Лев(ИмяИни, 8) = "Загрузка" Тогда
			ПолеСортировки = "я";
		Иначе
			ПолеСортировки = "б";
		КонецЕсли;
		СбисЕстьТиповая		= Ложь;
		СбисЕстьИзменения	= Ложь;
		СбисАвтообновление	= АвтообновлениеДефолт;
		Если ЗначениеЗаполнено(ЗначениеИни) Тогда				
			ЗначениеИни.Вставить("СбисОшибки",			Новый Массив());
			ЗначениеИни.Вставить("СбисПолноеИмяФайла",	СтрЗаменить(ИмяИни,"""",""));
			ЗначениеИни.Вставить("СбисИмяФайла",		СтрЗаменить(ИмяИни,"""",""));
			
			Если ЗначениеИни.Свойство("СбисЕстьТиповая")	Тогда
				СбисЕстьТиповая = ЗначениеИни.СбисЕстьТиповая;
			КонецЕсли;
			Если ЗначениеИни.Свойство("СбисЕстьИзменения")	Тогда
				СбисЕстьИзменения = ЗначениеИни.СбисЕстьИзменения;
			КонецЕсли;
			Если ЗначениеИни.Свойство("СбисАвтообновление")	Тогда
				СбисАвтообновление = ЗначениеИни.СбисАвтообновление; 
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока = Новый	Структура(КлючиСтрок);
		НоваяСтрока.ПутьДоИниФайла			= "";
		НоваяСтрока.ЕстьИзменения			= СбисЕстьИзменения;
		НоваяСтрока.Автообновление			= СбисАвтообновление;
		НоваяСтрока.Стандартная				= СбисЕстьТиповая;
		НоваяСтрока.Пользовательская		= НЕ СбисЕстьТиповая ИЛИ СбисЕстьИзменения;
		НоваяСтрока.Имяфайла				= ПрефиксИни + СтрЗаменить(ИмяИни + ?(СбисЕстьТиповая, ".sbis3", ""),"""","");
		НоваяСтрока.ИмяфайлаБезРасширения	= ПрефиксИни + СтрЗаменить(ИмяИни, """", "");
		НоваяСтрока.ДатаФайла				= ?(СбисЕстьТиповая,	ДатаНастроек, Неопределено);
		НоваяСтрока.ДатаФайлаКлиент			= ?(СбисЕстьИзменения,	ДатаНастроек, Неопределено);
		НоваяСтрока.Ини_ИмяИни				= СтрЗаменить(ИмяИни,"""","");
		НоваяСтрока.Ини_ИмяБезРасширения	= Сред(НоваяСтрока.ИмяФайла,1,Найти(НоваяСтрока.ИмяФайла,".")-1);
		
		СписокСтрок.Добавить(НоваяСтрока,  ПолеСортировки + НоваяСтрока.ИмяФайла);
	КонецЦикла;
	СписокСтрок.СортироватьПоПредставлению();
	Возврат	СписокСтрок.ВыгрузитьЗначения();
КонецФункции

&НаКлиенте
Процедура	КлассIntegrationConnection_ЗаполнитьРедакторИниПоКлассу(Кэш, КлассIntegrationConnection, ДопПараметры) Экспорт
	
	//Выберем базовую, для установленных настроек, конфигурацию и заполним список доступных конфигураций
	Кэш.Парам.НастройкиАвтообновление				= КлассIntegrationConnection.ПараметрыРаботы.Автообновление;
	Кэш.ФормаНастроекОбщее.НастройкиАвтообновление	= КлассIntegrationConnection.ПараметрыРаботы.Автообновление;
	Кэш.ФормаНастроекОбщее.НастройкиНазвание		= КлассIntegrationConnection.Название;
	
	Если Не Кэш.Свойство("Конфигурация") Тогда
		СписокТиповНастроек = СбисПолучитьСписокДоступныхНастроек(Кэш);
		Если СписокТиповНастроек = Неопределено Тогда
			МодульОбъектаКлиент().ВызватьСбисИсключение(, "ФайлыНастроекСервер.КлассIntegrationConnection.ЗаполнитьРедакторИниПоКлассу", 773,,"Отсутствует список доступных конфигураций");
		КонецЕсли;
		ДанныеКонфигураций = Кэш.ФормаНастроекОбщее.СформироватьСтруктуруКонфигураций(Кэш, СписокТиповНастроек);
		Кэш.Вставить("Конфигурация", ДанныеКонфигураций.СтруктураКонфигураций);
		Кэш.ГлавноеОкно.СбисЭлементФормы(Кэш.ФормаНастроекОбщее,"Конфигурация").СписокВыбора.ЗагрузитьЗначения(ДанныеКонфигураций.СписокВыбора);
	КонецЕсли;
	
	НашаКонфигурация = Кэш.ФормаНастроекОбщее.НайтиСтандартнуюКонфигурациюНастроек(КлассIntegrationConnection.ПараметрыКонфигурации);
	Кэш.ФормаНастроекОбщее.Конфигурация = Кэш.ФормаНастроекОбщее.ОпределитьТипНастроекПоПрефиксу(НашаКонфигурация.service, Кэш.ФормаНастроекОбщее.СформироватьПрефиксСистемыКлиент(НашаКонфигурация));
	
	//Флаг ставится если есть изменения в настройках, либо изменился коннекшен для пользователя в сохранённых.
	Кэш.КэшНастроек.ИзмененияВНастройках = Кэш.КэшНастроек.ИзмененияВНастройках Или Не СбисПолучитьИдентификаторНастроек(Кэш) = КлассIntegrationConnection.Идентификатор;
	
КонецПроцедуры

