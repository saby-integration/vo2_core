
//Вызывает установку настроек в кэше. Если все установлено, истина, если не устанавливалось, ложь. При ошибке - СбисИсключение
&НаКлиенте
Функция СбисУстановитьВыбранныеНастройки(Кэш, ПараметрыУстановки, ДополнительныеПараметры, Отказ) Экспорт
	Если Не Кэш.ИниВПорядке Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РезультатУстановки = Неопределено;
	//Проверка пройдена успешно, установим настройки.
	Если ПараметрыУстановки.НеобходимоОбновление Тогда
		//Надо обновить данные. Перезаполним меню аккордеона, параметры главного окна, изменим печатные формы
		РезультатУстановки = Кэш.ФормаНастроек.СбисОбновитьДанныеПоНастройкам(Кэш, ДополнительныеПараметры, Отказ);
		Если Отказ Тогда
			Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатУстановки, "ФормаНастроекОбщее.СбисУстановитьВыбранныеНастройки");
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыУстановки.Свойство("ИниСтруктурыРазделов") Тогда
		РезультатУстановки = УстановитьИниРазделов(Кэш, ПараметрыУстановки.ИниСтруктурыРазделов, ДополнительныеПараметры, Отказ);
	Иначе
		РезультатУстановки = Кэш.ФормаНастроек.УстановитьИниРазделов(Кэш, ДополнительныеПараметры, Отказ);
	КонецЕсли;
	Если Отказ Тогда
		//Не удалось создать ини для формирования аккордеона и параметров главного окна
		Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатУстановки, "ФормаНастроекОбщее.СбисУстановитьВыбранныеНастройки");
	КонецЕсли;
	РезультатУстановки = Кэш.ФормаНастроек.УстановитьИниКонфигурации(Кэш, ДополнительныеПараметры, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатУстановки, "ФормаНастроекОбщее.СбисУстановитьВыбранныеНастройки");
	КонецЕсли;
	Если Кэш.ини.Свойство("ДополнительныеСведения") Тогда
		
		Если Кэш.ини.ДополнительныеСведения = Неопределено Тогда
			РезультатУстановки = Кэш.ФормаНастроек.Ини(Кэш, "ДополнительныеСведения",,Отказ);
			
			Если Отказ Тогда
				Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатУстановки, "ФормаНастроекОбщее.СбисУстановитьИниДопСведений");
			КонецЕсли;
			
		Иначе
			РезультатУстановки = Кэш.ини.ДополнительныеСведения;
		КонецЕсли;

		РезультатУстановки = СбисУстановитьИниДопСведений(Кэш, РезультатУстановки, Отказ);
		
    	Если Отказ Тогда
    		Возврат Кэш.ОбщиеФункции.СбисИсключение(РезультатУстановки, "ФормаНастроекОбщее.СбисУстановитьИниДопСведений");
		КонецЕсли;
		
	КонецЕсли;    
	Возврат Истина;
КонецФункции

//Дополниетльные свойства

&НаКлиенте
Функция СбисУстановитьИниДопСведений(Кэш, ДополнительныеСведения, Отказ)
	
	Попытка
		НаборСвойств = ДополнительныеСведения.НаборСвойств;
	Исключение
		Возврат Истина;
	КонецПопытки;
	
	РассчитанныйНаборСвойств = ПолучитьРассчитанныеДанные(НаборСвойств, Отказ);
	
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.СбисИсключение(РассчитанныйНаборСвойств, "ФормаНастроекОбщее.СбисУстановитьИниДопСведений");
	КонецЕсли;
	
	МассивСоздаватьАвтоматически = ПолучитьМассивСоздаватьАвтоматически(Кэш, РассчитанныйНаборСвойств);
	
	Если МассивСоздаватьАвтоматически.Количество() = 0 Тогда
		Возврат Истина;	
	КонецЕсли;
	
	фрм = Кэш.ГлавноеОкно.СбисНайтиФормуФункции("СоздатьНаборСвойствПоМассиву", "Документ_Шаблон");
	Если фрм = Ложь Тогда
		Возврат Истина;
	КонецЕсли;
	
	ИниКонфигурация = ПолучитьИниКонфигурацияДляДополнительныхСведений(Кэш, Отказ);
	Результат = фрм.СоздатьНаборСвойствПоМассиву(РассчитанныйНаборСвойств, МассивСоздаватьАвтоматически, ИниКонфигурация, Отказ);
	
	Если Отказ Тогда
		Возврат Результат;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаКлиенте
Функция ПолучитьИниКонфигурацияДляДополнительныхСведений(Кэш, Отказ) Экспорт
	
	Если Кэш.ини.Свойство("Конфигурация") Тогда
		
		Если Кэш.ини.Конфигурация = Неопределено Тогда
			ИниКонфигурация = Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация",, Отказ);
			
			Если Отказ Тогда
				ИниКонфигурация = Новый Структура;
				Отказ = Ложь;
			КонецЕсли;
			
		Иначе
			ИниКонфигурация = Кэш.ини.Конфигурация;
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяПланаВидовХарактеристикСвойствОбъектов = Неопределено;
	ИниКонфигурация.Свойство("ИмяПланаВидовХарактеристикСвойствОбъектов", ИмяПланаВидовХарактеристикСвойствОбъектов);
	
	ИмяНаборыДополнительныхРеквизитовИСведений = Неопределено;
	ИниКонфигурация.Свойство("ИмяНаборыДополнительныхРеквизитовИСведений", ИмяНаборыДополнительныхРеквизитовИСведений);
	
	ИмяЗначенияСвойствОбъектов = Неопределено;
	ИниКонфигурация.Свойство("ИмяЗначенияСвойствОбъектов", ИмяЗначенияСвойствОбъектов);
	
	ИниКонфигурация = Новый Структура();
	ИниКонфигурация.Вставить("ИмяПланаВидовХарактеристикСвойствОбъектов", 	ИмяПланаВидовХарактеристикСвойствОбъектов);
	ИниКонфигурация.Вставить("ИмяНаборыДополнительныхРеквизитовИСведений", 	ИмяНаборыДополнительныхРеквизитовИСведений);
	ИниКонфигурация.Вставить("ИмяЗначенияСвойствОбъектов", 					ИмяЗначенияСвойствОбъектов);
	
	Возврат ИниКонфигурация;
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивСоздаватьАвтоматически(Кэш, СтруктураРасчитанныйНабор)
	
	МассивДопСведений = Новый Массив;
	
	Для Каждого ТекСтрока ИЗ СтруктураРасчитанныйНабор Цикл
		
		Если НЕ ТекСтрока.Значение.Свойство("СоздаватьАвтоматически") 
			ИЛИ ТекСтрока.Значение.СоздаватьАвтоматически = Ложь Тогда
			Продолжить;	
		КонецЕсли;
		
		Для Каждого ТекСвойство ИЗ ТекСтрока.Значение.мФайл Цикл
			МассивДопСведений.Добавить(Новый Структура("ИмяНабора, ИмяСвойства", ТекСтрока.Ключ, ТекСвойство.Ключ));
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат МассивДопСведений;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРассчитанныеДанные(Знач НаборСвойств, Отказ) Экспорт
	
	РассчитанныйНаборСвойств = Новый Структура();
	
	Попытка
		ПолучитьРассчитанныеДанныеНаСервере(НаборСвойств, РассчитанныйНаборСвойств, "", "", Истина);
	Исключение
		Отказ = Истина;
		Возврат ОписаниеОшибки();
	КонецПопытки;
	
	Возврат РассчитанныйНаборСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПолучитьРассчитанныеДанныеНаСервере(Данные, РассчитанныеДанные, ТекУзел, Родитель, Добавить)
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		
		Если Данные.Свойство("Значение") Тогда
			
			Если Данные.Свойство("Тип") Тогда
				РассчитанныеДанные = ПолучитьРассчитанноеЗначениеПоТипу(Данные.Значение, Данные.Тип);
				
				Если РассчитанныеДанные <> Неопределено Тогда
					Данные.Вставить("РассчитанноеЗначение", РассчитанныеДанные);
					Добавить = Истина;
				КонецЕсли;
			ИначеЕсли Лев(Данные.Значение, 1) = "'"Тогда
				РассчитанныеДанные = ПолучитьРассчитанноеЗначениеПоТипу(Данные.Значение);
				
				Если РассчитанныеДанные <> Неопределено Тогда
					Данные.Вставить("РассчитанноеЗначение", РассчитанныеДанные);
					Добавить = Истина;
				КонецЕсли;
			ИначеЕсли Лев(Данные.Значение, 1) = "[" Тогда
				РассчитанныеДанные = ПолучитьРассчитанноеЗначениеПоРодителю(Данные, Родитель);
				
				Если РассчитанныеДанные <> Неопределено Тогда
					Данные.Вставить("РассчитанноеЗначение", РассчитанныеДанные);
					Добавить = Истина;
				КонецЕсли;
			ИначеЕсли Данные.Свойство("Отбор") Тогда     
				 РассчитанныеДанные = ПолучитьРассчитанноеЗначениеПоОтбору(Данные);
				
				Если РассчитанныеДанные <> Неопределено Тогда
					Данные.Вставить("РассчитанноеЗначение", РассчитанныеДанные);  	
				КонецЕсли;	
			Иначе				
				РассчитанныеДанные = ПолучитьРассчитанноеЗначениеПоМенеджеру(Данные, Добавить);
				
				Если РассчитанныеДанные <> Неопределено Тогда
					Данные.Вставить("РассчитанноеЗначение", РассчитанныеДанные);
				КонецЕсли;
				
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
		
		Для Каждого ТекДанные ИЗ Данные Цикл
			ПолучитьРассчитанныеДанныеНаСервере(ТекДанные, РассчитанныеДанные, Данные[ТекДанные.Ключ], ТекУзел, Истина);
		КонецЦикла;
	
	ИначеЕсли ТипЗнч(Данные) = Тип("КлючИЗначение") Тогда
		Добавить = Истина;
		РассчитанныеДанные.Вставить(Данные.Ключ, Новый Структура());
    	ПолучитьРассчитанныеДанныеНаСервере(Данные.Значение, РассчитанныеДанные[Данные.Ключ], ТекУзел, Родитель, Добавить);
		
		Если НЕ Добавить Тогда
			РассчитанныеДанные.Удалить(Данные.Ключ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРассчитанноеЗначениеПоТипу(Знач Значение, Тип = "Строка")
	
	Значение = СтрЗаменить(Значение, "'", "");      
	Разделитель = "|";
	
	Попытка 
		Если Тип = "Строка" Тогда
			Возврат Строка(Значение);	
		КонецЕсли;
		
		Если Тип = "Булево" Тогда
			Возврат Булево(Значение);	
		КонецЕсли;
		
		Если Тип = "Число" Тогда
			Возврат Число(Значение);	
		КонецЕсли;
		
		Если Тип = "Дата" Тогда
			Возврат Дата(Значение);	
		КонецЕсли;
		
		Если Тип = "ОписаниеТипов" Тогда
			Возврат СбисПолучитьОписаниеТипов(Значение, Разделитель);
		КонецЕсли;
		
		Если Тип = "Массив" Тогда
			Возврат СбисПолучитьМассивИзСтроки(Значение, Разделитель);
		КонецЕсли;
		
		Возврат Неопределено;
		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;	
	КонецПопытки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРассчитанноеЗначениеПоРодителю(ТекЗначение, Родитель)
	
	ЗакрывающаяСкобка = Найти(ТекЗначение.Значение, "]");
	Источник = Сред(ТекЗначение.Значение, 2, ЗакрывающаяСкобка - 2);
	Реквизит = Сред(ТекЗначение.Значение, ЗакрывающаяСкобка + 2);
	
	Попытка 
		Возврат Родитель[Источник]["РассчитанноеЗначение"][Реквизит];
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРассчитанноеЗначениеПоОтбору(ТекЗначение)    
	Попытка
		ЗнПер = ТекЗначение.Значение; 
		Если Найти(ЗнПер,"Справочник")=1 Тогда	
			ИмяСпр=сред(ЗнПер,12);
			Отбор = Новый Структура;
			Для Каждого Элемент Из ТекЗначение.Отбор Цикл
				Отбор.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;
			Если Отбор.Количество()>0 Тогда
				Запрос = Новый Запрос;
				Запрос.Текст="ВЫБРАТЬ
				|Спр.Ссылка
				|ИЗ
				|   Справочник."+ИмяСпр+" КАК Спр
				|ГДЕ
				| ";
				Для Каждого Элемент Из Отбор Цикл
					ЗначениеЭлемента = Элемент.Значение;
					Если Метаданные.Справочники[ИмяСпр].Реквизиты.Найти(Элемент.Ключ)<>Неопределено Тогда
						ЗначениеЭлемента = Метаданные.Справочники[ИмяСпр].Реквизиты[Элемент.Ключ].Тип.ПривестиЗначение(Элемент.Значение);
					КонецЕсли;    
					Запрос.УстановитьПараметр(Элемент.Ключ, ЗначениеЭлемента);
					Запрос.Текст=Запрос.Текст+"Спр."+Элемент.Ключ+"=&"+Элемент.Ключ+" И ";
				КонецЦикла;
				Запрос.Текст = Запрос.Текст+ "НЕ Спр.ПометкаУдаления";
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Количество()>0 Тогда
					Пока Выборка.Следующий() Цикл
						РассчитанныеДанные = Выборка.Ссылка;
					КонецЦикла;
					Возврат РассчитанныеДанные;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 	
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРассчитанноеЗначениеПоМенеджеру(ТекЗначение, Добавить)
	
	Значение = СтрЗаменить(ТекЗначение.Значение, "'", ""); 
	МассивЗначений = СбисПолучитьМассивИзСтроки(Значение, ".");
	
	Попытка
		
		Если МассивЗначений.Количество() = 1 Тогда
			Возврат Неопределено;	
		ИначеЕсли МассивЗначений.Количество() = 2 Тогда 
			Добавить = Ложь;
			Возврат  Новый (МассивЗначений[0] + "Менеджер." + МассивЗначений[1]);
		ИначеЕсли МассивЗначений.Количество() = 3 Тогда
			Добавить = Истина;
			Менеджер = Новый (МассивЗначений[0] + "Менеджер." + МассивЗначений[1]);
			Возврат Менеджер[МассивЗначений[2]]; 
		КонецЕсли;
		
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Неопределено;	
	КонецПопытки;
	
	Возврат Неопределено;	
	
КонецФункции

&НаСервереБезКонтекста
Функция СбисПолучитьОписаниеТипов(Значение, Разделитель)
	
	МассивЗначений = СбисПолучитьМассивИзСтроки(Значение, Разделитель);
	
	Значение = МассивЗначений[0];
	
	Если МассивЗначений.Количество() = 1 Тогда
		Возврат Новый ОписаниеТипов(Значение);
	КонецЕсли;
	
	Если Значение = "Дата" Тогда
		
		Попытка
			ЧастьДаты = СокрЛП(МассивЗначений[1]); 
			КвалификаторыДаты = Новый КвалификаторыДаты(ЧастиДаты[ЧастьДаты]);
			
			Возврат Новый ОписаниеТипов(Значение,,,,,КвалификаторыДаты);
			
		Исключение
		КонецПопытки;
		
	ИначеЕсли Значение = "Строка" Тогда
		
		Попытка
			ДлинаСтроки = Число(МассивЗначений[1]); 
			КвалификаторыСтроки = Новый КвалификаторыСтроки(ДлинаСтроки);
			
			Возврат Новый ОписаниеТипов(Значение,,,,КвалификаторыСтроки);
			
		Исключение
		КонецПопытки;
		
	ИначеЕсли Значение = "Число" Тогда
		
		Попытка
			ЧислоРазрядов = Число(МассивЗначений[1]);
			ЧислоРазрядовДробнойЧасти = Число(МассивЗначений[2]); 
			ДопустимыйЗнакЧисла = ДопустимыйЗнак[МассивЗначений[3]]; 

			КвалификаторыЧисла = Новый КвалификаторыЧисла(ЧислоРазрядов, ЧислоРазрядовДробнойЧасти, ДопустимыйЗнакЧисла);
			
			Возврат Новый ОписаниеТипов(Значение,,,КвалификаторыЧисла);
			
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция СбисПолучитьМассивИзСтроки(Значение, Разделитель)
	
	МассивЗначений = Новый Массив();
	
	Значение = СтрЗаменить(Значение, Разделитель, Символы.ПС);
	
    Для Индекс = 1 ПО СтрЧислоСтрок(Значение) Цикл
		МассивЗначений.Добавить(СокрЛП(СтрПолучитьСтроку(Значение, Индекс)));
	КонецЦикла;
	
	Возврат МассивЗначений;
	
КонецФункции

