
// Процедура проверяет наличие отмеченных файлов и при необходимости задает вопрос о замене 	
&НаКлиенте
Процедура	сбисУстановитьФайлыНастроек(Кэш)												Экспорт
	
	ГлавноеОкно		= Кэш.ГлавноеОкно;
	ТабДоступФайлы	= ГлавноеОкно.ТабДоступныеИниФайлы;	
	
	ПараметрыОтбора	= Новый Структура();
	ПараметрыОтбора.Вставить("Фл",				Истина);
	Если	Не	ТабДоступФайлы.НайтиСтроки(ПараметрыОтбора).Количество()	Тогда//Отмеченных для переноса ини нет
		ПараметрыОтбора.Удалить("Фл");
	КонецЕсли;
	ПараметрыОтбора.Вставить("ЕстьФайлНастроек",	Истина);
	
	СтрокиОтмеченыУстановлены	= ТабДоступФайлы.НайтиСтроки(ПараметрыОтбора);
	
	ПараметрыОтбора.Вставить("ЕстьФайлНастроек",	Ложь);
	СтрокиОтмеченыНеУстановлены	= ТабДоступФайлы.НайтиСтроки(ПараметрыОтбора);
				
	ДопПараметры	= Новый	Структура();
	ДопПараметры.Вставить("СтрокиОтмеченыУстановлены",		СтрокиОтмеченыУстановлены);
	ДопПараметры.Вставить("СтрокиОтмеченыНеУстановлены",	СтрокиОтмеченыНеУстановлены);
	ДопПараметры.Вставить("Кэш",					Кэш);
	Если СтрокиОтмеченыУстановлены.Количество() Тогда
		ТекстВопроса= "Заменить установленные файлы?";
		Кнопки		= РежимДиалогаВопрос.ДаНетОтмена;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Ответ	= Вопрос(ТекстВопроса, Кнопки);
			сбисУстановитьФайлыНастроекЗавершение(Ответ, ДопПараметры);
		#Иначе
			ПоказатьВопрос(Новый ОписаниеОповещения("сбисУстановитьФайлыНастроекЗавершение",ЭтаФорма,ДопПараметры),ТекстВопроса, Кнопки, 0);
		#КонецЕсли
	Иначе
		сбисУстановитьФайлыНастроекЗавершение(КодВозвратаДиалога.ДА, ДопПараметры)
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирует структуру файлов для установки и вызывает серверную процедуру установки настроек 	
&НаКлиенте
Процедура	сбисУстановитьФайлыНастроекЗавершение(Ответ, ДопПараметры)								Экспорт
	
	Отказ	= Ложь;
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиОтмеченыУстановлены	= ДопПараметры.СтрокиОтмеченыУстановлены;
	СтрокиОтмеченыНеУстановлены	= ДопПараметры.СтрокиОтмеченыНеУстановлены;
	Кэш				= ДопПараметры.Кэш;
	
	МассивФайловДляУстановки = Новый Массив;
	
	Для Каждого строка Из	СтрокиОтмеченыНеУстановлены	Цикл
		СтруктураДанныхДляУстановки = Новый Структура;
		СтруктураДанныхДляУстановки.Вставить("ИмяФайлаИсточника",	Строка.ПолноеИмя);
		СтруктураДанныхДляУстановки.Вставить("ИмяФайлаПриемника",	Строка.ИмяФайла);
		СтруктураДанныхДляУстановки.Вставить("ДобавлятьВАрхив",		Ложь);
		МассивФайловДляУстановки.Добавить(СтруктураДанныхДляУстановки);
	КонецЦикла;
	
	Если Ответ = КодВозвратаДиалога.Да	Тогда
		Для Каждого строка Из	СтрокиОтмеченыУстановлены	Цикл
			СтруктураДанныхДляУстановки = Новый Структура;
			СтруктураДанныхДляУстановки.Вставить("ИмяФайлаИсточника",	Строка.ПолноеИмя);
			СтруктураДанныхДляУстановки.Вставить("ИмяФайлаПриемника",	Строка.ИмяФайла);
			СтруктураДанныхДляУстановки.Вставить("ДобавлятьВАрхив",		Истина);
			МассивФайловДляУстановки.Добавить(СтруктураДанныхДляУстановки);
		КонецЦикла;
	КонецЕсли;	
	
	Кэш.ФормаНастроек.сбисУстановитьВыбранныеФайлыНастроек(МассивФайловДляУстановки, Кэш, Кэш.Парам.ИдентификаторНастроек, Отказ);
	
КонецПроцедуры

//Процедура формирует структуру для формирования аккордеона и заполнения фильтров
&НаКлиенте
Функция		сбисСформироватьСтруктуруРазделов(Кэш, СтруктураНастроек, сбисДополнительныеПараметры) Экспорт
	
	СтруктураРезультат = Новый Структура;
	
	ОбработатьТипы		= Ложь;
	КлючиДляТипов		= Новый Массив;
	ПараметрыДляТипов	= Новый Массив;
	КлючиДляТипов.Добавить(Неопределено);
	ПараметрыДляТипов.Добавить(Новый Структура("Значение", ""));
	Если сбисДополнительныеПараметры.Свойство("ОбработкаТипов") Тогда
		Для Каждого КлючИЗначение Из сбисДополнительныеПараметры.ОбработкаТипов Цикл
			КлючиДляТипов.Добавить(Тип(КлючИЗначение.Ключ));
			ПараметрыДляТипов.Добавить(КлючИЗначение.Значение);
		КонецЦикла;
	КонецЕсли;	
	Для Каждого ТипДокумента Из СтруктураНастроек Цикл
		НазваниеРазделаВИни = Кэш.ОбщиеФункции.РассчитатьЗначение("ДокументРаздел", ТипДокумента.Значение);
		Если Не ЗначениеЗаполнено(НазваниеРазделаВИни) Тогда
			НазваниеРазделаВИни = "БезРаздела";
		КонецЕсли;
		СтруктураКнопкиРаздела = Новый Структура;
		СтруктураКнопкиРаздела.Вставить("Реестр1С_Тип",									Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_Тип",				ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("Реестр1С_Название",							Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_Название",		ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("Реестр1С_Меню",								Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_Меню",			ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("Реестр1С_МенюЗаголовок",						Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_МенюЗаголовок",	ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("Реестр1С_МетодНаАктивацию",					Кэш.ОбщиеФункции.РассчитатьЗначение("Реестр1С_МетодНаАктивацию",ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("РеестрПоУмолчанию",							Кэш.ОбщиеФункции.РассчитатьЗначение("РеестрПоУмолчанию",		ТипДокумента.Значение)="1");
		СтруктураКнопкиРаздела.Вставить("РеестрСБИС_Тип",								Кэш.ОбщиеФункции.РассчитатьЗначение("РеестрСБИС_Тип",			ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("Документ",										Кэш.ОбщиеФункции.РассчитатьЗначение("Документ",					ТипДокумента.Значение));
		СтруктураКнопкиРаздела.Вставить("ЕстьЗапросРеестра",		ЗначениеЗаполнено(	Кэш.ОбщиеФункции.РассчитатьЗначение("ЗапросСпискаДокументов",	ТипДокумента.Значение)));
		СтруктураКнопкиРаздела.Вставить("ЕстьСправочникТип",		ЗначениеЗаполнено(	Кэш.ОбщиеФункции.РассчитатьЗначение("СправочникТип",			ТипДокумента.Значение)));
		Для Каждого ЭлементРаздела Из СтруктураКнопкиРаздела Цикл
			сбисИндекс = КлючиДляТипов.Найти(ЭлементРаздела.Значение);
			Если сбисИндекс = Неопределено Тогда
				сбисИндекс = КлючиДляТипов.Найти(ТипЗнч(ЭлементРаздела.Значение));
			КонецЕсли;
			Если сбисИндекс = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ПараметрЗамены = Неопределено;
			Если		ПараметрыДляТипов[сбисИндекс].Свойство("Значение", ПараметрЗамены) Тогда
				СтруктураКнопкиРаздела[ЭлементРаздела.Ключ] = ПараметрЗамены;
			ИначеЕсли	ПараметрыДляТипов[сбисИндекс].Свойство("Формат", ПараметрЗамены) Тогда
				СтруктураКнопкиРаздела[ЭлементРаздела.Ключ] = Формат(ЭлементРаздела.Значение, ПараметрЗамены);
			КонецЕсли;
		КонецЦикла;
				
		МассивРазделов = СтрЗаменить(НазваниеРазделаВИни,",", Символы.ПС);			
		Для НомерСтрокиРазделов = 1 По СтрЧислоСтрок(МассивРазделов) Цикл
			сбисИмяРаздела		= СокрЛП(СтрПолучитьСтроку(МассивРазделов, НомерСтрокиРазделов));
			сбисЗначениеРаздела	= Неопределено;
			Если Не СтруктураРезультат.Свойство(сбисИмяРаздела, сбисЗначениеРаздела) Тогда
				сбисЗначениеРаздела = Новый Структура("Параметры, Список", Новый Структура, Новый Структура);
				СтруктураРезультат.Вставить(сбисИмяРаздела, сбисЗначениеРаздела);
			КонецЕсли;
			сбисЗначениеРаздела.Список.Вставить(ТипДокумента.Ключ, СтруктураКнопкиРаздела);
		КонецЦикла;
	КонецЦикла;
	Возврат СтруктураРезультат;
	
КонецФункции

&НаКлиенте
Функция		УстановитьПараметрыИнтеграции_УстановкаНастроек(Кэш, СтруктурасбисПараметров, ДополнительныеПараметры, Отказ) Экспорт
	
	//_ВремяОжидания = Кэш.ОбщиеФункции.РассчитатьЗначение("ВремяОжиданияОтвета", СтруктурасбисПараметров, Кэш);
	//Если ЗначениеЗаполнено(_ВремяОжидания) Тогда
	//	Если Не ТипЗнч(_ВремяОжидания) = Тип("Число") Тогда//Пробуем привести к числу
	//		Попытка
	//			_ВремяОжидания = Число(_ВремяОжидания);
	//		Исключение
	//			_ВремяОжидания = Неопределено;
	//		КонецПопытки;
	//	КонецЕсли;
	//	Если ТипЗнч(_ВремяОжидания) = Тип("Число") Тогда
	//		Кэш.Интеграция.сбисУстановитьВремяОжидания(Кэш, _ВремяОжидания);
	//	КонецЕсли;
	//КонецЕсли;
	Возврат Истина;
	
КонецФункции

