
&НаСервере
Функция		ВывестиПротоколПроверкиИниФайлов(Знач Ини, Знач ОшибкиИни=Неопределено, Знач ПараметрыПротокола) Экспорт
		
	Если ОшибкиИни = Неопределено Тогда
		ОшибкиИни = Ини;
	КонецЕсли;	
	
	// Функция формирует табличный документ протокола проверки файлов настроек	
	КоличествоРекурсийДляВыводаТаблиц = 1;
	
	Если ПараметрыПротокола.УправляемоеПриложение Тогда		
		сбисСтрокаВычислить = "РеквизитФормыВЗначение(""Объект"").ПолучитьМакет(""ПротоколПроверкиИниФайлов"")";
	Иначе
		сбисСтрокаВычислить = "ЭтотОбъект.ПолучитьМакет(""ПротоколПроверкиИниФайлов"")";
	КонецЕсли;
	МакетПротоколПроверки = Вычислить(сбисСтрокаВычислить);

	ТаблицаМетаданных = Новый ТаблицаЗначений;
	ТаблицаМетаданных.Колонки.Добавить("Объект");
	ТаблицаМетаданных.Колонки.Добавить("ИмяОбъекта");
	ТаблицаМетаданных.Колонки.Добавить("Синоним");
	ТаблицаМетаданных.Колонки.Добавить("ТипОбъекта");
	
	Таб = Новый ТабличныйДокумент;
	ОбластьЗаголовок = МакетПротоколПроверки.ПолучитьОбласть("ЗаголовокПротокола");
	ОбластьЗаголовок.Параметры.ЗаголовокКаталог = ПараметрыПротокола.ЗаголовокКаталог;
	ОбластьЗаголовок.Параметры.КаталогНастроек = ПараметрыПротокола.КаталогНастроек;
	ОбластьЗаголовок.Параметры.ДатаВремя = формат(ТекущаяДата());
	ОбластьЗаголовок.Параметры.Конфигурация = Метаданные.Синоним+" ("+Метаданные.Версия+")";
	ОбластьЗаголовок.Параметры.Версия = ПараметрыПротокола.Версия;
	ОбластьЗаголовок.Параметры.КонфигурацияФайловНастроек = ПараметрыПротокола.КонфигурацияФайловНастроек;
	Таб.Вывести(ОбластьЗаголовок);	
	
	ЗаполнитьТаблицуМетаданныхДляПротокола(ТаблицаМетаданных, Ини);
	
	СписокКопия = ТаблицаМетаданных.Скопировать();
	Для Каждого Элемент Из СписокКопия Цикл
		Если ТипЗнч(Элемент.Объект) = Тип("Структура") Тогда
			Для Каждого ЭлементаСтр из Элемент Цикл
				ТаблицаМетаданных = сбисСформироватьСписокМетаданных(ТаблицаМетаданных,ЭлементаСтр.Значение,КоличествоРекурсийДляВыводаТаблиц);
			КонецЦикла;	
		Иначе	
			ТаблицаМетаданных = сбисСформироватьСписокМетаданных(ТаблицаМетаданных,Элемент.Объект,КоличествоРекурсийДляВыводаТаблиц);
		КонецЕсли;	
	КонецЦикла;	
	
	ВывестиОшибки(МакетПротоколПроверки,Таб, ОшибкиИни);
	
	Если ТаблицаМетаданных.Количество() <> 0 Тогда
		ОбластьСправочнаяИнформация = МакетПротоколПроверки.ПолучитьОбласть("СправочнаяИнформация");
		Таб.Вывести(ОбластьСправочнаяИнформация);
	КонецЕсли;	
	
	сбисВывестиИнформациюПоМетаданным(ТаблицаМетаданных,МакетПротоколПроверки,Таб);
	сбисВывестиИнформацияПоОрганизациям(МакетПротоколПроверки,Таб);
	сбисВывестиСправочнуюИнформацию(МакетПротоколПроверки,Таб);
	
	Таб.ТолькоПросмотр        = Истина;
	Таб.ОтображатьГруппировки = Ложь;
	Таб.ОтображатьЗаголовки   = Ложь;
	Таб.ОтображатьСетку       = Ложь;
	Таб.АвтоМасштаб           = Истина;
	
	Возврат Таб;
	
КонецФункции

//группа функций и процедур для проверки ини файлов
&НаСервереБезКонтекста
Процедура	ЗаполнитьТаблицуМетаданныхДляПротокола(ТаблицаМетаданных, СлужебнаяСтруктура)
	// Функция заполняет таблицу с метаданными, по которым есть ошибки в файлах настроек 	
	Если ТипЗнч(СлужебнаяСтруктура) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого сбисФайл из СлужебнаяСтруктура Цикл		
		Если ТипЗнч(сбисФайл.Значение) = Тип("Структура") и (сбисФайл.Значение.Свойство("Ошибка")) Тогда
			Строка = сбисФайл.Значение.Ошибка;
			Если ТипЗнч(Строка.ИнформацияПоОбъекту) = Тип("Структура") Тогда
				Для каждого СтрокаИнфПоОб из Строка.ИнформацияПоОбъекту Цикл
					Если ТаблицаМетаданных.Найти(СтрокаИнфПоОб.Значение,"Объект")=Неопределено Тогда
						НоваяСтрока = ТаблицаМетаданных.Добавить();
						НоваяСтрока.Объект     = СтрокаИнфПоОб.Значение;
						НоваяСтрока.ИмяОбъекта = СтрокаИнфПоОб.Ключ;
						НоваяСтрока.ТипОбъекта = "";
					КонецЕсли;
				КонецЦикла;	
			Иначе	
				Если ТаблицаМетаданных.Найти(Строка.ИнформацияПоОбъекту,"Объект")=Неопределено и Строка.ИнформацияПоОбъекту<>Неопределено Тогда
					НоваяСтрока = ТаблицаМетаданных.Добавить();
					НоваяСтрока.Объект     = Строка.ИнформацияПоОбъекту;
					НоваяСтрока.ИмяОбъекта = Строка.ИмяОбъекта;
					НоваяСтрока.ТипОбъекта = "";
				КонецЕсли;
			КонецЕсли;					
		Иначе
			ЗаполнитьТаблицуМетаданныхДляПротокола(ТаблицаМетаданных, сбисФайл.Значение);
		КонецЕсли;	
	КонецЦикла;	 
	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура	ВывестиОшибку(МакетПротоколПроверки, Таб, Узлы, ини)
	// Процедура выводит строку в таблице ошибок в протоколе проверки	
	Если ТипЗнч(Узлы) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;	
	
	Если Узлы.Свойство("Ошибка") Тогда
		ОбластьСтрокаОшибки                             = МакетПротоколПроверки.ПолучитьОбласть("ОписаниеОшибки");
		ТекстОшибки 									= СтрЗаменить(Узлы.Ошибка.ТекстОшибки," |","");
		ОбластьСтрокаОшибки.Параметры.ТекстОшибки       = ТекстОшибки;
		ОбластьСтрокаОшибки.Параметры.ПолныйПуть 		= ?(Узлы.Ошибка.ПолныйПуть<>Неопределено,"("+Узлы.Ошибка.ПолныйПуть+")","");
		ОбластьСтрокаОшибки.Параметры.Таблица           = ?(Узлы.Ошибка.ИмяОбъекта<>Неопределено,"("+Узлы.Ошибка.ИмяОбъекта+")","");
		ОбластьСтрокаОшибки.Параметры.ЗначениеПараметра = Узлы.Ошибка.ЗначениеПараметра;
		Если Узлы.Ошибка.ИмяПараметра<>"" Тогда
			ОбластьСтрокаОшибки.Параметры.ИмяПараметра      = Узлы.Ошибка.ИмяПараметра;
			Если ини.Свойство(Узлы.Ошибка.ИмяПараметра) и ини[Узлы.Ошибка.ИмяПараметра].Свойство("Комментарий") Тогда
				ТекстКоммментария 								= ?(ЗначениеЗаполнено(ини[Узлы.Ошибка.ИмяПараметра]["Комментарий"]),ини[Узлы.Ошибка.ИмяПараметра]["Комментарий"],"");
				ОбластьСтрокаОшибки.Параметры.ОписаниеПараметра = ?(СокрЛП(ТекстКоммментария)<>"","("+ТекстКоммментария+")","");
				ОбластьСтрокаОшибки.Параметры.ЗначениеПараметра = ?(НРег(Узлы.Ошибка.ИмяПараметра)="текстзапроса","Смотрите значение параметра ""ТекстЗапроса"" в ini файле.",Узлы.Ошибка.ЗначениеПараметра);
			КонецЕсли;
		КонецЕсли;
		Таб.Вывести(ОбластьСтрокаОшибки);
	КонецЕсли;
	
	Если Узлы.Количество() <> 0 Тогда
		Для каждого Узел из Узлы Цикл
			ВывестиОшибку(МакетПротоколПроверки, Таб, Узел.Значение, ини);
		КонецЦикла; 
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура	ВывестиОшибки(МакетПротоколПроверки,Таб, Ини)
	// Процедура выводит строки в таблице ошибок в протоколе проверки файлов настроек	
	Для Каждого сбисФайл из ини Цикл
		
		Если сбисФайл.Значение.сбисОшибки.Количество() <> 0 Тогда //Есть системные ошибки
			ОбластьЗаголовокТаблицы = МакетПротоколПроверки.ПолучитьОбласть("ЗаголовокТаблицы");
			ОбластьЗаголовокТаблицы.Параметры.ИмяФайла = ини[сбисФайл.Ключ].сбисИмяФайла;
			Таб.Вывести(ОбластьЗаголовокТаблицы);
			Для каждого Ошибка из сбисФайл.Значение.сбисОшибки Цикл
				ОбластьСтрокаОшибки                             = МакетПротоколПроверки.ПолучитьОбласть("ОписаниеОшибки");
				ТекстОшибки 									= СтрЗаменить(Ошибка.ТекстОшибки," |","");
				ОбластьСтрокаОшибки.Параметры.ТекстОшибки       = ТекстОшибки;
				ОбластьСтрокаОшибки.Параметры.ПолныйПуть 		= Ошибка.ПолныйПуть;
				ОбластьСтрокаОшибки.Параметры.ИмяПараметра 		= Ошибка.ИмяПараметра;
				ОбластьСтрокаОшибки.Параметры.ОписаниеПараметра = "";
				ОбластьСтрокаОшибки.Параметры.ЗначениеПараметра = Ошибка.ЗначениеПараметра;
				Таб.Вывести(ОбластьСтрокаОшибки);
			КонецЦикла;	
		Иначе // если системных ошибок нет выводим ошибки ини
			Если ЕстьОшибкаВУзлеСлужебнойСтруктуры(сбисФайл.Значение) Тогда
				ОбластьЗаголовокТаблицы = МакетПротоколПроверки.ПолучитьОбласть("ЗаголовокТаблицы");
				ОбластьЗаголовокТаблицы.Параметры.ИмяФайла = ини[сбисФайл.Ключ].сбисИмяФайла;
				Таб.Вывести(ОбластьЗаголовокТаблицы);
			КонецЕсли;		
			ВывестиОшибку(МакетПротоколПроверки, Таб, сбисФайл.Значение, ини);
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция		сбисВывестиИнформациюПоМетаданнымСтрока(ТаблицаМетаданных,МакетПротоколПроверки,Таб, Идентификатор)
	// Функция выводит информацию о реквизитах тех метаданных, в которых были обнаружены ошибки
	Если Идентификатор="" Тогда
		Возврат Ложь;
	КонецЕсли;
	Док = Метаданные.НайтиПоПолномуИмени(Идентификатор);
	
	Попытка
		Для Каждого Реквизит Из Док.Реквизиты Цикл //перебор реквизитов объекта
			Если Найти(Реквизит.Тип,",")=0 Тогда
				ОбъектМ = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
				Если ОбъектМ<>Неопределено Тогда
					НайденнаяСтрока = ТаблицаМетаданных.Найти(ОбъектМ.ПолноеИмя(),"Объект");
				Иначе
					НайденнаяСтрока = Неопределено;
				КонецЕсли;
			Иначе
				НайденнаяСтрока = ТаблицаМетаданных.Найти(Реквизит.Синоним, "Объект");
			КонецЕсли;	
			ДопИнф = ?(НайденнаяСтрока<>Неопределено,НайденнаяСтрока.ИмяОбъекта,"");
			ДопИнф = ?(ДопИнф<>"","("+ДопИнф+")","");
			Если ДопИнф<>"" Тогда
				СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита1");
				СтрокаРеквизита.Параметры.ИмяРеквизита     = Реквизит.Имя;
				СтрокаРеквизита.Параметры.СинонимРеквизита = Реквизит.Синоним;
				СтрокаРеквизита.Параметры.СинонимТаблица = ДопИнф;
				Таб.Вывести(СтрокаРеквизита);
			Иначе
				СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
				СтрокаРеквизита.Параметры.ИмяРеквизита     = Реквизит.Имя;
				СтрокаРеквизита.Параметры.СинонимРеквизита = Реквизит.Синоним;
				Таб.Вывести(СтрокаРеквизита);
			КонецЕсли;	
		КонецЦикла;
		Попытка
			Для Каждого Реквизит Из Док.СтандартныеРеквизиты Цикл //перебор реквизитов объекта
				СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
				СтрокаРеквизита.Параметры.ИмяРеквизита     = Реквизит.Имя;
				СтрокаРеквизита.Параметры.СинонимРеквизита = Реквизит.Синоним;				
				Таб.Вывести(СтрокаРеквизита);
			КонецЦикла;
		Исключение
		КонецПопытки;
		Попытка
			Если Док.ТабличныеЧасти.Количество()>0 Тогда
				ГруппаРеквизитов = МакетПротоколПроверки.ПолучитьОбласть("ГруппаРеквизитов");
				ГруппаРеквизитов.Параметры.ГруппаРеквизитов     = "Табличные части";
				Таб.Вывести(ГруппаРеквизитов);
			КонецЕсли;
			Для Каждого Реквизит Из Док.ТабличныеЧасти Цикл //перебор реквизитов объекта
				СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
				СтрокаРеквизита.Параметры.ИмяРеквизита     = Реквизит.Имя;
				СтрокаРеквизита.Параметры.СинонимРеквизита = Реквизит.Синоним;				
				Таб.Вывести(СтрокаРеквизита);
			КонецЦикла;
		Исключение
		КонецПопытки;
		
	Исключение
		Попытка
			Для Каждого ЗначенияЭлементаМетаданных Из Док Цикл //перебор доступных объектов из списка объектов
				СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
				СтрокаРеквизита.Параметры.ИмяРеквизита     = ЗначенияЭлементаМетаданных.Имя;
				СтрокаРеквизита.Параметры.СинонимРеквизита = ЗначенияЭлементаМетаданных.Синоним;				
				Таб.Вывести(СтрокаРеквизита);
			КонецЦикла;	
		Исключение
			Попытка
				Если Найти(Нрег(Док.ПолноеИмя()),"перечисление")>0 Тогда
					Для Каждого ЗначениеПеречисления из Док.Объект.ЗначенияПеречисления Цикл
						СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
						СтрокаРеквизита.Параметры.ИмяРеквизита     = Строка(Док.ИмяОбъекта + "."+ЗначениеПеречисления.Имя);
						СтрокаРеквизита.Параметры.СинонимРеквизита = Строка(ЗначениеПеречисления.Синоним);				
						Таб.Вывести(СтрокаРеквизита);	
					КонецЦикла;	
				Иначе	
					СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
					СтрокаРеквизита.Параметры.ИмяРеквизита     = Строка(Док.ИмяОбъекта);
					СтрокаРеквизита.Параметры.СинонимРеквизита = Строка(Док.Синоним);				
					Таб.Вывести(СтрокаРеквизита);
				КонецЕсли;
			Исключение
				//Для Каждого Строка из Строка.Объект Цикл
				//Док = Метаданные.НайтиПоПолномуИмени(Строка.Значение);
				Если Найти(Док.ПолноеИмя(),"ТабличнаяЧасть")>0 Тогда
					НайденнаяСтрока = ТаблицаМетаданных.Найти(Док.ПолноеИмя(),"Объект");
					ДопИнф = ?(НайденнаяСтрока<>Неопределено,НайденнаяСтрока.ИмяОбъекта,"");
					ДопИнф = ?(ДопИнф<>"","("+ДопИнф+")","");
					Если ДопИнф<>"" Тогда
						СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита1");
						СтрокаРеквизита.Параметры.ИмяРеквизита     = Док.Имя;
						СтрокаРеквизита.Параметры.СинонимРеквизита = Док.Синоним;
						СтрокаРеквизита.Параметры.СинонимТаблица = ДопИнф;
						Таб.Вывести(СтрокаРеквизита);
					Иначе
						СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
						СтрокаРеквизита.Параметры.ИмяРеквизита     = Док.Имя;
						СтрокаРеквизита.Параметры.СинонимРеквизита = Док.Синоним;
						Таб.Вывести(СтрокаРеквизита);
					КонецЕсли;	
				Иначе	
					СтрокаРеквизита = МакетПротоколПроверки.ПолучитьОбласть("СтрокаРеквизита");
					СтрокаРеквизита.Параметры.ИмяРеквизита     = Строка(Док.Имя);
					СтрокаРеквизита.Параметры.СинонимРеквизита = Строка(Док.Синоним);				
					Таб.Вывести(СтрокаРеквизита);
				КонецЕсли;
				
				//КонецЦикла;
			КонецПопытки
			
		КонецПопытки;	
	КонецПопытки;	
	
КонецФункции	

&НаСервереБезКонтекста
Процедура	сбисВывестиИнформациюПоМетаданным(ТаблицаМетаданных,МакетПротоколПроверки,Таб)
	// Процедура перебирает таблицу метаданных, в которых были обнаружены ошибки и выводит информацию о реквизитах этих метаданных в табличный документ	
	Если ТаблицаМетаданных.Количество()<>0 Тогда
		
		Для Каждого Строка Из ТаблицаМетаданных Цикл
			ОбластьЗаголовокМетаданных                              = МакетПротоколПроверки.ПолучитьОбласть("ЗаголовокМетаданных");
			ОбластьЗаголовокМетаданных.Параметры.ИмяМетаданных      = Строка.ИмяОбъекта;
			Таб.Вывести(ОбластьЗаголовокМетаданных);
			
			Если ТипЗнч(Строка.Объект) = Тип("Структура") Тогда
				Для каждого СтрокаСтр из Строка.Объект Цикл
					сбисВывестиИнформациюПоМетаданнымСтрока(ТаблицаМетаданных, МакетПротоколПроверки, Таб, СтрокаСтр.Значение);
				КонецЦикла;
			Иначе
				сбисВывестиИнформациюПоМетаданнымСтрока(ТаблицаМетаданных, МакетПротоколПроверки, Таб, Строка.Объект);
			КонецЕсли;	
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция		сбисСформироватьСписокМетаданных(ТаблицаМетаданных,Идентификатор=Неопределено,УровеньВложенности)
	// Функция формирует таблицу с реквизитами метаданных для вывода в протоколе проверки	
	Если УровеньВложенности <> 0 Тогда
		Попытка
			ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(Идентификатор);
			Для Каждого Реквизит из ОбъектМетаданных.Реквизиты Цикл
				Если Найти(Реквизит.Тип,",")=0 Тогда //тип один
					ОбъектМ = Метаданные.НайтиПоТипу(Реквизит.Тип.Типы()[0]);
					Если ОбъектМ<>Неопределено и ТаблицаМетаданных.Найти(ОбъектМ.Полноеимя(),"Объект")=Неопределено Тогда
						Попытка                     
							НоваяСтрока = ТаблицаМетаданных.Добавить();
							НоваяСтрока.Объект=ОбъектМ.ПолноеИмя();
							НоваяСтрока.ИмяОбъекта=ОбъектМ.Имя;
							НоваяСтрока.Синоним = ОбъектМ.Синоним;
							НоваяСтрока.ТипОбъекта = "";
							сбисСформироватьСписокМетаданных(ТаблицаМетаданных,ОбъектМ.ПолноеИмя(),УровеньВложенности-1);
						Исключение
							Ошибка = описаниеОшибки();
							Сообщить(Ошибка);
							Сообщить(строка(ОбъектМ));
						КонецПопытки;
					Иначе	
					КонецЕсли;	                
				Иначе	 //несколько типов
					НоваяСтрока = ТаблицаМетаданных.Добавить();
					НоваяСтрока.Объект=Реквизит.ПолноеИмя();
					НоваяСтрока.ИмяОбъекта = Реквизит.Имя;
					НоваяСтрока.ТипОбъекта = Реквизит.Синоним;
					ТекстДляВывода= "Составной реквизит.";
					НоваяСтрока.Синоним = ТекстДляВывода;
				КонецЕсли;	 
			КонецЦикла;
			
		Исключение
			Попытка
				//если табличные части
				Для Каждого ТабличнаяЧасть из ОбъектМетаданных Цикл
					НоваяСтрока = ТаблицаМетаданных.Добавить();
					НоваяСтрока.Объект=ТабличнаяЧасть;
					НоваяСтрока.ИмяОбъекта=ТабличнаяЧасть.ПолноеИмя();
					НоваяСтрока.Синоним = ТабличнаяЧасть.Синоним;
					НоваяСтрока.ТипОбъекта = ТабличнаяЧасть;
					сбисСформироватьСписокМетаданных(ТаблицаМетаданных,ТабличнаяЧасть,УровеньВложенности-1);
				КонецЦикла;	
			Исключение
			КонецПопытки;	
			
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ТаблицаМетаданных;	
КОнецФункции

&НаСервереБезКонтекста
Процедура	сбисВывестиИнформацияПоОрганизациям(МакетПротоколПроверки,Таб)
	// Выводит информацию по организации в протокол проверки	
	Попытка
		Выборка = Справочники.Организации.Выбрать();
		ОбластьШапкаОрганизации = МакетПротоколПроверки.ПолучитьОбласть("ШапкаОрганизации");
		Таб.Вывести(ОбластьШапкаОрганизации);	
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			ОбластьСтрокаОрганизации = МакетПротоколПроверки.ПолучитьОбласть("СтрокаОрганизации");
			ОбластьСтрокаОрганизации.Параметры.НаименованиеОрганизации = ?(ЗначениеЗаполнено(Выборка.НаименованиеПолное),Выборка.НаименованиеПолное,Выборка.Наименование);
			ОбластьСтрокаОрганизации.Параметры.ИНН_КПП = Выборка.ИНН+" / "+Выборка.КПП;
			Таб.Вывести(ОбластьСтрокаОрганизации);	
		КонецЦикла;	
	Исключение	
	КонецПопытки	
КонецПроцедуры	

&НаСервереБезКонтекста
Процедура	сбисВывестиСправочнуюИнформацию(МакетПротоколПроверки,Таб)
	// Выводит справочную информацию в протокол проверки	
	ОбластьДокументация = МакетПротоколПроверки.ПолучитьОбласть("СсылкаДокументация");
	ОбластьДокументация.Параметры.ТекстСообщения = "Для исправления ошибок передайте протокол проверки техническому специалисту через Вашего менеджера.";
	Таб.Вывести(ОбластьДокументация);	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция	ЕстьОшибкаВУзлеСлужебнойСтруктуры(Узел)
	// Рекурсивно проверяет, есть ли в узле структуры ошибка, чтобы понимать какую структуру узлов надо создавать в пользовательском файле настроек	
	ЕстьОшибка = Ложь;
	Если ТипЗнч(Узел) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Узел.Свойство("Ошибка") Тогда
		Возврат Истина;
	КонецЕсли;	
	Для каждого ЭлементУзла из Узел Цикл		
		Если ТипЗнч(ЭлементУзла.Значение) = Тип("Структура") Тогда	
			Если ЭлементУзла.Значение.Свойство("Ошибка") Тогда
				Возврат Истина;
			КонецЕсли;	
			Если ЕстьОшибкаВУзлеСлужебнойСтруктуры(ЭлементУзла.Значение) Тогда //Проверяем вложенный узел
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;	
	
	Возврат ЕстьОшибка;
	
КонецФункции

