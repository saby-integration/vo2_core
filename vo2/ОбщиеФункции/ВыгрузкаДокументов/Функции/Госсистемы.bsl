   
// Функция возвращает особенность учета номенклатуры, для использования при формировании кодов маркировки и параметра ТовГрМарк,
// для конфигураций, определяющих особенность учета в перечислении
//
// Параметры:
//  Контекст - Структура - контекст рассчитываемого документа
// 
// Возвращаемое значение:
//  Строка - текстовое значение особенности учета
//
&НаКлиенте
Функция ОсобенностьУчетаУТ(Контекст) Экспорт  
	
	ОсобенностьУчета = ОсобенностьУчетаНоменклатурыУТ(Контекст);
			
	Возврат ОсобенностьУчета; 
	
КонецФункции    

// Функция возвращает особенность учета номенклатуры, для использования при формировании кодов маркировки и параметра ТовГрМарк,
// для конфигураций, определяющих особенность учета в реквизите элемента справочника
//
// Параметры:
//  Контекст - Структура - контекст рассчитываемого документа 
// 
// Возвращаемое значение:
//  Строка - текстовое значение особенности учета
//
&НаКлиенте
Функция ОсобенностьУчетаБП(Контекст) Экспорт  
	
	ОсобенностьУчета = ОсобенностьУчетаНоменклатурыБП(Контекст);
			
	Возврат ОсобенностьУчета; 
	
КонецФункции

// Функция возвращает значение для параметра ТовГрМарк по особенности учета номенклатуры
//
// Параметры:
//  Контекст - Структура - контекст рассчитываемого документа 
// 
// Возвращаемое значение:
//  Строка - текстовое значение параметра
//
&НаКлиенте
Функция ТоварнаяГруппаНоменклатуры(Контекст) Экспорт  
	
	ОсобенностьУчета = РассчитатьЗначение("ОсобенностьУчета", Контекст, МестныйКэш);
	
	Если ОсобенностьУчета = "Табак" Тогда
		Возврат "tobacco";   
	ИначеЕсли ОсобенностьУчета = "ТабачноеСырье" Тогда
		Возврат "tobaccoraw"; 
	ИначеЕсли ОсобенностьУчета = "Обувь" Тогда
		Возврат "shoes"; 
	ИначеЕсли ОсобенностьУчета = "ЛегкаяПромышленность" Тогда
		Возврат "lp";  
	ИначеЕсли ОсобенностьУчета = "Шины" Тогда
		Возврат "tires"; 
	ИначеЕсли ОсобенностьУчета = "Духи" Тогда
		Возврат "perfumery"; 
	ИначеЕсли ОсобенностьУчета = "Фотоаппараты" Тогда
		Возврат "electronics"; 
	ИначеЕсли ОсобенностьУчета = "Молоко" Тогда
		Возврат "milk";  
	ИначеЕсли ОсобенностьУчета = "Велосипеды" Тогда
		Возврат "bicycle";  
	ИначеЕсли ОсобенностьУчета = "КреслаКоляски" Тогда
		Возврат "wheelchairs";  
	ИначеЕсли ОсобенностьУчета = "АльтернативныйТабак" Тогда
		Возврат "otp";
	ИначеЕсли ОсобенностьУчета = "УпакованнаяВода" Тогда
		Возврат "water";  
	ИначеЕсли ОсобенностьУчета = "Пиво" Тогда
		Возврат "beer"; 
	ИначеЕсли ОсобенностьУчета = "НикотиносодержащаяПродукция" Тогда
		Возврат "ncp";
	ИначеЕсли ОсобенностьУчета = "Антисептики" Тогда	
		Возврат "antiseptic";
	ИначеЕсли ОсобенностьУчета = "ПродукцияИзНатуральногоМеха" Тогда	
		Возврат "furs";
	ИначеЕсли ОсобенностьУчета = "БАДы" Тогда	
		Возврат "bio";
	ИначеЕсли ОсобенностьУчета = "БезалкогольноеПиво" Тогда	
		Возврат "nabeer";
	ИначеЕсли ОсобенностьУчета = "Морепродукты" Тогда	
		Возврат "seafood"; 
	ИначеЕсли ОсобенностьУчета = "СоковаяПродукция" Тогда	
		Возврат "softdrinks"; 
	ИначеЕсли ОсобенностьУчета = "БезОсобенностейУчета" Тогда 
		Возврат "";
	Иначе
		Возврат "";  
	КонецЕсли;
	
КонецФункции   

// Функция возвращает особенность учета номенклатуры, для использования при формировании кодов маркировки и параметра ТовГрМарк,
// для конфигураций, определяющих особенность учета в перечислении
//
// Параметры:
//  Контекст - Структура - контекст рассчитываемого документа
// 
// Возвращаемое значение:
//  Строка - текстовое значение особенности учета
//
&НаСервере
Функция ОсобенностьУчетаНоменклатурыУТ(Контекст) Экспорт  
	
	ОсобенностьУчета = Контекст.ОсобенностьУчетаНоменклатуры; 	
	ИмяПеречисления = ОсобенностьУчета.Метаданные().Имя;
		
	Если НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("ТабачнаяПродукция") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].ТабачнаяПродукция Тогда
		Возврат "Табак";     
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Табак") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Табак Тогда
		Возврат "Табак"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("ОбувнаяПродукция") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].ОбувнаяПродукция Тогда
		Возврат "Обувь";   
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Обувь") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Обувь Тогда
		Возврат "Обувь";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("ЛегкаяПромышленность") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].ЛегкаяПромышленность Тогда
		Возврат "ЛегкаяПромышленность";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Шины") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Шины Тогда
		Возврат "Шины"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Духи") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Духи Тогда
		Возврат "Духи"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Фотоаппараты") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Фотоаппараты Тогда
		Возврат "Фотоаппараты"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("МолочнаяПродукцияПодконтрольнаяВЕТИС") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат "Молоко";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("МолочнаяПродукцияБезВЕТИС") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].МолочнаяПродукцияБезВЕТИС Тогда
		Возврат "Молоко"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Велосипеды") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Велосипеды Тогда
		Возврат "Велосипеды";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("КреслаКоляски") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].КреслаКоляски Тогда
		Возврат "КреслаКоляски";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("АльтернативныйТабак") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].АльтернативныйТабак Тогда
		Возврат "АльтернативныйТабак";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("УпакованнаяВода") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].УпакованнаяВода Тогда
		Возврат "УпакованнаяВода";  
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Пиво") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Пиво Тогда
		Возврат "Пиво"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("НикотиносодержащаяПродукция") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].НикотиносодержащаяПродукция Тогда
		Возврат "НикотиносодержащаяПродукция";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("Антисептики") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].Антисептики Тогда	
		Возврат "Антисептики";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("ПродукцияИзНатуральногоМеха") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].ПродукцияИзНатуральногоМеха Тогда	
		Возврат "ПродукцияИзНатуральногоМеха";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("БАДы") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].БАДы Тогда	
		Возврат "БАДы";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("БезалкогольноеПиво") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].БезалкогольноеПиво Тогда	
		Возврат "БезалкогольноеПиво";
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("МорепродуктыПодконтрольныеВЕТИС") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].МорепродуктыПодконтрольныеВЕТИС Тогда	
		Возврат "Морепродукты"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("СоковаяПродукция") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].СоковаяПродукция Тогда	
		Возврат "СоковаяПродукция"; 
	ИначеЕсли НЕ Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления.Найти("БезОсобенностейУчета") = Неопределено
		И ОсобенностьУчета = Перечисления[ИмяПеречисления].БезОсобенностейУчета Тогда 
		Возврат "";
	Иначе
		Возврат "";  
	КонецЕсли; 
	
КонецФункции

// Функция возвращает особенность учета номенклатуры, для использования при формировании кодов маркировки и параметра ТовГрМарк,
// для конфигураций, определяющих особенность учета в реквизите элемента справочника
//
// Параметры:
//  Контекст - Структура - контекст рассчитываемого документа 
// 
// Возвращаемое значение:
//  Строка - текстовое значение особенности учета
//
&НаСервере
Функция ОсобенностьУчетаНоменклатурыБП(Контекст) Экспорт 
	
	Номенклатура = Контекст.Номенклатура;
			
	Если НЕ Номенклатура.Метаданные().Реквизиты.Найти("ТабачнаяПродукция") = Неопределено И Номенклатура.ТабачнаяПродукция Тогда
		Возврат "Табак"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("ОбувнаяПродукция") = Неопределено И Номенклатура.ОбувнаяПродукция Тогда
		Возврат "Обувь"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("ЛегкаяПромышленность") = Неопределено И Номенклатура.ЛегкаяПромышленность Тогда
		Возврат "ЛегкаяПромышленность";  
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Шины") = Неопределено И Номенклатура.Шины Тогда
		Возврат "Шины"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Духи") = Неопределено И Номенклатура.Духи Тогда
		Возврат "Духи"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Фотоаппараты") = Неопределено И Номенклатура.Фотоаппараты Тогда
		Возврат "Фотоаппараты"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("МолочнаяПродукцияПодконтрольнаяВЕТИС") = Неопределено И Номенклатура.МолочнаяПродукцияПодконтрольнаяВЕТИС Тогда
		Возврат "Молоко";  
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("МолочнаяПродукцияБезВЕТИС") = Неопределено И Номенклатура.МолочнаяПродукцияБезВЕТИС Тогда
		Возврат "Молоко"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Велосипеды") = Неопределено И Номенклатура.Велосипеды Тогда
		Возврат "Велосипеды";  
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("КреслаКоляски") = Неопределено И Номенклатура.КреслаКоляски Тогда
		Возврат "КреслаКоляски";  
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("АльтернативныйТабак") = Неопределено И Номенклатура.АльтернативныйТабак Тогда
		Возврат "АльтернативныйТабак";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("УпакованнаяВода") = Неопределено И Номенклатура.УпакованнаяВода Тогда
		Возврат "УпакованнаяВода";  
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Пиво") = Неопределено И Номенклатура.Пиво Тогда
		Возврат "Пиво"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("НикотиносодержащаяПродукция") = Неопределено И Номенклатура.НикотиносодержащаяПродукция Тогда
		Возврат "НикотиносодержащаяПродукция";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("Антисептики") = Неопределено И Номенклатура.Антисептики Тогда	
		Возврат "Антисептики";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("ПродукцияИзНатуральногоМеха") = Неопределено И Номенклатура.ПродукцияИзНатуральногоМеха Тогда	
		Возврат "ПродукцияИзНатуральногоМеха";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("БАДы") = Неопределено И Номенклатура.БАДы Тогда	
		Возврат "БАДы";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("БезалкогольноеПиво") = Неопределено И Номенклатура.БезалкогольноеПиво Тогда	
		Возврат "БезалкогольноеПиво";
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("МорепродуктыПодконтрольныеВЕТИС") = Неопределено И Номенклатура.МорепродуктыПодконтрольныеВЕТИС Тогда	
		Возврат "Морепродукты"; 
	ИначеЕсли НЕ Номенклатура.Метаданные().Реквизиты.Найти("СоковаяПродукция") = Неопределено И Номенклатура.СоковаяПродукция Тогда	
		Возврат "СоковаяПродукция"; 
	Иначе
		Возврат "";  
	КонецЕсли;
	
КонецФункции

