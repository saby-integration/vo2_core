
// Функция - заполняет данные исходного документа для конфигураций УТ11, КА2, ERP2
//
// Параметры:
//  Контекст - Струкутра
// 
// Возвращаемое значение:
//  Ссылка - найденное основание
//
&НаКлиенте
Функция СбисЗаполнитьДанныеИсходногоДокументаУТ11(Контекст) Экспорт
	
	ДопПараметрыФормированияКОнтекста = Новый Структура("Отказ", Ложь);
    КонтекстДляСервера = СформироватьКонтекстЗаполненияДанныхИсходногоДокумента(Контекст, ДопПараметрыФормированияКОнтекста);

	Если ДопПараметрыФормированияКОнтекста.Отказ Тогда
		Сообщить(КонтекстДляСервера.details);
		ДокументПоступленияТип = Неопределено;
		Если Не Контекст.Переменные.Свойство("ТипДокументаОснования", ДокументПоступленияТип) Тогда
			ДокументПоступленияТип = "ПоступлениеТоваровУслуг";
		КонецЕсли;

		сбисОписаниеПустойСсылкиОбъекта = Новый Структура("Тип, Ключ, Значение", "Документ." + ДокументПоступленияТип, "ПустаяСсылка"); 
		сбисОписаниеПустойСсылкиОбъекта.Значение = сбисПолучитьЗначениеРассчитанногоОбъекта(МестныйКэш, сбисОписаниеПустойСсылкиОбъекта);
		Если сбисОписаниеПустойСсылкиОбъекта.Значение = Неопределено Тогда
			сбисОписаниеПустойСсылкиОбъекта.Значение = Объект1СПоОписанию(сбисОписаниеПустойСсылкиОбъекта, сбисОписаниеПустойСсылкиОбъекта.Ключ);;
			сбисЗакэшироватьЗначениеРассчитанногоОбъекта(МестныйКэш, сбисОписаниеПустойСсылкиОбъекта);
		КонецЕсли;
		Возврат сбисОписаниеПустойСсылкиОбъекта.Значение;
	КонецЕсли;
	КонтекстДляСервера.Вставить("ТекстЗапросаШаблон", 
	"ВЫБРАТЬ
    |	СчетФактураПолученныйДокументыОснования.ДокументОснование.Ссылка КАК Ссылка
    |ИЗ
    |	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
    |ГДЕ
    |	СчетФактураПолученныйДокументыОснования.ДокументОснование.{РеквизитНомерВх} В ИЕРАРХИИ (&Номер)
    |	И СчетФактураПолученныйДокументыОснования.ДокументОснование.{РеквизитДатаВх} МЕЖДУ &ДатаОт И &ДатаДо
    |	И СчетФактураПолученныйДокументыОснования.ДокументОснование.Контрагент = &Контрагент");
	
	РезультатЗаполнения = сбисЗаполнитьДанныеИсходногоДокументаНаСервере(КонтекстДляСервера, ДопПараметрыФормированияКОнтекста.Отказ);
	Если ДопПараметрыФормированияКОнтекста.Отказ Тогда
		Сообщить(РезультатЗаполнения.details);
		сбисОписаниеПустойСсылкиОбъекта = Новый Структура("Тип, Ключ, Значение", "Документ." + КонтекстДляСервера.ТипОснования, "ПустаяСсылка"); 
		сбисОписаниеПустойСсылкиОбъекта.Значение = сбисПолучитьЗначениеРассчитанногоОбъекта(МестныйКэш, сбисОписаниеПустойСсылкиОбъекта);
		Если сбисОписаниеПустойСсылкиОбъекта.Значение = Неопределено Тогда
			сбисОписаниеПустойСсылкиОбъекта.Значение = Объект1СПоОписанию(сбисОписаниеПустойСсылкиОбъекта, сбисОписаниеПустойСсылкиОбъекта.Ключ);
			сбисЗакэшироватьЗначениеРассчитанногоОбъекта(МестныйКэш, сбисОписаниеПустойСсылкиОбъекта);
		КонецЕсли;
		Возврат сбисОписаниеПустойСсылкиОбъекта.Значение;
	КонецЕсли;
	Для Каждого ТабЧастьЗаполнена Из РезультатЗаполнения.ТЧ Цикл
		Контекст.Документ[ТабЧастьЗаполнена.Ключ] = ТабЧастьЗаполнена.Значение;
	КонецЦикла;
	Возврат РезультатЗаполнения.ОснованиеСсылка;
	
КонецФункции

// Функция возвращает единицу измерения для номенклатуры в загружаемом документе УТ11, КА2, ERP2 
//
// Параметры:
//  Контекст - 	 - 
// 
// Возвращаемое значение:
//   - 
// найденная единица измерения
&НаКлиенте
Функция ЗаполнитьЕдиницуИзмеренияНоменклатурыУТ11(Контекст) Экспорт
	Перем ИмяРеквизитаКлассификатор, КодЕдиницыПоОКЕИ;
	
	КонтекстДляСервера = Новый Структура("Ини", Новый Структура);
	Если Контекст.Ини.Свойство("КлассификаторЕдиницИзмерения") Тогда
		КонтекстДляСервера.Ини.Вставить("КлассификаторЕдиницИзмерения", Контекст.Ини.КлассификаторЕдиницИзмерения);
	КонецЕсли;
	Если Контекст.Ини.Свойство("СправочникЕдиницИзмерения") Тогда
		КонтекстДляСервера.Ини.Вставить("СправочникЕдиницИзмерения", Контекст.Ини.СправочникЕдиницИзмерения);
	КонецЕсли;
	Если Не Контекст.Переменные.Свойство("ИмяРеквизитаКлассификатор", ИмяРеквизитаКлассификатор) Тогда
		ИмяРеквизитаКлассификатор = "ЕдиницаПоКлассификатору";
	КонецЕсли;
    КонтекстДляСервера.Вставить("ИмяРеквизитаКлассификатор",ИмяРеквизитаКлассификатор);
	КонтекстДляСервера.Вставить("Владелец",					Контекст.СтрТабл.Номенклатура);
	
	ИмяРеквизита = Сред(Контекст.ТекущееПолеИни.Значение, Найти(Контекст.ТекущееПолеИни.Значение,".") + 1);
	Если Не Контекст.СтрТабл.Свойство(ИмяРеквизита, КодЕдиницыПоОКЕИ) Тогда
		КодЕдиницыПоОКЕИ = Контекст.СтрТабл.ЕдиницаИзмерения;
	КонецЕсли;
	КонтекстДляСервера.Вставить("ОКЕИ",	КодЕдиницыПоОКЕИ);

	Попытка
		Возврат ЗаполнитьЕдиницуИзмененияНоменклатурыУТ11НаСервере(КонтекстДляСервера);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		СбисИсключение = МодульОбъектаКлиент().НовыйСбисИсключение(ИнфоОбОшибке, "ОбщиеФункции.ЗаполнитьЕдиницуИзмеренияНоменклатурыУТ11");
		Сообщить(СбисИсключение.details);
	КонецПопытки;
	
КонецФункции

&НаСервере
Функция ЗаполнитьЕдиницуИзмененияНоменклатурыУТ11НаСервере(Контекст)
	
	КлассификаторЕИ	= РассчитатьЗначениеНаСервере("КлассификаторЕдиницИзмерения",Контекст);
	СпрЕИ			= РассчитатьЗначениеНаСервере("СправочникЕдиницИзмерения",Контекст);
	// d.ch 29.07.19
	// получаем название реквизита табличной части документа куда будем записывать единицу измерения
	// берем рассчитанное значение из СтрТабл по имени реквизита
	Попытка 
		ЕИ = КлассификаторЕИ.НайтиПоКоду(Контекст.ОКЕИ, Истина);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаСервер().ВызватьСбисИсключениеСервер(ИнфоОбОшибке, "ОбщиеФункции.ЗаполнитьЕдиницуИзмененияНоменклатурыУТ11НаСервере");
	КонецПопытки;
	
	Если ЕИ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//Пробуем подобрать упаковку.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕдиницыИзмерения.Ссылка
		|ИЗ
		|	Справочник.{СпрЕИ} КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.Владелец = &Владелец
		|	И ЕдиницыИзмерения.{ИмяРеквизитаКлассификатор} = &ЕИ
		|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	Запрос.Текст = СтрЗаменить(СтрЗаменить(Запрос.Текст, 
					"{ИмяРеквизитаКлассификатор}",	Контекст.ИмяРеквизитаКлассификатор),
					"{СпрЕИ}",						СпрЕИ.ПустаяСсылка().Метаданные().Имя);
	
	Запрос.УстановитьПараметр("Владелец",	Контекст.Владелец);
	Запрос.УстановитьПараметр("ЕИ",			ЕИ);
	
	РезультатЗапроса 		= Запрос.Выполнить();		
	ВыборкаДетальныеЗаписи	= РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	ИначеЕсли КлассификаторЕИ = СпрЕИ Тогда
		//Упаковки нет, но это один справочник. Возьмём единицу по классификатору как упаковку
		Возврат ЕИ;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

