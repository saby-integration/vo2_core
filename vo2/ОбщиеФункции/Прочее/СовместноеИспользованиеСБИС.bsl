
////////Совместное использование СБИС и 1С VII///////

&НаКлиенте 
Функция ВыполнитьОбработкуАпи3Объекта(Кэш, ПараметрыОбработкиОбъекта, Отказ) Экспорт 
	Результат = ВыполнитьОбработкуАпи3ОбъектаНаСервере(ПараметрыОбработкиОбъекта, Отказ);
	Если Отказ Тогда
		Результат = СбисИсключение(Результат, "РаботаСДокументами1С.ВыполнитьОбработкуАпи3ОбъектаНаСервере");
		Результат = СбисИсключение(Результат, "РаботаСДокументами1С.ВыполнитьОбработкуАпи3Объекта");
	КонецЕсли;
	Возврат Результат;
КонецФункции

//Форматирование структуры объекта для загрузки в 1С. Получение объектов по идентификаторам, формирование структуры типов
// СтруктураОбъекта - Структура, соответствующая загружаемому объекту, с определением типов данных.
&НаКлиенте 
Функция ПодготовитьСтруктуруОбъектаДляЗаписив1С(Кэш, СтруктураОбъекта, Отказ) Экспорт
	Попытка
		Возврат ПодготовитьСтруктуруОбъектаДляЗаписиВ1ССервер(СтруктураОбъекта);
	Исключение
		Отказ = Истина;
		Возврат СбисИсключение(, "РаботаСДокументами.ПодготовитьСтруктуруОбъектаДляЗаписив1С", 773, ,ОписаниеОшибки());
	КонецПопытки;
КонецФункции

//Выполняет подготовку типов к записи, проверку наличия требуемого объекта (досоздаёт при необходимости), выполняет обновление данных в объекте
&НаСервереБезКонтекста
Функция ВыполнитьОбработкуАпи3ОбъектаНаСервере(Знач ПараметрыОбработкиОбъекта, Отказ);
	//Подготовим значения
	Попытка
		ПараметрыОбработкиОбъекта.СтруктураОбъекта = ПодготовитьСтруктуруОбъектаДляЗаписиВ1ССервер(ПараметрыОбработкиОбъекта.СтруктураОбъекта);
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details,methodName", 773, "Неизвестная ошибка при выполнении метода", ИнформацияОбОшибке().Описание, "РаботаСДокументами.ПодготовитьСтруктуруОбъектаДляЗаписиВ1ССервер");
	КонецПопытки;
	//Получим объект 1С на редактирование
	ДанныеОбъекта1С = СбисПолучитьЗначениеОбъекта(ПараметрыОбработкиОбъекта, Отказ);
	Если Отказ Тогда
		ДанныеОбъекта1С.Вставить("methodName", "РаботаСДокументами1С.СбисПолучитьЗначениеОбъекта");
		Возврат ДанныеОбъекта1С;
	КонецЕсли;
	//Обновим по сформированной структуре
	РезультатЗаписи = ЗаполнитьИЗаписатьОбъектИзСтруктуры(ДанныеОбъекта1С.Объект, ПараметрыОбработкиОбъекта.СтруктураОбъекта, Отказ);
	Если Отказ Тогда
		РезультатЗаписи.Вставить("methodName", "РаботаСДокументами1С.ЗаполнитьИЗаписатьОбъектИзСтруктуры");
		Возврат РезультатЗаписи;
	КонецЕсли;
	ДанныеОбъекта1С.Удалить("Объект");
	ДанныеОбъекта1С.Вставить("Ссылка", РезультатЗаписи);
	Возврат ДанныеОбъекта1С;	
КонецФункции

&НаСервереБезКонтекста
Функция ПодготовитьСтруктуруОбъектаДляЗаписиВ1ССервер(СтруктураОбъекта, ПутьКУзлу="СтруктураОбъекта")
	ИтоговаяСтруктураОбъекта = Новый Структура;
	Для Каждого КлючИЗначение Из СтруктураОбъекта Цикл
		Если 	Не ТипЗнч(КлючИЗначение.Значение) = Тип("Структура")
			Или	Не КлючИЗначение.Значение.Свойство("Тип")
			Или	Не КлючИЗначение.Значение.Свойство("Значение")
			Или	Не ТипЗнч(КлючИЗначение.Значение.Тип) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
		
		СбисТипРеквизита		= НРег(КлючИЗначение.Значение.Тип);
		СбисЗначениеРеквизита	= КлючИЗначение.Значение.Значение;
		
		Если		ТипЗнч(СбисЗначениеРеквизита) = Тип("Строка") Тогда
			Если		СбисТипРеквизита = "строка" Тогда
				ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, СбисЗначениеРеквизита);
			ИначеЕсли	СбисТипРеквизита = "число" Тогда
				ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, Число(СбисЗначениеРеквизита));
			ИначеЕсли 	СбисТипРеквизита = "дата" Тогда
				Если СбисЗначениеРеквизита = "0001-01-01T00:00:00" Тогда
					Продолжить;
				КонецЕсли;
				РеквизитДата = СтрЗаменить(СбисЗначениеРеквизита, "T", "");
				РеквизитДата = СтрЗаменить(РеквизитДата, "-", "");
				РеквизитДата = СтрЗаменить(РеквизитДата, ":", "");
				ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, Дата(РеквизитДата));
			ИначеЕсли	Найти(СбисТипРеквизита, "ссылка")
				И	Найти(СбисТипРеквизита, ".") Тогда
				Если	СбисЗначениеРеквизита = "00000000-0000-0000-0000-000000000000"
					Или	СтрЧислоВхождений(СбисТипРеквизита, ".") <> 1 Тогда
					Продолжить;
				КонецЕсли;
				Попытка
					ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, ПолучитьСсылкуПоТипуИИдентификатору(КлючИЗначение.Значение.Тип, СбисЗначениеРеквизита));
				Исключение
					ВызватьИсключение("Ошибка получения ссылки объекта по пути " + ПутьКУзлу + "." + КлючИЗначение.Ключ + ". Детально:" + ИнформацияОбОшибке().Описание);
				КонецПопытки;
			ИначеЕсли	СбисТипРеквизита = "булево" Тогда
				СбисЗначениеРеквизита = НРег(СбисЗначениеРеквизита);
				Если СбисЗначениеРеквизита = "true" Или СбисЗначениеРеквизита = "истина" Тогда
					ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, Истина);
				ИначеЕсли СбисЗначениеРеквизита = "false" Или СбисЗначениеРеквизита = "ложь" Тогда
					ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, Ложь);
				КонецЕсли;
			КонецЕсли;			
		ИначеЕсли	ТипЗнч(СбисЗначениеРеквизита) = Тип("Булево") Тогда
			ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, СбисЗначениеРеквизита);
		ИначеЕсли	ТипЗнч(СбисЗначениеРеквизита) = Тип("Массив") Тогда	
			Если СбисТипРеквизита = "табличнаячасть" Тогда
				ТабличнаяЧасть = Новый Массив;
				Для СчетчикМассива = 0 По СбисЗначениеРеквизита.Количество()-1 Цикл
					ЭлементМассива = СбисЗначениеРеквизита[СчетчикМассива]; 
					Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда 
						ТабличнаяЧасть.Добавить(ПодготовитьСтруктуруОбъектаДляЗаписиВ1ССервер(ЭлементМассива, ПутьКУзлу + "[" + СчетчикМассива + "]"));
					КонецЕсли;
				КонецЦикла;
				ИтоговаяСтруктураОбъекта.Вставить(КлючИЗначение.Ключ, ТабличнаяЧасть);
			Иначе
				ВызватьИсключение("Указан неизвестный тип """ + КлючИЗначение.Значение.Тип + """ для обработки массива по пути " + ПутьКУзлу + "." + КлючИЗначение.Ключ + ".");
			КонецЕсли;
		Иначе
			ВызватьИсключение("Необрабатываемый тип значения узла """ + ТипЗнч(СбисЗначениеРеквизита) + """ по пути " + ПутьКУзлу + "." + КлючИЗначение.Ключ + ".");
		КонецЕсли;
	КонецЦикла;
	Возврат ИтоговаяСтруктураОбъекта;
КонецФункции

&НаСервереБезКонтекста
Функция СбисТипСправочник(СбисИмяТипа)
	Возврат СбисИмяТипа = "справочникссылка" Или СбисИмяТипа = "catalogobject";
КонецФункции

&НаСервереБезКонтекста
Функция СбисТипДокумент(СбисИмяТипа)
	Возврат СбисИмяТипа = "документссылка" Или СбисИмяТипа = "documentobject";
КонецФункции

&НаСервереБезКонтекста
Функция СбисЭтоГруппа(СбисСтруктураОбъекта)
	Возврат		СбисСтруктураОбъекта.Свойство("ЭтоГруппа") 
	И	СбисСтруктураОбъекта.ЭтоГруппа 
	Или		СбисСтруктураОбъекта.Свойство("IsFolder")
	И	СбисСтруктураОбъекта.IsFolder;
КонецФункции

//Возвращает ссылку на объект по имени метаданных и идентификатору (для перечислений по значению)
// СбисТип - полный тип объекта 1С вида СправочникСсылка.Номенклатура или DocumentObject.АвансовыйОтчет
// СбисИдентификатор - Уникальный идентификатор объекта
// Возвращает сылку на объект
&НаСервереБезКонтекста
Функция ПолучитьСсылкуПоТипуИИдентификатору(СбисТип, СбисИдентификатор) Экспорт
	СтрСбисТип = СтрЗаменить(СокрЛП(СбисТип), ".", Символы.ПС);
	СбисТипОбъекта = НРег(СтрПолучитьСтроку(СтрСбисТип, 1));
	СбисИмяОбъекта = СтрПолучитьСтроку(СтрСбисТип, 2);
	Попытка
		Если		СбисТипСправочник(СбисТипОбъекта) Тогда
			Возврат Справочники[СбисИмяОбъекта].ПолучитьСсылку(Новый УникальныйИдентификатор(СбисИдентификатор));
		ИначеЕсли	СбисТипДокумент(СбисТипОбъекта) Тогда
			Возврат Документы[СбисИмяОбъекта].ПолучитьСсылку(Новый УникальныйИдентификатор(СбисИдентификатор));
		ИначеЕсли	СбисТипОбъекта = "перечислениессылка" Тогда
			Возврат Перечисления[СбисИмяОбъекта][СбисИдентификатор];
		ИначеЕсли	СбисТипОбъекта = "плансчетовссылка" Тогда
			Если СтрДлина(СбисИдентификатор) = 36 Тогда
				Возврат ПланыСчетов.Хозрасчетный.ПолучитьСсылку(Новый УникальныйИдентификатор(СбисИдентификатор));
			Иначе
				Возврат ПланыСчетов.Хозрасчетный.НайтиПоКоду(СбисИдентификатор);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ВызватьИсключение("Ошибка при обработке типа " + СбисТип + " с идентификатором " + СбисИдентификатор + ". " + ИнформацияОбОшибке().Описание);
	КонецПопытки;
КонецФункции

// Получение объекта
// 1) Если нет уникального идентификатора объекта ищем/создаем новый объект.
// 2) Если есть идентификатор объекта но по нему не удалось получить объект ищем/создаем новый объект.
// Для обеих случаев обновляем запись сопоставления новым идентификатором.
// 3) Если объект по идекнтификатору получен возвращаем его
// В результате возвращает объект в узле object и его идентификатор в узле mappingData
// ТипИмяОбъекта - Тип и название объекта как в ИС
// ИдентификаторОбъекта - Идентификатор объекта в этой системе
// СтруктураОбъекта - Структура рассчитанного объекта ИС с приведенными типами для поиска
// ИмяИни - Имя ИНИ объекта, необходимо для поиска
&НаСервереБезКонтекста
Функция СбисПолучитьЗначениеОбъекта(Знач СбисОписаниеОбъекта, Отказ)	
	Перем СбисСсылкаНаОбъект, СбисОбъектЗначение, СбисИдентификаторОбъекта;
	ОбновитьСопоставление = Ложь;
	
	//Указан Идетификатор
	Если	СбисОписаниеОбъекта.Свойство("Идентификатор", СбисИдентификаторОбъекта)
		И	СбисИдентификаторОбъекта <> Неопределено Тогда
		Попытка
			СбисСсылкаНаОбъект = ПолучитьСсылкуПоТипуИИдентификатору(СбисОписаниеОбъекта.Тип, СбисИдентификаторОбъекта);
			СбисОбъектЗначение = СбисСсылкаНаОбъект.ПолучитьОбъект();
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details", 773, "Ошибка получения ссылки по идентификатору", ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	//Не найден объект, пробуем найти ссылку
	Если СбисОбъектЗначение = Неопределено Тогда
		Попытка
			СбисСсылкаНаОбъект = СбисНайтиСсылкуОбъекта(СбисОписаниеОбъекта);
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details", 773, "Ошибка посика ссылки на объект", ОписаниеОшибки());
		КонецПопытки;
		Если СбисСсылкаНаОбъект <> Неопределено Тогда
			Попытка
				СбисОбъектЗначение = СбисСсылкаНаОбъект.ПолучитьОбъект();
				СбисИдентификаторОбъекта = СбисСсылкаНаОбъект.УникальныйИдентификатор();
			Исключение
				Отказ = Истина;
				Возврат Новый Структура("code,message,details", 773, "Ошибка получения объекта", ОписаниеОшибки());
			КонецПопытки;
			ОбновитьСопоставление = Истина;
		КонецЕсли;
	КонецЕсли;		
	Если СбисОбъектЗначение = Неопределено Тогда
		СбисИдентификаторОбъекта = Новый УникальныйИдентификатор;
		СтрТипОбъекта = СтрЗаменить(СбисОписаниеОбъекта.Тип, ".", Символы.ПС);
		СбисТипОбъекта = НРег(СтрПолучитьСтроку(СтрТипОбъекта, 1));
		СбисИмяОбъекта = СтрПолучитьСтроку(СтрТипОбъекта, 2);
		Если		СбисТипСправочник(СбисТипОбъекта) Тогда
			Если СбисЭтоГруппа(СбисОписаниеОбъекта.СтруктураОбъекта) Тогда
				Попытка
					СбисОбъектЗначение = Справочники[СбисИмяОбъекта].СоздатьГруппу();
				Исключение
					Отказ = Истина;
					Возврат Новый Структура("code,message,details", 773, "Ошибка создания группы справочника", ОписаниеОшибки());
				КонецПопытки;
			Иначе
				Попытка
					СбисОбъектЗначение = Справочники[СбисИмяОбъекта].СоздатьЭлемент();
				Исключение
					Отказ = Истина;
					Возврат Новый Структура("code,message,details", 773, "Ошибка создания элемента справочника", ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
			СбисОбъектЗначение.УстановитьСсылкуНового(Справочники[СбисИмяОбъекта].ПолучитьСсылку(СбисИдентификаторОбъекта));
		ИначеЕсли СбисТипДокумент(СбисТипОбъекта) Тогда
			Попытка
				СбисОбъектЗначение = Документы[СбисИмяОбъекта].СоздатьДокумент();
			Исключение
				Отказ = Истина;
				Возврат Новый Структура("code,message,details", 773, "Ошибка создания документа", ОписаниеОшибки());
			КонецПопытки;
			СбисОбъектЗначение.УстановитьСсылкуНового(Документы[СбисИмяОбъекта].ПолучитьСсылку(СбисИдентификаторОбъекта));
		КонецЕсли;
		ОбновитьСопоставление = Истина;
	КонецЕсли;
	
	Результат = Новый Структура("Объект", СбисОбъектЗначение);
	Если ОбновитьСопоставление Тогда 
		Результат.Вставить("ДанныеМаппинга", Новый Структура("ClientId", Строка(СбисИдентификаторОбъекта)));
	КонецЕсли;
	Возврат Результат
КонецФункции

// Поиск объекта по данным из рассчитанной структуры на основании запроса в ини файле
// Тип - Тип объекта в 1С 
// Имя - Имя объекта в 1С
// СтруктураОбъекта - Структура рассчитанного объекта ИС с приведенными типами для поиска
// Ини - Значение ИНИ объекта, необходимо для поиска
// Возвращает ссылку на объект
&НаСервереБезКонтекста
Функция СбисНайтиСсылкуОбъекта(Знач СбисСтруктураОбъекта)
	Перем КлючиОбъекта;
	Перем ЗначениеРеквизита;
	Если	Не СбисСтруктураОбъекта.Свойство("Ключи", КлючиОбъекта) 
		Или	Не ЗначениеЗаполнено(КлючиОбъекта) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СбисТипОбъекта = Лев(СбисСтруктураОбъекта.Тип, Найти(СбисСтруктураОбъекта.Тип,".") - 1);
	СбисИмяОбъекта = Прав(СбисСтруктураОбъекта.Тип, СтрДлина(СбисСтруктураОбъекта.Тип) - Найти(СбисСтруктураОбъекта.Тип,"."));
	Если СбисТипСправочник(НРег(СбисТипОбъекта)) Тогда
		СбисТипОбъекта = "Справочник";
	ИначеЕсли СбисТипДокумент(НРег(СбисТипОбъекта)) Тогда
		СбисТипОбъекта = "Документ";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	Объект.Ссылка КАК Ссылка
	|ИЗ
	|   " + СбисТипОбъекта + "."+ СбисИмяОбъекта +" КАК Объект
	|ГДЕ
	| ";
	Для Каждого Элемент Из КлючиОбъекта Цикл
		ИмяРеквизита = Элемент.Значение.Значение;
		Если СбисСтруктураОбъекта.СтруктураОбъекта.Свойство(ИмяРеквизита, ЗначениеРеквизита) Тогда
			Запрос.УстановитьПараметр(ИмяРеквизита, ЗначениеРеквизита);
			Если ТипЗнч(ЗначениеРеквизита) = "Дата" Тогда
				Запрос.Текст = Запрос.Текст + "Объект." + ИмяРеквизита + " МЕЖДУ НАЧАЛОПЕРИОДА(&" + ИмяРеквизита + ", ДЕНЬ) И КОНЕЦПЕРИОДА(&" + ИмяРеквизита + ", ДЕНЬ) И ";
			Иначе
				Запрос.Текст = Запрос.Текст + "Объект." + ИмяРеквизита + "=&"+ИмяРеквизита + " И ";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Запрос.Текст = Лев(Запрос.Текст, СтрДлина(Запрос.Текст)-3);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()>0 Тогда
		Пока Выборка.Следующий() Цикл
			Возврат Выборка.Ссылка;
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// VII Формируем структуру API3 объекта из объекта 1С. Сделано тк, для минимальной реализации требований по клиенту.
&НаСервереБезКонтекста
Функция СбисПолучитьСтруктуруОбъекта1С(ОбъектСсылка, Знач СтруктураДокумента, Отказ) Экспорт
	Попытка
		СтруктураОбъекта = Новый Структура();
		СтруктураОбъекта.Вставить("ИдИС",				ОбъектСсылка.УникальныйИдентификатор());
		СтруктураОбъекта.Вставить("ИмяИС",				ПолучитьИмяИСПоСсылке(ОбъектСсылка));//"Документы.АвансовыйОтчет"
		СтруктураОбъекта.Вставить("ИмяСБИС",			СтруктураДокумента.ИмяСБИС);  
		Если СтруктураДокумента.Свойство("ИдСБИС") Тогда
			СтруктураОбъекта.Вставить("ИдСБИС",				СтруктураДокумента.ИдСБИС);
		КонецЕсли;
		
		Если СтруктураОбъекта.ИмяИС = "Документы.АвансовыйОтчет" Тогда
		
			СтруктураОбъекта.Вставить("Номер",				ОбъектСсылка.Номер);
			СтруктураОбъекта.Вставить("Дата", 				Формат(ОбъектСсылка.Дата, "ДФ=dd.MM.yyyy"));
			СтруктураОбъекта.Вставить("НашаОрганизация",	СтруктураДокумента.НашаОрганизация);
			СтруктураОбъекта.Вставить("РабочаяГруппа",		СтруктураДокумента.РабочаяГруппа);
			СтруктураОбъекта.Вставить("ЧастноеЛицо",		СтруктураДокумента.ЧастноеЛицо);
			Если ОбъектСсылка.Комментарий <> "" Тогда 
				СтруктураОбъекта.Вставить("Комментарий", ОбъектСсылка.Комментарий);
			КонецЕсли;             
			
		ИначеЕсли Найти("Справочники.Контрагенты Справочники.Организации Справочники.Фирмы", СтруктураОбъекта.ИмяИС)  Тогда
			
			СтруктураОбъекта.Вставить("Название", ОбъектСсылка.Наименование);
			СтруктураОбъекта.Вставить("ИНН", ОбъектСсылка.ИНН);
			СтруктураОбъекта.Вставить("КПП", ОбъектСсылка.КПП); 
			Если ЗначениеЗаполнено(ОбъектСсылка.Родитель) Тогда
				СтруктураОбъекта.Вставить("ЭтоГруппа ", ОбъектСсылка.ЭтоГруппа);
				СтруктураОбъекта.Вставить("Родитель", ОбъектСсылка.Родитель.УникальныйИдентификатор());
			КонецЕсли;
			
		ИначеЕсли Найти("Справочники.Партнеры", СтруктураОбъекта.ИмяИС)  Тогда
			
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("Партнер", ОбъектСсылка);
			СтруктураОбъекта.Вставить("Название", ОбъектСсылка.Наименование);
			СтруктураОбъекта.Вставить("ИНН", Контрагент.ИНН);
			СтруктураОбъекта.Вставить("КПП", Контрагент.КПП); 
			СтруктураОбъекта.Вставить("КодФилиала", ""); 
			Если ЗначениеЗаполнено(ОбъектСсылка.Родитель) Тогда
				СтруктураОбъекта.Вставить("ЭтоГруппа ", ОбъектСсылка.ЭтоГруппа);
				СтруктураОбъекта.Вставить("Родитель", ОбъектСсылка.Родитель.УникальныйИдентификатор());
			КонецЕсли;
			
		КонецЕсли;
		
		Возврат СтруктураОбъекта;
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details", 773, "Ошибка получения структуры документа", ОписаниеОшибки());
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИмяИСПоСсылке(СсылкаОбъект1С) Экспорт
	Если		Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаОбъект1С)) Тогда
		Возврат "Справочники." + СсылкаОбъект1С.Метаданные().Имя;
	ИначеЕсли	Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(СсылкаОбъект1С)) Тогда
		Возврат "Документы." + СсылкаОбъект1С.Метаданные().Имя;
	КонецЕсли;
	ВызватьИсключение("Неподдерживаемый тип ИС по ссылке " + Строка(СсылкаОбъект1С));
КонецФункции

// Функция заполняет реквизиты объекта 1С из одноименных полей структуры. Поддерживаемые типы: Документ, Справочник	
&НаСервереБезКонтекста
Функция ЗаполнитьИЗаписатьОбъектИзСтруктуры(Объект1С, СтруктураОбъекта, Отказ) Экспорт	
	Попытка
		Для Каждого КлючИЗначениеСтруктуры Из СтруктураОбъекта Цикл
			Если ТипЗнч(КлючИЗначениеСтруктуры.Значение) = Тип("Массив") Тогда
				Объект1С[КлючИЗначениеСтруктуры.Ключ].Очистить();
				Для Каждого СбисСтрокаМассива Из КлючИЗначениеСтруктуры.Значение Цикл
					НоваяСтрока = Объект1С[КлючИЗначениеСтруктуры.Ключ].Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СбисСтрокаМассива);
				КонецЦикла;
			Иначе
				Если КлючИЗначениеСтруктуры.Ключ = "ЭтоГруппа" или КлючИЗначениеСтруктуры.Ключ = "IsFolder" Тогда
					Если КлючИЗначениеСтруктуры.Значение <> Объект1С[КлючИЗначениеСтруктуры.Ключ] Тогда
						Отказ = Истина;
						Возврат Новый Структура("code,message,details,dump", 773, "Ошибка заполнения структуры объекта", "Значения реквизита ЭтоГруппа объекта 1С не соовтетсвует значению реквизита объекта СБИС", Новый Структура("Ключ", КлючИЗначениеСтруктуры.Ключ));
					КонецЕсли;
				Иначе
					Объект1С[КлючИЗначениеСтруктуры.Ключ] = КлючИЗначениеСтруктуры.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details,dump", 773, "Ошибка заполнения структуры объекта", ОписаниеОшибки(), Новый Структура("Ключ", КлючИЗначениеСтруктуры.Ключ));
	КонецПопытки;
	Попытка
		Объект1С.Записать();
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details", 773, "Ошибка записи объекта", ОписаниеОшибки());
	КонецПопытки;
	Возврат Объект1С.Ссылка;
КонецФункции

