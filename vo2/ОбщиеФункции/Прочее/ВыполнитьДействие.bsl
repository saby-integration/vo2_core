//Область описывает выполнение действия над пакетом (переезд, рефактор с ExtSDK)

//Массовые операции по отмеченным документам
&НаКлиенте
Функция СбисУтвердитьОтклонить(Кэш,СписокОтмеченныхДокументов, ИмяКоманды) Экспорт
	//При попытке отклонения нескольких документов ничего не делаем
	Если СписокОтмеченныхДокументов.Количество()>1 и ИмяКоманды = "Отклонить" Тогда
		Сообщить("Отклонять документы можно только по одному.");
		Возврат Ложь;
	КонецЕсли;
	
	СписокИНН = Новый СписокЗначений;
	Для Каждого Строка из СписокОтмеченныхДокументов Цикл
		оОрганизация = Строка.Значение.СоставПакета[0].Значение.НашаОрганизация;
		Если оОрганизация.Свойство("СвФЛ") Тогда
			Если СписокИНН.НайтиПоЗначению(оОрганизация.СвФЛ.ИНН)=Неопределено Тогда 
				СписокИНН.Добавить(оОрганизация.СвФЛ.ИНН);
			КонецЕсли;
		Иначе
			Если СписокИНН.НайтиПоЗначению(оОрганизация.СвЮЛ.ИНН)=Неопределено Тогда
				СписокИНН.Добавить(оОрганизация.СвЮЛ.ИНН);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СписокСертификатов = Кэш.Интеграция.ПолучитьСертификатыДляАктивации(Кэш, СписокИНН);
	ПараметрыПереходЗавершение = Новый Структура("СчСерт, СписокСертификатов, Кэш, СписокОтмеченныхДокументов, ИмяКоманды", 0, СписокСертификатов, Кэш, СписокОтмеченныхДокументов, ИмяКоманды);
	Если СписокСертификатов.Количество()>0 Тогда    
		Сертификат = СписокСертификатов[0].Значение;
		Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
			Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
		КонецЕсли;
		СертификатИмя = "Введите код активации сертификата " + ПолучитьПредставлениеСертификата(Сертификат, "[ФИО].([Должность])., [Название].(ИНН [ИНН])", Истина);
		
		ФормаВводаПинкода = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода");
		ПараметрыВвода = Новый Структура("СертификатИмя", СертификатИмя);
		#Если ТолстыйКлиентОбычноеПриложение Тогда 
			сбисУтвердитьОтклонитьЗавершение(ФормаВводаПинкода.Показать(ПараметрыВвода), ПараметрыПереходЗавершение);		
		#Иначе
			ФормаВводаПинкода.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сбисУтвердитьОтклонитьЗавершение",ЭтаФорма,ПараметрыПереходЗавершение);
			ФормаВводаПинкода.Показать(ПараметрыВвода);
		#КонецЕсли
	Иначе
		сбисУтвердитьОтклонитьЗавершение(Истина, ПараметрыПереходЗавершение);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция СбисУтвердитьОтклонитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	//При попытке отклонения нескольких документов ничего не делаем
	Кэш = ДополнительныеПараметры.Кэш;
	Если Результат = Неопределено Тогда   // не ввели пин-код
		ТекстОшибки = "Не активирован сертификат для подписания документов.";
		сбисСпрятатьСостояние(Кэш.ГлавноеОкно);
		Возврат Ложь;	
	Иначе  // ввели пин-код или не требуется активация
		СчСерт = ДополнительныеПараметры.СчСерт;
		СписокСертификатов = ДополнительныеПараметры.СписокСертификатов;
		СписокОтмеченныхДокументов = ДополнительныеПараметры.СписокОтмеченныхДокументов;
		ИмяКоманды = ДополнительныеПараметры.ИмяКоманды;
		Если СписокСертификатов.Количество()>0 Тогда
			Серт = СписокСертификатов[СчСерт].Значение;
			Серт.Вставить("КодАктивации", Результат.ПинКод);
		КонецЕсли;
		Если СчСерт<СписокСертификатов.Количество()-1 Тогда    // еще не все пин-коды ввели
			Сертификат = СписокСертификатов[СчСерт+1].Значение;
			Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
				Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
			КонецЕсли;
			СертификатИмя = "Введите код активации сертификата "+СокращенноеФИО(Кэш,Сертификат.ФИО)+?(Сертификат.Свойство("Должность"),"("+Сертификат.Должность+")", "")+", "+Сертификат.Название+?(Сертификат.Свойство("ИНН"),"(ИНН "+Сертификат.ИНН+")","");
			ФормаВводаПинкода = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода");
			ПараметрыВвода = Новый Структура("СертификатИмя", СертификатИмя);			
			ПараметрыПереходЗавершение = Новый Структура("СчСерт, СписокСертификатов, Кэш, СписокОтмеченныхДокументов, ИмяКоманды", СчСерт+1, СписокСертификатов, Кэш, СписокОтмеченныхДокументов, ИмяКоманды);
			#Если ТолстыйКлиентОбычноеПриложение Тогда 
				сбисУтвердитьОтклонитьЗавершение(ФормаВводаПинкода.Показать(ПараметрыВвода), ПараметрыПереходЗавершение);		
			#Иначе
				ФормаВводаПинкода.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сбисУтвердитьОтклонитьЗавершение",ЭтаФорма,ПараметрыПереходЗавершение);
				ФормаВводаПинкода.Показать(ПараметрыВвода);
			#КонецЕсли
		Иначе  // ввели пин-коды для всех сертов
			Кэш.Интеграция.АктивироватьСерверныеСертификаты(Кэш, СписокСертификатов);
			Если ИмяКоманды = "Утвердить" Тогда
				ТекстСообщения = "утверждение";
			Иначе
				ТекстСообщения = "отклонение";
			КонецЕсли;
			ГлавноеОкно = Кэш.ГлавноеОкно;	
			Всего = СписокОтмеченныхДокументов.Количество();
			сч = 0;
			Для Каждого Строка из СписокОтмеченныхДокументов Цикл        
				
				сч = сч + 1;
				ГлавноеОкно.сбисПоказатьСостояние("Идет "+ТекстСообщения+" документов",ГлавноеОкно, Мин(100,Окр(сч*100/Всего)));
				Если Строка.Значение.Статус = 5 Тогда //Если документ уже отклонен
					Сообщить(ПолучитьПредставлениеПакетаДляОшибки(Строка) + ?(ИмяКоманды = "Отклонить", "уже отклонен", "нельзя утвердить") + ".");			
					Продолжить;
				ИначеЕсли Строка.Значение.Статус = 6 Тогда //Если уже утвержден
					Сообщить(ПолучитьПредставлениеПакетаДляОшибки(Строка) + ?(ИмяКоманды = "Утвердить", "уже утвержден", "нельзя отклонить") + ".");			
					Продолжить;
				КонецЕсли;	
				Кэш.Интеграция.сбисВыполнитьКоманду(Кэш, Строка.Значение.СоставПакета[0].Значение.Идентификатор,ИмяКоманды, ПолучитьПредставлениеПакетаДляОшибки(Строка));	
				
			КонецЦикла;
			ГлавноеОкно.сбисСпрятатьСостояние(ГлавноеОкно);
			ГлавноеОкно.ОбновитьКонтент();
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СбисАннулироватьЗаказОтправленный(СписокОтмеченныхДокументов) Экспорт
	Кэш = МодульОбъектаКлиент().ПолучитьТекущийЛокальныйКэш();	
	ГлавноеОкно = Кэш.ГлавноеОкно;	
	Всего = СписокОтмеченныхДокументов.Количество();  
	
	сч = 0;
	Для Каждого Строка Из СписокОтмеченныхДокументов Цикл        
		СоставПакета = Строка.Значение.СоставПакета[0].Значение;
		сч = сч + 1;
		ГлавноеОкно.сбисПоказатьСостояние("Идет аннулирование документов", ГлавноеОкно, Мин(100, Окр(сч * 100 / Всего)));		
		Если Не МодульОбъектаКлиент().СоставПакета_МожноАннулировать(СоставПакета) Тогда     
			МодульОбъектаКлиент().СбисСообщить(ПолучитьПредставлениеПакетаДляОшибки(Строка) + "Нельзя аннулировать документ.");			
			Продолжить;
		КонецЕсли;
		ЗначениеВыбора = Новый Структура();
		ЗначениеВыбора.Вставить("Идентификатор", "");
		ЗначениеВыбора.Вставить("Комментарий", "");
		ЗначениеВыбора.Вставить("Название", "Аннулировать");
		ЗначениеВыбора.Вставить("ТребуетИсполнителя", "Нет");
		ЗначениеВыбора.Вставить("ТребуетКомментария", "Да");
		ЗначениеВыбора.Вставить("ТребуетПодписания", "Да");
		ЗначениеВыбора.Вставить("ТребуетРасшифровки", "Нет");
	
		РезультатВыбора = Новый Структура("Комментарий", "Аннулирование массовое");
		Отказ = Ложь;
		РезультатЗапроса = СформироватьЗапросНаАннулирование(Кэш, Новый Структура("ИдентификаторПакета, Действие", 
															СоставПакета.Идентификатор, ЗначениеВыбора), Отказ);
		Если Отказ Тогда		
			 Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, РезультатЗапроса, Новый Структура("ФормаВладелец", ЭтаФорма));
		Иначе
			Для Каждого КлючИЗначение Из РезультатЗапроса Цикл 
				РезультатВыбора.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла; 
			РезультатДействия = Ложь;
			Если Не РезультатВыбора.Действие.ТребуетПодписания = "Да" И 
				 Не РезультатВыбора.Действие.ТребуетИсполнителя = "Да" И
				 Не РезультатВыбора.Действие.ТребуетРасшифровки = "Да" Тогда  
				РезультатДействия = Кэш.Интеграция.сбисВыполнитьДействие(Кэш, СоставПакета, РезультатВыбора.Этап, 
									РезультатВыбора.Действие, РезультатВыбора.Комментарий, "");
			КонецЕсли;  
			Если Не РезультатДействия Тогда
				
					МодульОбъектаКлиент().СбисСообщить(ПолучитьПредставлениеПакетаДляОшибки(Строка) 
										+ "Нельзя аннулировать документ из формы массовой отправки.");		
				
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;
	ГлавноеОкно.сбисСпрятатьСостояние(ГлавноеОкно);
	ГлавноеОкно.ОбновитьКонтент();

КонецПроцедуры// ()

// Срабатывает после ввода пин-кода сертификата перед действием
//
// Параметры:
//  Результат  - Структура - Результат ввода пин-кода сертификата
//  ДополнительныеПараметры  - Произвольный - Дополнительные параметры
//							для обработки результата
//
&НаКлиенте
Процедура СбисПослеВводаПинКода(Результат, ДополнительныеПараметры) Экспорт 

	Кэш = ДополнительныеПараметры.Кэш;
	Если Результат = Неопределено Тогда   // не ввели пин-код 
		
		ТекстОшибки = "Не активирован сертификат для подписания документов.";
		сбисСпрятатьСостояние(Кэш.ГлавноеОкно);
		Возврат;
		
	Иначе  // ввели пин-код или не требуется активация
		
		СчСерт = ДополнительныеПараметры.СчСерт;
		СписокСертификатов = ДополнительныеПараметры.СписокСертификатов;
		СписокОтмеченныхДокументов = ДополнительныеПараметры.СписокОтмеченныхДокументов;
		ИмяКоманды = ДополнительныеПараметры.Команда.Название;
		
		Если СписокСертификатов.Количество() Тогда
			
			Серт = СписокСертификатов[СчСерт].Значение;
			Серт.Вставить("КодАктивации", Результат.ПинКод);
			
		КонецЕсли;
		
		Если СчСерт < СписокСертификатов.Количество() - 1 Тогда    // еще не все пин-коды ввели           
			                                                  
			ДополнительныеПараметры.СчСерт = ДополнительныеПараметры.СчСерт + 1;
    		СбисПередВыполнитьДействие(ДополнительныеПараметры);
			
		Иначе  // ввели пин-коды для всех сертов                                    
			
			ПараметрыПереходЗавершение = Новый Структура("Команда, СписокСертификатов, Кэш"); 
			ЗаполнитьЗначенияСвойств(ПараметрыПереходЗавершение, ДополнительныеПараметры);
			Обработчик = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения(ДополнительныеПараметры.ИмяМетодаДляПродолжения, ЭтаФорма, ПараметрыПереходЗавершение);  
			МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(СписокОтмеченныхДокументов, Обработчик);
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // СбисВыполнитьДействиеДляДокументовЗавершить()

// Пытается выполнить указанное действие над списоком документов
//
// Параметры:
//	Параметры - Структура - Структура со следкющим параметрами:
//				 СчСерт (Строка)
//				 СписокСертификатов (СписокЗначений)
//				 Кэш (Структура)
//				 СписокОтмеченныхДокументов (СписокЗначений, Неопределено)
//				 Команды (Структура)
//				 ИмяМетодаДляПродолжения (Строка)
// 
&НаКлиенте
Процедура СбисПередВыполнитьДействие(ПараметрыМетода) Экспорт

	Кэш = ПараметрыМетода.Кэш;
	МодульОбъектаКлиент = МодульОбъектаКлиент();
	
	Если НРег(ПараметрыМетода.Команда.ТребуетПодписания) = "нет" Тогда       
		
		ПараметрыМетода.Вставить("СписокСертификатов", Новый СписокЗначений);  
		
	ИначеЕсли Не (ПараметрыМетода.Свойство("СписокСертификатов")
		И ЗначениеЗаполнено(ПараметрыМетода.СписокСертификатов)) Тогда 
		
		СписокИНН = Новый СписокЗначений;
		
		Для Каждого Строка из ПараметрыМетода.СписокОтмеченныхДокументов Цикл
			
			оОрганизация = Неопределено;
			Если Строка.Значение.СоставПакета[0].Значение.Свойство("НашаОрганизация", оОрганизация) Тогда 
			ИначеЕсли Строка.Значение.СоставПакета[0].Значение.Свойство("Организация", оОрганизация) Тогда
			Иначе 
				Продолжить;
			КонецЕсли;
			
			Если оОрганизация.Свойство("СвФЛ") Тогда
				
				Если СписокИНН.НайтиПоЗначению(оОрганизация.СвФЛ.ИНН) = Неопределено Тогда 
					СписокИНН.Добавить(оОрганизация.СвФЛ.ИНН);
				КонецЕсли; 
				
			Иначе
				
				Если СписокИНН.НайтиПоЗначению(оОрганизация.СвЮЛ.ИНН) = Неопределено Тогда
					СписокИНН.Добавить(оОрганизация.СвЮЛ.ИНН);
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		СписокСертификатов = Кэш.Интеграция.ПолучитьСертификатыДляАктивации(Кэш, СписокИНН);
		ПараметрыМетода.Вставить("СписокСертификатов", СписокСертификатов);
		
	КонецЕсли;
	
	Обработчк = МодульОбъектаКлиент.НовыйСбисОписаниеОповещения("СбисПослеВводаПинКода", ЭтаФорма, ПараметрыМетода);
	
	Если Не ПараметрыМетода.СписокСертификатов.Количество() Тогда
		МодульОбъектаКлиент.ВыполнитьСбисОписаниеОповещения(0, Обработчк);
		Возврат;
	КонецЕсли;               
		
	Сертификат = ПараметрыМетода.СписокСертификатов[ПараметрыМетода.СчСерт].Значение; 
	
	Если Сертификат.Ключ.СпособАктивации <> "СтатическийКод" Тогда
		МодульОбъектаКлиент.ВыполнитьСбисОписаниеОповещения(0, Обработчк);
		Возврат;
	КонецЕсли;    
	
	СертификатИмя = "Введите код активации сертификата " + ПолучитьПредставлениеСертификата(Сертификат, "[ФИО].([Должность])., [Название].(ИНН [ИНН])", Истина);
	
	ФормаВводаПинкода = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода");
	ПараметрыВвода = Новый Структура("СертификатИмя", СертификатИмя);
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда 
		МодульОбъектаКлиент.ВыполнитьСбисОписаниеОповещения(ФормаВводаПинкода.Показать(ПараметрыВвода), Обработчк);
	#Иначе
		ФормаВводаПинкода.ОписаниеОповещенияОЗакрытии = Обработчк;
		ФормаВводаПинкода.Показать(ПараметрыВвода);
	#КонецЕсли

КонецПроцедуры // СбисПередВыполнитьДействие()

// Пытается выполнить указанное действие над списоком документов
//
// Параметры:
//	СписокДокументов - СписокЗначений - Список строк из таблицы значений на ГО
//	ПараметрыДействия - Структура - Структура со следкющим параметрами:
//				 СчСерт (Строка)
//				 СписокСертификатов (СписокЗначений)
//				 Кэш (Структура)
//				 СписокОтмеченныхДокументов (СписокЗначений, Неопределено)
//				 Команды (Структура)
//				 ИмяМетодаДляПродолжения (Строка)
// 
&НаКлиенте
Процедура СбисВыполнитьДействиеДляДокументовЗавершить(СписокОтмеченныхДокументов, ПараметрыДействия) Экспорт 
	
	Кэш = ПараметрыДействия.Кэш;
	Кэш.Интеграция.АктивироватьСерверныеСертификаты(Кэш, ПараметрыДействия.СписокСертификатов);
	ГлавноеОкно = Кэш.ГлавноеОкно;		
	Всего = СписокОтмеченныхДокументов.Количество();
	сч = 0;     
	ИмяКоманды = ПараметрыДействия.Команда.Название;
	
	Для Каждого Строка из СписокОтмеченныхДокументов Цикл        
		
		сч = сч + 1;
		ГлавноеОкно.сбисПоказатьСостояние("Выполнение действия """+ ИмяКоманды +""" для документов", ГлавноеОкно, Мин(100, Окр(сч * 100 / Всего)));                       
		НазваниеДокумента = ПолучитьПредставлениеПакетаДляОшибки(Строка);
		Результат = Кэш.Интеграция.сбисВыполнитьКоманду(Кэш, Строка.Значение.СоставПакета[0].Значение.Идентификатор, ИмяКоманды, НазваниеДокумента);
		
		Если Результат = Ложь Тогда
			
			ПараметрыСообщения = Новый Структура;
			ПараметрыСообщения.Вставить("Текст", "Не возможно выполнить действие """ + ИмяКоманды + """ для " + НазваниеДокумента);
			ПараметрыСообщения.Вставить("СтатусСообщения", СтатусСообщения.Внимание);
			ПараметрыСообщения.Вставить("ЭлементНазначения", Неопределено);
			ПараметрыСообщения.Вставить("ФормаВладелец", ГлавноеОкно);
			МодульОбъектаКлиент().СбисСообщить(ПараметрыСообщения, Кэш);

		КонецЕсли;
		
	КонецЦикла;
	ГлавноеОкно.сбисСпрятатьСостояние(ГлавноеОкно);
	ГлавноеОкно.ОбновитьКонтент();

КонецПроцедуры  

