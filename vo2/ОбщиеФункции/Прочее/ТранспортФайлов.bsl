
///////////////////Транспорт файлов/////////////////

//Функция выполняет копирование файлов 
&НаКлиенте
Функция СбисСкопироватьФайлы(Кэш, СбисПараметрыКопирования, Отказ) Экспорт
	Перем ПолныйПутьОткуда,ПолныйПутьКуда;
	КопированиеНаСервер = Ложь;
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
		Если	СбисПараметрыКопирования.Свойство("НаСервер")
			И	СбисПараметрыКопирования.НаСервер Тогда
			КопированиеНаСервер = Истина;
		КонецЕсли;
	#КонецЕсли
	Если СбисПараметрыКопирования.Свойство("Файлы") Тогда
		Для Каждого СбисФайл Из СбисПараметрыКопирования.Файлы Цикл
			Если Не СбисФайл.Свойство("ИмяФайлаОткуда", ПолныйПутьОткуда) Тогда
				ПолныйПутьОткуда= сбисФорматКаталога(СбисФайл.ПутьОткуда,	Кэш.ПараметрыСистемы.Клиент) + сбисФайл.ИмяФайла;
			КонецЕсли;
			Если Не СбисФайл.Свойство("ИмяФайлаКуда", ПолныйПутьКуда) Тогда
				ПолныйПутьКуда	= сбисФорматКаталога(СбисФайл.ПутьКуда,		Кэш.ПараметрыСистемы.Клиент) + сбисФайл.ИмяФайла;
			КонецЕсли;
			Если КопированиеНаСервер Тогда
				сбисФайл.Вставить("ПолныйПутьОткуда",	ПолныйПутьОткуда);
				сбисФайл.Вставить("ПолныйПутьКуда",		ПолныйПутьКуда);
				сбисФайл.Вставить("Адрес",				ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПолныйПутьОткуда), ЭтаФорма.УникальныйИдентификатор));
			Иначе
				сбисФайлТест = Новый Файл(сбисФайл.ПутьКуда);
				Если Не сбисФайлТест.Существует() Тогда
					Попытка
						СоздатьКаталог(сбисФайл.ПутьКуда);
					Исключение
						Отказ = Истина;
						Возврат сбисИсключение(,"ОбщиеФункции.сбисСкопироватьФайлы", 772, "Ошибка работы с файловой системой", ОписаниеОшибки(), сбисПараметрыКопирования);
					КонецПопытки;
				КонецЕсли;
				Попытка
					Если сбисПараметрыКопирования.ОчиститьПослеПереноса Тогда
						ПереместитьФайл(ПолныйПутьОткуда, ПолныйПутьКуда);
					Иначе
						КопироватьФайл(ПолныйПутьОткуда, ПолныйПутьКуда);
					КонецЕсли;
				Исключение
					Отказ = Истина;
					Возврат сбисИсключение(,"ОбщиеФункции.сбисСкопироватьФайлы", 772, "Ошибка работы с файловой системой", ОписаниеОшибки(), сбисПараметрыКопирования);
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СбисПараметрыКопирования.Свойство("КаталогИсточник") И СбисПараметрыКопирования.Свойство("КаталогПриемник") Тогда			
			//Проверим и поправим окончания пути каталогов
			Если Прав(СбисПараметрыКопирования.КаталогИсточник, 1) <> "\" Тогда
				КаталогИсточник = СбисПараметрыКопирования.КаталогИсточник + "\";
			Иначе
				КаталогИсточник = СбисПараметрыКопирования.КаталогИсточник;
			КонецЕсли;
			Если Прав(СбисПараметрыКопирования.КаталогПриемник, 1) <> "\" Тогда
				КаталогПриемник = СбисПараметрыКопирования.КаталогПриемник + "\";   
			Иначе
				КаталогПриемник = СбисПараметрыКопирования.КаталогПриемник;   
			КонецЕсли;
			
			СоздатьКаталог(КаталогПриемник);

			МассивФайлов = НайтиФайлы(КаталогИсточник, "*.*", Истина);

			Для Каждого Файл Из МассивФайлов Цикл
				ПолноеИмяИсточник = Файл.ПолноеИмя;
				ПолноеИмяПриемник = КаталогПриемник + СтрЗаменить(Файл.ПолноеИмя, КаталогИсточник, "");
				
				Попытка   
					Если Файл.ЭтоКаталог() Тогда
						СоздатьКаталог(ПолноеИмяПриемник);
					Иначе
						КопироватьФайл(ПолноеИмяИсточник, ПолноеИмяПриемник);
					КонецЕсли; 
				Исключение 
					Отказ = Истина;
					Возврат МодульОбъектаКлиент().НовыйСбисИсключение(ОписаниеОшибки(), "РаботаСДокументами.СкопироватьФайлы");
				КонецПопытки;
			КонецЦикла; 			
	КонецЕсли;
	
	Если КопированиеНаСервер Тогда
		РезультатЗаписи = сбисСохранитьФайлыНаСервере(сбисПараметрыКопирования, Отказ);
		Если Отказ Тогда
			Возврат  сбисИсключение(РезультатЗаписи, "ОбщиеФункции.сбисСохранитьФайлыНаСервере");
		КонецЕсли;
	КонецЕсли;
	
	Если СбисПараметрыКопирования.Свойство("ОчиститьПослеПереноса") Тогда
		Если	сбисПараметрыКопирования.ОчиститьПослеПереноса
			И	КопированиеНаСервер Тогда
			Для Каждого сбисФайл Из сбисПараметрыКопирования.Файлы Цикл
				Попытка
					УдалитьФайлы(сбисФайл.ПолныйПутьОткуда);
				Исключение
					Отказ = Истина;
					Возврат сбисИсключение(,"ОбщиеФункции.сбисСкопироватьФайлы", 772, "Ошибка работы с файловой системой", "Ошибка удаления исходного файла " + сбисФайл.ПолныйПутьОткуда + ". Детально: " + ИнформацияОбОшибке().Описание, сбисПараметрыКопирования);
					//Не удалось удалить исходный файл.
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

//Сохраняет подготовленные файлы на сервере
&НаСервере
Функция сбисСохранитьФайлыНаСервере(Знач сбисПараметрыКопирования, Отказ)
	
	Для Каждого сбисФайл Из сбисПараметрыКопирования.Файлы Цикл
		сбисФайлТест = Новый Файл(сбисФайл.ПутьКуда);
		Если Не сбисФайлТест.Существует() Тогда
			Попытка
				СоздатьКаталог(сбисФайл.ПутьКуда);
			Исключение
				Отказ = Истина;
				Возврат Новый Структура("code,message,details", 772, "Ошибка работы с файловой системой", ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		Попытка
			сбисДанныеФайла = ПолучитьИзВременногоХранилища(сбисФайл.Адрес);
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details",777, "Вложения не найдены", ОписаниеОшибки());
		КонецПопытки;
		Попытка
			сбисДанныеФайла.Записать(сбисФайл.ПолныйПутьКуда);
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details",772, "Ошибка работы с файловой системой", ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;
	Возврат Истина;
	
КонецФункции

//Просто возвращает путь к каталогу временных файлов на сервере
&НаСервереБезКонтекста
Функция сбисКаталогВременныхФайловНаСервере() Экспорт
	Возврат КаталогВременныхФайлов();
КонецФункции

