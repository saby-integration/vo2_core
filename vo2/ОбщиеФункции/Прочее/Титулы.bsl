
// формирование титулов
&НаКлиенте
Функция СбисСформироватьТитулы(Кэш, СоставПакета, Действие, ДополнительныеПараметры, Отказ) Экспорт
	ДополнительныеПараметры.Вставить("Шифрование", Ложь);
	ЕстьРасхождения = СоставПакета.Свойство("ЕстьРасхождения");
	ДополнительныеПараметры.Вставить("ЕстьРасхождения", ЕстьРасхождения);
	Если Не СоставПакета.Свойство("Вложение") Тогда
		Возврат Ложь;
	КонецЕсли;
	Для Каждого Вложение Из СоставПакета.Вложение Цикл
		Зашифрован		= Вложение.Свойство("Зашифрован") И Вложение.Зашифрован = "Да";
		СбисТип			= Неопределено;
		СбисПодтип		= Неопределено;
		СбисВерсияФормат= Неопределено;
		Если Не	(	Вложение.Свойство("Тип", сбисТип)
			И	Вложение.Свойство("ВерсияФормата", СбисВерсияФормат)
			И	ЗначениеЗаполнено(СбисВерсияФормат)) Тогда
			//В случае неформализованных вложений будет пустая версия формата
			Продолжить;
		КонецЕсли;
		сбисДействие	= СбисФорматСтроки(Действие.Название,	"КлючСтруктуры");
		сбисТип			= СбисФорматСтроки(сбисТип,				"КлючСтруктуры");
		сбисВерсияФормат= СтрЗаменить(СтрЗаменить(сбисВерсияФормат, ".", "_"), " ", "");
		Если Вложение.Свойство("ПодТип", сбисПодтип) Тогда
			сбисПодтип = СтрЗаменить(сбисПодтип, " ", "");
		Иначе
			сбисПодтип = "";
		КонецЕсли;
		
		ИмяФункции = сбисДействие + "_" + сбисТип + "_" + сбисПодтип + "_" + сбисВерсияФормат;
		Если Зашифрован Или ЕстьРасхождения Тогда
			//Если титул переопределен на форме интеграции.
			ИмяОсновнойФормы = Кэш.ИнтеграцияИмя;
			//Дефолтные титулы на форме работы с документами
			ИмяВспомогательнойФормы = "РаботаСДокументами1С";
			ДополнительныеПараметры.Шифрование = Зашифрован;
		Иначе
			//Для документов без расхождения и без шифрования, титулы берутся на формах Файл_
			ИмяОсновнойФормы = "Файл_Шаблон";
			ИмяВспомогательнойФормы = "Файл_" + сбисТип + "_" + сбисВерсияФормат;
		КонецЕсли;
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции(ИмяФункции, ИмяОсновнойФормы, ИмяВспомогательнойФормы, Кэш);
		Если фрм = Ложь Тогда
			Если Зашифрован Тогда
				//Если документ зашифрован, а титула нет, то проверим ошибка ли это: если есть обработчик ошибки, то вернём исключение.
				ИмяФункции = сбисДействие + "_" + сбисТип;
				фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции(ИмяФункции,ИмяОсновнойФормы,"",Кэш);
				Если фрм = Ложь Тогда
					Продолжить;
				КонецЕсли;				
				сбисТекст	= Вычислить("фрм." + ИмяФункции + "(Кэш, СоставПакета, Вложение, Действие, ДополнительныеПараметры)");
				сбисДамп	= Новый Структура("Действие", сбисСкопироватьОбъектНаКлиенте(Действие));
				Отказ		= Истина;
				Возврат сбисИсключение(, ИмяОсновнойФормы + "." + ИмяФункции, 610, "Отсутствует файл настроек для данного типа данных", сбисТекст, сбисДамп)
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		Попытка
			сбисРезультат = Вычислить("фрм."+ИмяФункции+"(Кэш, СоставПакета, Вложение, Действие, ДополнительныеПараметры)");
		Исключение
			//Не удалось посчитать титул.
			Отказ = Истина;
			сбисДамп = Новый Структура("Действие", сбисСкопироватьОбъектНаКлиенте(Действие));
			Возврат сбисИсключение(, ?(ЗначениеЗаполнено(ИмяОсновнойФормы), ИмяОсновнойФормы, ИмяВспомогательнойФормы) + ".сбисСформироватьТитулы", 
			600, "Неизвестная ошибка настроек", ОписаниеОшибки(), сбисДамп)
		КонецПопытки;
	КонецЦикла;
	Возврат Истина;
КонецФункции

//Основная функция, генерирующая титул
&НаКлиенте
Функция СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры = Неопределено) Экспорт
	Перем СертификатПодписи, ИмяФайла;
	Отказ = Ложь;
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		ДвоичныеДанныеBase64 = Кэш.Интеграция.ПолучитьДанныеЗашифрованногоФайла(Кэш,Вложение.Файл.Ссылка);
		Если ДвоичныеДанныеBase64 = "" Тогда
			//Об ошибке уже сообщили.
			Возврат Неопределено;
		КонецЕсли;
		XMLФайла = сбисТекстИзBase64(ДвоичныеДанныеBase64);
	Иначе
		XMLФайла = Кэш.Интеграция.ПолучитьДанныеФайла(Кэш,Вложение.Файл.Ссылка);
	КонецЕсли;
	СтруктураФайла = ЗаполнитьСтруктуруФайла(XMLФайла);
	ЭП = Новый Массив;
	Для Каждого Подпись Из Вложение.Подпись Цикл
		ФайлПодписи = Кэш.Интеграция.СБИС_СохранитьПоСсылкеВФайл(Кэш, Новый Структура("Ссылка, ИмяФайла", Подпись.Файл.Ссылка, СбисПолучитьИмяВременногоФайлаКлиент()), Новый Структура, Отказ);
		Если Отказ Тогда
			Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, ФайлПодписи);
			Возврат Неопределено;
		КонецЕсли;
		ДвоичныеДанныеПодписи = Новый ДвоичныеДанные(ФайлПодписи);
		ЭП.Добавить(Новый Структура("ЭП", СтрЗаменить(СтрЗаменить(Base64Строка(ДвоичныеДанныеПодписи),Символы.ПС,""),Символы.ВК,"")));
	КонецЦикла;
	ИдПол	=  СтруктураФайла.Файл.СвУчДокОбор.ИдПол;
	ИдОтпр	=  СтруктураФайла.Файл.СвУчДокОбор.ИдОтпр;
	ДатаДок	= ТекущаяДата();
	Если ДопПараметры.Свойство("РезультатПодготовки") Тогда
		ПараметрыПоискаВложения = Новый Структура("Служебный, Подтип, Тип", "Да");
		ЗаполнитьЗначенияСвойств(ПараметрыПоискаВложения, НовоеВложение);
		ТитулОнлайна = СбисНайтиВложениеВРезультатеПодготовки(Кэш, ПараметрыПоискаВложения, Действие, ДопПараметры.РезультатПодготовки, ДопПараметры);
		Если Не ТитулОнлайна = Неопределено Тогда
			ИмяФайла	= ТитулОнлайна.Файл.Имя;
			ИмяТитулаСтр= СтрЗаменить(ИмяФайла, "_", Символы.ПС);
			Для СтрСчетчик = 0 По 1 Цикл
				ИмяФайла = Лев(ИмяФайла, СтрДлина(ИмяФайла) - СтрДлина(СтрПолучитьСтроку(ИмяТитулаСтр, СтрЧислоСтрок(ИмяТитулаСтр) - СтрСчетчик)) - 1);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если ИмяФайла = Неопределено Тогда
		ИмяФайла = ПрефиксФайла + ИдОтпр + "_" + ИдПол;
	КонецЕсли;
	ИмяФайла = ИмяФайла +  "_" + формат(ДатаДок,"ДФ=yyyyMMdd") + "_" + Строка(Новый УникальныйИдентификатор());	
	ДанныеПолучателя = Новый Структура;
	ДанныеПолучателя.Вставить("ИдФайл",		ИмяФайла);
	ДанныеПолучателя.Вставить("ДатаДок",	формат(ДатаДок,"ДФ=dd.MM.yyyy"));
	ДанныеПолучателя.Вставить("ВремДок",	формат(ДатаДок,"ДФ=HH.mm.ss"));
	Если	ЗначениеЗаполнено(ДопПараметры)
		И	ДопПараметры.Свойство("ЕстьРасхождения")
		И	ДопПараметры.ЕстьРасхождения Тогда
		ДанныеПолучателя.Вставить("КодИтога", "2");
		ДанныеПолучателя.Вставить("СодОпер", "Товары(груз)/услуги(результаты работ, права) принял с расхождениями");
	КонецЕсли;
	//Попробуем сгенерировать подписанта
	Если	Действие.Свойство("Сертификат", СертификатПодписи)
		И	ЗначениеЗаполнено(СертификатПодписи) Тогда
		Если ТипЗнч(СертификатПодписи) = Тип("Массив") Тогда
			СертификатПодписи = СертификатПодписи[0];
		КонецЕсли;
		Подписант = СбисПолучитьФИО(СертификатПодписи.ФИО);
		Подписант.Вставить("ИНН",				СертификатПодписи.ИНН);
		Подписант.Вставить("Должность",			?(ЗначениеЗаполнено(СертификатПодписи.Должность), СертификатПодписи.Должность, "-"));
		ДанныеПолучателя.Вставить("Подписант",	Подписант);
	КонецЕсли;
	ДанныеПолучателя.Вставить("Подпись",		ЭП);
	ДанныеПолучателя.Вставить("НашаОрганизация",СоставПакета.НашаОрганизация);
	СтруктураФайла.Файл.Вставить("ДанныеПолучателя", ДанныеПолучателя);
	ОшибкаПреобразования = Ложь;
	РезультатПреобразования = СбисПолучитьXMLФайлаИзСтруктурыПоИмениXSLT_Клиент(Кэш, СтруктураФайла, ИмяXSLT, Новый Структура, ОшибкаПреобразования);
	Если ОшибкаПреобразования Тогда
		Кэш.ГлавноеОкно.сбисСообщитьОбОшибке(Кэш, Кэш.ОбщиеФункции.сбисИсключение(РезультатПреобразования,  Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".сбисСформироватьТитулПолучателяАктаНакладной_5_01"));
		XMLДокумента = Неопределено;
	Иначе
		XMLДокумента = РезультатПреобразования;
	КонецЕсли;
	
	НовоеВложение.Вставить("ИмяФайла", ИмяФайла+".xml");
	НовоеВложение.Вставить("XMLДокумента", XMLДокумента);
	
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("ВерсияФормата") Тогда
		НовоеВложение.Вставить("ВерсияФормата", ДопПараметры.ВерсияФормата);
	Иначе
		НовоеВложение.Вставить("ВерсияФормата", "5.01");
	КонецЕсли;
	НовоеВложение.Вставить("Служебный", "Да");
	НовоеВложение.Вставить("Дата", формат(ДатаДок,"ДФ=dd.MM.yyyy"));
	
	СоставПакета.Вложение.Добавить(НовоеВложение);	
КонецФункции

//Функция возвращает вложение из подготовленного действия по параметрам
&НаКлиенте
Функция СбисНайтиВложениеВРезультатеПодготовки(Кэш, ПараметрыПоискаВложения, Действие, РезультатПодготовки, ДопПараметры)
	Перем НазваниеДействия, СписокПодготовленныхВложений, ЗначениеСвойстваПроверки;
	Если	Не ЗначениеЗаполнено(Действие)
		Или	Не Действие.Свойство("Название", НазваниеДействия) Тогда
		Возврат Неопределено;
	ИначеЕсли НазваниеДействия = "Утвердить" Тогда
		//Различается название в действии и подготовке
		НазваниеДействия = "Утверждение";
	КонецЕсли;
	Для Каждого ГотовыйЭтап Из РезультатПодготовки.Этап Цикл
		Если ГотовыйЭтап.Название = НазваниеДействия Тогда
			СписокПодготовленныхВложений = ГотовыйЭтап.Вложение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не ЗначениеЗаполнено(СписокПодготовленныхВложений) Тогда
		Возврат Неопределено;
	КонецЕсли;
	Для Каждого ВложениеПодготовлено Из СписокПодготовленныхВложений Цикл
		ВложениеНайдено = Истина;
		Для Каждого КлючИЗначение Из ПараметрыПоискаВложения Цикл
			Если	ВложениеПодготовлено.Свойство(КлючИЗначение.Ключ, ЗначениеСвойстваПроверки)
				И	ЗначениеСвойстваПроверки = КлючИЗначение.Значение Тогда
				Продолжить;
			КонецЕсли;
			ВложениеНайдено = Ложь;
			Прервать;
		КонецЦикла;
		Если ВложениеНайдено Тогда
			Возврат ВложениеПодготовлено;
		КонецЕсли;
	КонецЦикла;
КонецФункции

&НаКлиенте
Функция Утвердить_ЭДОНакл(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Возврат "Отсутствует настройка для формирования титула получателя для зашифрованного документа " + Вложение.Тип + " "+Вложение.ПодТип + " "+Вложение.ВерсияФормата;
КонецФункции

&НаКлиенте
Функция Утвердить_АктВР(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Возврат "Отсутствует настройка для формирования титула получателя для зашифрованного документа " + Вложение.Тип + " "+Вложение.ПодТип + " "+Вложение.ВерсияФормата;
КонецФункции

&НаКлиенте
Функция Утвердить_ЭДОНакл_1175010_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "НаклПокуп");
	НовоеВложение.Вставить("Подтип", "1175011");
	НовоеВложение.Вставить("Название", "Товарная накладная (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_ЭДОНакл_1175010_5_01";
	ПрефиксФайла = "DP_TOVTORGPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

&НаКлиенте
Функция Утвердить_АктВР_1175012_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "АктЗаказ");
	НовоеВложение.Вставить("Подтип", "1175013");
	НовоеВложение.Вставить("Название", "Акт (титул заказчика)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_АктВР_1175012_5_01";
	ПрефиксФайла = "DP_REZRUZAK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

&НаКлиенте
Функция Утвердить_УпдДоп_1115125_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УпдДопПокуп");
	НовоеВложение.Вставить("Подтип", "1115126");
	НовоеВложение.Вставить("Название", "Передаточный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УпдДоп_1115125_5_01";
	ПрефиксФайла = "ON_SCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла);
	
КонецФункции

&НаКлиенте
Функция Утвердить_УпдДоп_1115131_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УпдДопПокуп");
	НовоеВложение.Вставить("Подтип", "1115132");
	НовоеВложение.Вставить("Название", "Передаточный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УпдДоп_1115131_5_01";
	ПрефиксФайла = "ON_NSCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

&НаКлиенте
Функция Утвердить_УпдСчфДоп_1115125_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УпдСчфДопПокуп");
	НовоеВложение.Вставить("Подтип", "1115126");
	НовоеВложение.Вставить("Название", "Универсальный передаточный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УпдДоп_1115125_5_01";
	ПрефиксФайла = "ON_SCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

&НаКлиенте
Функция Утвердить_УпдСчфДоп_1115131_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УпдСчфДопПокуп");
	НовоеВложение.Вставить("Подтип", "1115132");
	НовоеВложение.Вставить("Название", "Универсальный передаточный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УпдДоп_1115131_5_01";
	ПрефиксФайла = "ON_NSCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
КонецФункции

&НаКлиенте
Функция Утвердить_УкдДис_1115127_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УкдДисПокуп");
	НовоеВложение.Вставить("Подтип", "1115128");
	НовоеВложение.Вставить("Название", "Универсальный Корректировочный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УкдДис_1115127_5_01";
	ПрефиксФайла = "ON_KORSCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

&НаКлиенте
Функция Утвердить_УкдКсчфДис_1115127_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	НовоеВложение = Новый Структура;
	НовоеВложение.Вставить("Тип", "УкдКсчфДисПокуп");
	НовоеВложение.Вставить("Подтип", "1115128");
	НовоеВложение.Вставить("Название", "Универсальный корректировочный документ (титул покупателя)");
	Если ЗначениеЗаполнено(ДопПараметры) И ДопПараметры.Свойство("Шифрование") И ДопПараметры.Шифрование Тогда
		НовоеВложение.Вставить("ТребуетШифрования", "Да");
	КонецЕсли;
	ИмяXSLT = "Утвердить_УкдДис_1115127_5_01";
	ПрефиксФайла = "ON_KORSCHFDOPPOK_";
	
	СбисСформироватьТитулПолучателяАктаНакладной_5_01(Кэш, СоставПакета, Вложение, НовоеВложение, Действие, ИмяXSLT, ПрефиксФайла, ДопПараметры);
	
КонецФункции

//5.02
&НаКлиенте
Функция Утвердить_ЭДОНакл_1175010_5_02(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Если ДопПараметры=Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	ДопПараметры.Вставить("ВерсияФормата", "5.02");
	Возврат Утвердить_ЭДОНакл_1175010_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры);	
КонецФункции

&НаКлиенте
Функция Утвердить_АктВР_1175012_5_02(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Если ДопПараметры=Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	ДопПараметры.Вставить("ВерсияФормата", "5.02");
	Возврат Утвердить_АктВР_1175012_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры);	
КонецФункции

&НаКлиенте
Функция Утвердить_УкдДис_1115127_5_02(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Если ДопПараметры=Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	ДопПараметры.Вставить("ВерсияФормата", "5.02");
	Возврат Утвердить_УкдДис_1115127_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры);	
КонецФункции

&НаКлиенте
Функция Утвердить_УкдКсчфДис_1115127_5_02(Кэш, СоставПакета, Вложение, Действие, ДопПараметры=Неопределено) Экспорт
	Если ДопПараметры=Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	ДопПараметры.Вставить("ВерсияФормата", "5.02");
	Возврат Утвердить_УкдКсчфДис_1115127_5_01(Кэш, СоставПакета, Вложение, Действие, ДопПараметры);	
КонецФункции

