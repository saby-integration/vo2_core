
//////////////Интерактивная кнопка KES///////////////

&НаКлиенте
Функция сбисПослеВыбораПерехода(Результат, сбисДополнительныеПараметры) Экспорт
	Перем сбисСписокПакетов;
	Если НЕ	(	ЗначениеЗаполнено(Результат)
		И	сбисДополнительныеПараметры.Свойство("СписокПакетов", сбисСписокПакетов)
		И	сбисСписокПакетов.Количество()) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//получение сертификатов, ввод пин-кода при необходимости. 
	//внесение комментария на форме переходов происходит в функциях выше по стеку вызовов индивидуально
	
	ПараметрыПереходЗавершение = Новый Структура;
	//скопирую все параметры для переноса в последующие функции
	Для Каждого Параметр Из сбисДополнительныеПараметры Цикл
		ПараметрыПереходЗавершение.Вставить(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Если Результат.Действие.ТребуетПодписания = "Да" Тогда
		//возможно, было удобно предварительно собрать список ИНН по переданным пакетам
		Если сбисДополнительныеПараметры.Свойство("СписокИНН") И сбисДополнительныеПараметры.СписокИНН.Количество() > 0 Тогда
			СписокИНН = сбисДополнительныеПараметры.СписокИНН;
		Иначе
			//пока не понятно, зачем мне список ИНН, если я могу работать только с одним подходящим сертификатом
			СписокИНН = Новый СписокЗначений;
			Для Каждого Пакет из сбисСписокПакетов Цикл
				ИННОрг = ?(Пакет.Значение.НашаОрганизация.Свойство("СвФЛ"),Пакет.Значение.НашаОрганизация.СвФЛ.ИНН,Пакет.Значение.НашаОрганизация.СвЮЛ.ИНН);
				Если СписокИНН.НайтиПоЗначению("ИННОрг") = Неопределено Тогда
					СписокИНН.Вставить(ИННОрг);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		МассивОрганизаций = МестныйКэш.Интеграция.ПолучитьСписокНашихОрганизаций(МестныйКэш, СписокИНН);	
		
		СписокСертификатов = МестныйКэш.Интеграция.ПолучитьСертификатыДляАктивации(МестныйКэш,СписокИНН);
		Если СписокСертификатов.Количество()>0 Тогда
			Сертификат = СписокСертификатов[0].Значение;
			Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
				МестныйКэш.Интеграция.ПолучитьКодАктивацииСертификата(МестныйКэш, Сертификат);				
			КонецЕсли;
			
			ДополнитьПараметрыСертификатом(ПараметрыПереходЗавершение,0,СписокСертификатов,МестныйКэш,МассивОрганизаций,Результат);
			
			//выход после первого сертификата, т.е. для нескольких разных организаций с разными сертификатами массовой обработки нет
			ФормаВводаПинкода = МестныйКэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода");
			ПараметрыВвода = Новый Структура("СертификатИмя", СформироватьЗаголовокСертификатаДляФормыВвода(МестныйКэш, Сертификат));
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				КодАктивации = ФормаВводаПинкода.Показать(ПараметрыВвода);
				Если Не	ЗначениеЗаполнено(КодАктивации)	Или КодАктивации.ПинКод = "" Тогда
					Сообщить("Не активирован сертификат для подписания документов.");
					Возврат Неопределено;	
				КонецЕсли;		
				Возврат сбисВыполнитьПереходЗавершение(Новый Структура("ПинКод",КодАктивации.ПинКод), ПараметрыПереходЗавершение);		
			#Иначе
				ФормаВводаПинкода.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сбисВыполнитьПереходЗавершение",ЭтаФорма,ПараметрыПереходЗавершение);
				ФормаВводаПинкода.Показать(ПараметрыВвода);
			#КонецЕсли
			Возврат Неопределено;
		Иначе
			ДополнитьПараметрыСертификатом(ПараметрыПереходЗавершение,0,Новый СписокЗначений,МестныйКэш,Новый Массив,Результат);
			Возврат сбисВыполнитьПереходЗавершение(Истина, ПараметрыПереходЗавершение);
		КонецЕсли;
	Иначе
		
		//подписание не требуется
		ДополнитьПараметрыСертификатом(ПараметрыПереходЗавершение,0,Новый СписокЗначений,МестныйКэш,Новый Массив,Результат);
		
		Возврат сбисВыполнитьПереходЗавершение(Истина, ПараметрыПереходЗавершение);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция сбисВыполнитьПереходЗавершение(Результат, сбисДополнительныеПараметры) Экспорт
	
	Кэш = сбисДополнительныеПараметры.Кэш;
	РезультатДетализация		= Новый Структура("Строки");
	РезультатДетализация.Строки	= Новый Структура("Выполнено, НеВыполнено",Новый Соответствие, Новый Соответствие);
	РезультатВыбораПерехода = сбисДополнительныеПараметры.РезультатВыбораПерехода;
	
	//сертификаты
	Если Результат = Неопределено Тогда   // не ввели пин-код
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			//вызов осуществляется на форме выбора действия
			Возврат РезультатДетализация;
		#Иначе
			//обработка результата (индивидуально на каждой форме, для этого в параметрах должно находиться оповещение)
			ВыполнитьОбработкуОповещения(сбисДополнительныеПараметры.ОповещениеРезультатДействия, РезультатДетализация);
		#КонецЕсли
	КонецЕсли;
	
	
	СчСерт = сбисДополнительныеПараметры.СчСерт;
	СписокСертификатов = сбисДополнительныеПараметры.СписокСертификатов;
	
	//"Результат" получен на форме ввода пин-кода или в нем содержится "Истина", когда работа ведется без сертификата
	Если СписокСертификатов.Количество()>0 И ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("ПинКод") Тогда
		Серт = СписокСертификатов[СчСерт].Значение;
		//ФормаВводаПинкода всегда в результате возвращает ПинКод
		Серт.Вставить("КодАктивации", Результат.ПинКод);
	КонецЕсли;
	
	Если СчСерт<СписокСертификатов.Количество()-1 Тогда    // еще не все пин-коды ввели
		
		Сертификат = СписокСертификатов[СчСерт+1].Значение;
		Если Сертификат.Ключ.СпособАктивации<>"СтатическийКод" Тогда
			Кэш.Интеграция.ПолучитьКодАктивацииСертификата(Кэш, Сертификат);				
		КонецЕсли;
		//зациклим снова на сбисВыполнитьПереходЗавершение
		сбисДополнительныеПараметры.СчСерт = сбисДополнительныеПараметры.СчСерт+1;
		ФормаВводаПинКода = Кэш.ГлавноеОкно.сбисПолучитьФорму("ФормаВводаПинкода");
		ПараметрыВвода = Новый Структура("СертификатИмя", СформироватьЗаголовокСертификатаДляФормыВвода(Кэш, Сертификат));
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			сбисРезультат = ФормаВводаПинКода.Показать(ПараметрыВвода);
			сбисВыполнитьПереходЗавершение(сбисРезультат, сбисДополнительныеПараметры);
		#Иначе			
			ФормаВводаПинКода.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("сбисВыполнитьПереходЗавершение", ЭтаФорма, сбисДополнительныеПараметры);
			ФормаВводаПинКода.Показать(ПараметрыВвода);
		#КонецЕсли
		Возврат Неопределено;
	Иначе  // ввели пин-коды для всех сертов
		//сообщит "введен неправильный код", если ПинКод не верен
		Кэш.Интеграция.АктивироватьСерверныеСертификаты(Кэш, СписокСертификатов);
	КонецЕсли;
	
	//обработка перехода
	Для Каждого СоставПакета из сбисДополнительныеПараметры.СписокПакетов Цикл
		//не исключено, что в выделенные записи попали документы на финальном этапе. Это не повод прерывать обработку
		Если НЕ ( СоставПакета.Значение.Свойство("Этап") И СоставПакета.Значение.Этап.Количество() > 0 ) Тогда
			Продолжить;
		КонецЕсли;
		
		//обрабатывается всегда ближайший, нулевой этап
		Если РезультатВыбораПерехода.Свойство("Исполнитель")	Тогда
			СоставПакета.Значение.Этап[0].Вставить("Исполнитель", РезультатВыбораПерехода.Исполнитель);
		КонецЕсли;
		
		//общая функция перед выполнением действия, если требуется, к примеру, прикрепить пакет с расхождением.
		//для сетей перед выполнением отклонения будет крепиться расхождение, но решено сделать это через внешние функции
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПередЗавершениемПерехода", "РаботаСДокументами1С","",Кэш);
		
		//скопирую все параметры для переноса в последующие функции
		ПараметрыПередЗавершениемПерехода = Новый Структура;
		Для Каждого Параметр Из сбисДополнительныеПараметры Цикл
			ПараметрыПередЗавершениемПерехода.Вставить(Параметр.Ключ, Параметр.Значение);
		КонецЦикла;
		//конкретный пакет
		ПараметрыПередЗавершениемПерехода.Вставить("СоставПакета",СоставПакета.Значение);
		
		Если Не фрм = Ложь Тогда
			КлиентскийРезультат = фрм.сбисПередЗавершениемПерехода(Кэш, ПараметрыПередЗавершениемПерехода);	
		КонецЕсли;
		
		ДействиеВыполнено = Ложь;
		Если ЗначениеЗаполнено(КлиентскийРезультат) И Строка(ТипЗнч(КлиентскийРезультат))="Структура" И КлиентскийРезультат.Свойство("Продолжить") И КлиентскийРезультат.Продолжить = Ложь Тогда
			Сообщить(?(КлиентскийРезультат.Свойство("Сообщение") И ЗначениеЗаполнено(КлиентскийРезультат.Сообщение),КлиентскийРезультат.Сообщение, "Выполнение перехода прервано для документа """+СоставПакета.Значение.Название+Символ(34)));
			Продолжить;
		Иначе 
			ДействиеВыполнено = МестныйКэш.Интеграция.сбисВыполнитьДействие(МестныйКэш, ПараметрыПередЗавершениемПерехода.СоставПакета, СоставПакета.Значение.Этап[0], РезультатВыбораПерехода.Действие, РезультатВыбораПерехода.Комментарий, "");
			//общая функция после выполнения действия
			фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеЗавершенияПерехода", "РаботаСДокументами1С","",Кэш);
			Если Не фрм = Ложь Тогда
				фрм.сбисПослеЗавершенияПерехода(Кэш, ПараметрыПередЗавершениемПерехода,Новый Структура("Этап,Действие,Результат", СоставПакета.Значение.Этап[0],РезультатВыбораПерехода.Действие,ДействиеВыполнено));	
			КонецЕсли;
		КонецЕсли;
		
		СтрокаРезультат = РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ВыполнитьДействие");
		Если НЕ СтрокаРезультат.Свойство("ИдентификаторПакета") Тогда
			СтрокаРезультат.Вставить("ИдентификаторПакета",ПараметрыПередЗавершениемПерехода.СоставПакета.Идентификатор);
		Иначе
			СтрокаРезультат.ИдентификаторПакета	= ПараметрыПередЗавершениемПерехода.СоставПакета.Идентификатор;
		КонецЕсли;
		
		СтрокаРезультат.Состояние = ДействиеВыполнено;
		СтрокаРезультат.Сообщение = РезультатВыбораПерехода.Действие.Название + " " + ПараметрыПередЗавершениемПерехода.СоставПакета.Название;
		
		Если ДействиеВыполнено = Истина Тогда
			РезультатДетализация.Строки.Выполнено.Вставить(ПараметрыПередЗавершениемПерехода.СоставПакета.Идентификатор, СтрокаРезультат);
		Иначе
			РезультатДетализация.Строки.НеВыполнено.Вставить(ПараметрыПередЗавершениемПерехода.СоставПакета.Идентификатор, СтрокаРезультат);
		КонецЕсли;
	КонецЦикла;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//вызов осуществляется на форме выбора действия
		Возврат РезультатДетализация;
	#Иначе
		//обработка результата (индивидуально на каждой форме, для этого в параметрах должно находиться оповещение)
		ВыполнитьОбработкуОповещения(сбисДополнительныеПараметры.ОповещениеРезультатДействия,РезультатДетализация);
	#КонецЕсли
	
КонецФункции

//Вынесен дублирующийся код
&НаКлиенте
Процедура ДополнитьПараметрыСертификатом(Парам,СчСерт,СписокСертификатов,Кэш,МассивОрганизаций,РезультатВыбораПерехода)
	
	Парам.Вставить("Кэш",						Кэш);
	Парам.Вставить("МассивОрганизаций",			МассивОрганизаций);
	Парам.Вставить("РезультатВыбораПерехода",	РезультатВыбораПерехода);
	Парам.Вставить("СчСерт",					СчСерт);
	Парам.Вставить("СписокСертификатов",		СписокСертификатов);
	
КонецПроцедуры

&НаКлиенте
Функция УпорядочитьВложенияВПакете(ПолныйСоставПакета) Экспорт
	Вложения = Новый СписокЗначений;	
	Для Каждого Вложение Из ПолныйСоставПакета.Вложение Цикл
		ИндексМассива = ?(Вложение.Свойство("СтруктураИниФайла") И Вложение.СтруктураИниФайла.Свойство("Вес") И (НЕ Вложение.СтруктураИниФайла.Вес = Неопределено),Вложение.СтруктураИниФайла.Вес,0);
		Вложения.Добавить(Вложение,ИндексМассива);
	КонецЦикла;
	Вложения.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
	Возврат Вложения.ВыгрузитьЗначения();
КонецФункции

