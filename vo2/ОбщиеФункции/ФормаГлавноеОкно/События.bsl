
&НаКлиенте
Процедура ПриОткрытииЭДО(Отказ = Ложь)
	
	Попытка
		
		ПроверитьИУстановитьКэш();
		
	Исключение
		
		Отказ = Истина;
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			
			ЗавершитьРаботу = Истина;
			Закрыть();
			
		#КонецЕсли
		
		ВызватьИсключение;
		
	КонецПопытки;

	#Если ВебКлиент Тогда
		
		ОбработчикПослеОткрытия = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ПослеУстановитьРасширениеРаботыСФайлами", ЭтаФорма);
		НачатьУстановкуРасширенияРаботыСФайлами(ОбработчикПослеОткрытия);

	#Иначе
		
		ОбработчикПослеОткрытия = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("СтартОбработкиВО2", ЭтаФорма);
		ЭлементПолеHTML = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "АккордеонHTML");
		РеквизитОбъектаДокумента = "defaultView"; // WebKit
		Если		ТипЗнч(ЭлементПолеHTML.Документ) = Тип("COMОбъект") Тогда

			РеквизитОбъектаДокумента = "parentWindow";
			
		КонецЕсли;
		
		МодульОбъектаКлиент().ПодключитьОтложенноеДействие(ОбработчикПослеОткрытия);
		
	#КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, Параметр2 = Неопределено, Параметр3 = Неопределено, Параметр4 = Неопределено)
	
	Если	ЗавершитьРаботу
		Или Кэш = Неопределено Тогда
		Возврат;	
	КонецЕсли;     
	
	Отказ = Истина;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда 
		
		Параметр2 = Ложь;
		
	#Иначе
		
		Если Параметр2 = Истина Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	#КонецЕсли
	
	Попытка
		ОбработчикОписанияОповещения = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ЗакрытиеЗавершение", ЭтаФорма);
		
		ТекстВопроса = "Завершить работу в СБИС?";
		МодульОбъектаКлиент().СбисПоказатьВопрос(ОбработчикОписанияОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Исключение
		Отказ = Ложь;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеЗавершение(РезультатДиалога, ДопПараметры = Неопределено) Экспорт
	
	Если Не РезультатДиалога = КодВозвратаДиалога.Да Тогда	
		Возврат;
	КонецЕсли;

	Попытка
		
		МодульОбъектаКлиент().СбисЗавершитьРаботу();
		
	Исключение
		
		Сообщить(ОписаниеОшибки());
		ЗавершитьРаботу = Истина;
		Закрыть();
		
	КонецПопытки;
	
КонецПроцедуры

// Завершение открытия/перезапуска главного окна. Установка настроек, запуск редактора настроек при необходимости.
//
// Параметры:
//  ПараметрыЗавершенияВходящие	 - Струкутра	 -
//		ПовторныйЗапуск - Булево, Истина если окно не закрывалось, а перезапускается.
//		ИзмененаФормаНастроек - Булево, при изменении способа хранения настроек.
//		ОбновитьКонтент - Булево, нужно обновить таблицу реестра документов. Например, произошло изменение пользователя
//		ИзмененияОбмена - Структура, изменился способ обмена со СБИС.
//  ДопПараметры				 - Струкутра	 - резерв под расширение
//
&НаКлиенте
Процедура ПослеОткрытияЗавершение(ПараметрыЗавершенияВходящие=Неопределено, ДопПараметры=Неопределено) Экспорт
	
	ЭтоПовторныйЗапуск		= Ложь;//При перезапуске не надо запускать некоторые функции.
	НужноОбновитьКонтент	= Истина;//Необходимо перечитать текущий активный раздел
	НужноОткрытьРедакторИни = Ложь;//Проблема с ини. Надо открыть форму раздела, либо обновить её.
	
	Если Не	ПараметрыЗавершенияВходящие = Неопределено Тогда
		Если Не ПараметрыЗавершенияВходящие.Свойство("ПовторныйЗапуск", ЭтоПовторныйЗапуск) Тогда
			ЭтоПовторныйЗапуск		= Ложь;
		КонецЕсли;
		Если Не	ПараметрыЗавершенияВходящие.Свойство("ОбновитьКонтент", НужноОбновитьКонтент) Тогда
			НужноОбновитьКонтент	= Истина
		КонецЕсли;
	КонецЕсли;
	
	НужноОбновитьКонтент = НужноОбновитьКонтент И ЭтоПовторныйЗапуск; //Надо перейти в раздел, а не обновить
	
	Попытка
		Кэш.ФормаНастроекОбщее.СбисПолучитьИУстановитьНастройкиВКэш(Новый Структура("ПринудительнаяПроверка, ПродолжитьУстановку", Ложь, Истина), Кэш);	
		НужноОткрытьРедакторИни = Кэш.ФормаНастроекОбщее.Открыта() Или Не Кэш.КэшНастроек.ИниВПорядке Или Кэш.КэшНастроек.ИзмененияВНастройках;
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		СбисИсключение = МодульОбъектаКлиент().НовыйСбисИсключение(ИнфоОбОшибке, "ФормаГлавноеОкно.ПослеОткрытияЗавершение");
		СбисСообщитьОбОшибке(Кэш, СбисИсключение, Новый Структура("ФормаВладелец", ЭтаФорма));
		НужноОткрытьРедакторИни = Истина;//Чтобы поправить проблемы;
	КонецПопытки;
	
	СбисОбновитьЗаголовокФормы(Кэш.СБИС);

	//перестроить аккордеон после изменения способа обмена
	Если	ПараметрыЗавершенияВходящие.Свойство("ИзмененияОбмена")
		И	ТипЗнч(ПараметрыЗавершенияВходящие.ИзмененияОбмена) = Тип("Структура") Тогда
		СформироватьСтруктуруАккордеона(Аккордеон, Новый Структура());
	КонецЕсли;
	
	ВсеДокументы	= Ложь;
	ФильтрСтраница	= 1;
	
	Если Не ЭтоПовторныйЗапуск Тогда
		Попытка
			ПараметрыЗапуска = Новый Структура;
			ПараметрыЗапуска.Вставить("АктивнаяВерсия",	Версия);
			ПараметрыЗапуска.Вставить("СтараяВерсия",	МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("ПредВерсия"));
			ПараметрыЗапуска.Вставить("СбисПараметры",	Кэш.ФормаНастроек.ПолучитьПараметрыСБИС(Кэш, Кэш.Парам.ИдентификаторНастроек));
			
			МодульОбъектаКлиент().ДействияПриСтарте(ПараметрыЗапуска, Кэш);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СбисСообщитьОбОшибке(Кэш, МодульОбъектаКлиент().НовыйСбисИсключение(ИнфоОбОшибке, "ФормаГлавноеОкно.ПослеОткрытияЗавершение"), Новый Структура("ФормаВладелец", ЭтаФорма));
		КонецПопытки;
	КонецЕсли;
	
#Область include_local_ЗаполнитьКонтекстВО3
#КонецОбласти
	
	//Обновим ГО при старте переходом, либо обновив текущий раздел
	//ФормаБлокировкиИнтерфейса = МодульОбъектаКлиент().СбисПолучитьБлокировкуФормы(ЭтаФорма);
	//Если	Не	ФормаБлокировкиИнтерфейса = Неопределено Тогда
	//	МодульОбъектаКлиент().СбисОбновитьБлокировку(ЭтаФорма, ПараметрыОбновить);
	//Иначе
	Если		НужноОткрытьРедакторИни Тогда
		ПараметрыОбновить = Новый Структура
		("ПовторныйЗапуск,	ОбновитьКонтент,		ОткрытьРедакторИни", 
		ЭтоПовторныйЗапуск,	НужноОбновитьКонтент,	НужноОткрытьРедакторИни);
		МодульОбъектаКлиент().ЗапуститьРедакторИни(ПараметрыОбновить);
		Возврат;
	ИначеЕсли	НужноОбновитьКонтент Тогда
		ОбновитьКонтент();
 		СбисСпрятатьСостояние(ЭтаФорма);				
		Возврат;
	Иначе
		ПерейтиВРаздел(СбисПолучитьИмяКнопкиПоРазделу(Кэш.Парам.РазделПоУмолчанию));
	КонецЕсли;
		
	СбисСпрятатьСостояние(ЭтаФорма);				
	ФильтрОбновитьПанель();
	
КонецПроцедуры

