&НаКлиенте
Процедура ЗаполнитьКонтекстВО3()
	Если Не МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ВключитьВО3") Тогда
		Возврат;
	КонецЕсли;
	Если Не Кэш.КэшНастроек.ИниВПорядке Тогда
		Возврат;
	КонецЕсли;
	Если context_param = Неопределено Тогда
		context_param = Новый Структура();
	КонецЕсли;
	context_param.Вставить("session", МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ИдентификаторСессии"));
	АдрСервера = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("АдресСервера");
	АдрСервера = СтрЗаменить(АдрСервера, "online.", "ie-1c.");
	АдрСервера = СтрЗаменить(АдрСервера, ".sbis", ".saby");
	АдрСервера = Лев(АдрСервера, СтрДлина(АдрСервера) - 1);
	context_param.Вставить("api_url", АдрСервера);
	context_param.Удалить("Proxy");
	ТипПрокси = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ТипПрокси");
	Если ТипПрокси = "Вручную" Тогда
		Proxy = Новый Структура;
		Порт = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ПроксиПорт");
		ТипЧисло  = Новый ОписаниеТипов("Число");
		Порт = ТипЧисло.ПривестиЗначение(Порт);
		АдресСервераСтр	= СтрЗаменить(АдрСервера, ":", Символы.ПС);
		Proxy.Вставить("Protocol", СтрПолучитьСтроку(АдресСервераСтр, 1));
		Proxy.Вставить("Server", МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ПроксиСервер"));
		Proxy.Вставить("Port", Порт);
		Proxy.Вставить("User", МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ПроксиЛогин"));
		Proxy.Вставить("Password", МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ПроксиПароль"));
		context_param.Вставить("Proxy", Proxy);
	КонецЕсли;
	
	Если СпособОбмена = 6 Или СпособОбмена = 7 Тогда
		context_param.Вставить("exchange_method", "ExtSdk2");
	ИначеЕсли СпособОбмена = 8 Тогда
		context_param.Вставить("exchange_method", "SabyPluginConnector");
	ИначеЕсли СпособОбмена = 9 Тогда
		context_param.Вставить("exchange_method", "SabyHttpsClient");
	Иначе
		context_param.Вставить("exchange_method", "API");
	КонецЕсли;

	ДопПараметры = Новый Структура("СтруктураАккордеона", АккордеонЭДО);
	КэшФорм.ИменаФорм = ПослеОткрытияНаКлиенте(ДопПараметры);
КонецПроцедуры

