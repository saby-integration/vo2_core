
&НаКлиенте
Функция УстановитьИконкиРазделов(Раздел) 
	Если Раздел = "АккордеонПолученные11" Тогда
		Возврат "Inbox";
	ИначеЕсли Раздел = "АккордеонОтправленные22" Тогда
		Возврат "Outbox";
	ИначеЕсли Раздел = "АккордеонПродажа33" Тогда
		Возврат "Selling";
	ИначеЕсли Раздел = "АккордеонПокупка44" Тогда
		Возврат "Purchase";
	ИначеЕсли Раздел = "АккордеонНастройки55" Тогда
		Возврат "Setting";
	ИначеЕсли Раздел = "АккордеонСправочники66" Тогда
		Возврат "Nomenclature";	
	ИначеЕсли Раздел = "АккордеонУчет77" Тогда
		Возврат "Accounting";
	ИначеЕсли Раздел = "АккордеонЗадачи88" Тогда
		Возврат "Deeds";
	ИначеЕсли Раздел = "АккордеонОтчетность99" Тогда
		Возврат "Ereport";
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура  СформироватьСтруктуруАккордеона(Аккордеон, ДопПараметры = Неопределено) Экспорт
	
	Попытка
		ОтключитьВидимостьРазделаПоСпособуОбмена = Кэш.Интеграция.Аккордеон_ОтключенныеРазделы(); //видимость разделов
	Исключение
		ОтключитьВидимостьРазделаПоСпособуОбмена = Новый Структура();
	КонецПопытки;
	
	ОтключитьВидимостьразделаПоСпособуОбмена.Вставить("Отчетность", "ВесьРаздел");
	
	Если Кэш.Текущий.ТекущийРаздел = "5" Тогда                       //позиционирование на разделе
		ВыбранныйРаздел = "АккордеонНастройки55"; 
	ИначеЕсли СпособОбмена = 1 Тогда
		ВыбранныйРаздел =  "АккордеонПродажа33"; 
	Иначе
		ВыбранныйРаздел = СбисПолучитьИмяКнопкиПоРазделу(Кэш.Парам.РазделПоУмолчанию);
	КонецЕсли;
	
	АккордеонЭДО = Новый Структура("Пункты, Ини", Новый Массив, "AccordionVO2");
	СтруктураАккордеона = "{""accordion"": [";
	
	Если ЗначениеЗаполнено(Аккордеон) Тогда
		Для Каждого КлючИЗначениеАккордеон Из Аккордеон Цикл
			РежимОтключения = Неопределено;
			Если ОтключитьВидимостьРазделаПоСпособуОбмена.Свойство(КлючИЗначениеАккордеон.Ключ, РежимОтключения) Тогда
				Если РежимОтключения = "ВесьРаздел" Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
				
			Для Каждого ЭлементСтруктуры Из КлючИЗначениеАккордеон.Значение Цикл
				Если РежимОтключения = Неопределено Или (ЭлементСтруктуры.Значение.level = 1 И РежимОтключения = "ТолькоПодразделы") Тогда
					СтруктураАккордеона = СтруктураАккордеона + Кэш.РаботаСJSON.ПреобразоватьЗначениеВJSON(ЭлементСтруктуры.Значение) + ",";
					АккордеонЭДО.Пункты.Добавить(ЭлементСтруктуры.Значение);
	            КонецЕсли;
			КонецЦикла;	 
		КонецЦикла;
	КонецЕсли;
	СтруктураАккордеона=СтруктураАккордеона+"]";
	СтруктураАккордеона=СтрЗаменить(СтруктураАккордеона, ",]", "]");
	СтруктураАккордеона=СтрЗаменить(СтруктураАккордеона, "boolparent", "parent@"); //символ "@" не может быть в ключе структуры
		
	СтруктураАккордеона = СтруктураАккордеона + ", ""selectedItem"":"""+ВыбранныйРаздел+"""";
	СтруктураАккордеона = СтруктураАккордеона + ", ""marginTop"":""26px""}";      //высота блока с птичкой
	
	ИмяМакета = "Аккордеон83";
	Если Не Кэш.СовместимостьМетодов.Аккордеон.Аккордеон83 Тогда
		ИмяМакета = "Аккордеон82";
	КонецЕсли;
	АккордеонЭДО.Вставить("ИмяМакета", ИмяМакета);
	АккордеонЭДО.Вставить("ВыбранныйРаздел", ВыбранныйРаздел);
	ПредставлениеАккордеона = МодульОбъектаКлиент().ПолучитьМакетОбработки(ИмяМакета, Новый Структура("Текст", Истина));

	сбисТекстHTML = СтрЗаменить(ПредставлениеАккордеона, "%accordion%", СтруктураАккордеона);
	МодульОбъектаКлиент().ИзменитьЭлементФормыОбработки(Новый ФиксированнаяСтруктура("Форма, Реквизит", ЭтаФорма, "АккордеонHTML"),
														Новый ФиксированнаяСтруктура("HTML", сбисТекстHTML));
	
КонецПроцедуры

&НаКлиенте
Функция  СгенерироватьЭлементМеню(Идентификатор, ТекстовоеСодержимое) Экспорт
	СтруктураЭлемента = Новый Структура();
	СтруктураЭлемента.Вставить("id",Идентификатор);
	СтруктураЭлемента.Вставить("title",ТекстовоеСодержимое);
	СтруктураЭлемента.Вставить("icon", УстановитьИконкиРазделов(Идентификатор));
	СтруктураЭлемента.Вставить("level",1);
	СтруктураЭлемента.Вставить("boolparent",Истина);
	СтруктураЭлемента.Вставить("action",Истина);
	Родитель = Идентификатор;
	Возврат Новый Структура("СтруктураЭлемента, Родитель", СтруктураЭлемента, Родитель);
КонецФункции

&НаКлиенте
Функция  СгенерироватьКнопку(Идентификатор, ТекстовоеСодержимое, Родитель) Экспорт
	СтруктураЭлемента = Новый Структура();
	СтруктураЭлемента.Вставить("id",Идентификатор);
	СтруктураЭлемента.Вставить("title",ТекстовоеСодержимое);
	СтруктураЭлемента.Вставить("level",2);
	СтруктураЭлемента.Вставить("parent",Родитель);
	СтруктураЭлемента.Вставить("action",Истина);
	Возврат СтруктураЭлемента;
КонецФункции	

&НаКлиенте
Функция ПолучитьИнформациюОВерсииПользователя()
	СтатусВерсииПользователя = "";
	ВерсияПользователя = "";
	СтатусВерсии = 5; //IE не воспринимает "0", поэтому нулевой статус, когда версия актуальна, заменяю на "5"
	Если Кэш.ПараметрыСистемы.Обработка.Свойство("СтатусВерсии") Тогда
		СтатусВерсии = Кэш.ПараметрыСистемы.Обработка.СтатусВерсии;
		Если СтатусВерсии = 1 Тогда
			СтатусВерсииПользователя = "Доступно обновление";
		ИначеЕсли СтатусВерсии = 2 Тогда
			СтатусВерсииПользователя = "Версия устарела";
		ИначеЕсли СтатусВерсии = 3 Или СтатусВерсии = 4 Тогда
			СтатусВерсииПользователя = "Версия сильно устарела!";
		КонецЕсли;	
	КонецЕсли;

	Если Кэш.ПараметрыСистемы.Обработка.Свойство("Версия") Тогда
		ВерсияПользователя = "v. " + Кэш.ПараметрыСистемы.Обработка.Версия;
	КонецЕсли;	
    //обработать предложение перезапуска после обновления
	Возврат СтатусВерсииПользователя+";"+ВерсияПользователя+";"+Строка(СтатусВерсии);	
КонецФункции	
	
&НаКлиенте
Процедура ОбновитьАккордеон(ПараметрыОбновления, Кэш) Экспорт
	ЭлементыФормочки = ПолучитьЭлементыФормы();
	Если ПараметрыОбновления.Свойство("ОбновитьИнформациюОВерсии") Тогда
		Попытка
			#Если ВебКлиент Тогда
				ЭлементыФормочки.АккордеонHTML.Документ.updateFooter(ПолучитьИнформациюОВерсииПользователя());
			#Иначе
				ЭлементыФормочки.АккордеонHTML.Документ[РеквизитОбъектаДокумента].updateFooter(ПолучитьИнформациюОВерсииПользователя());	
			#КонецЕсли
		Исключение
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ОбработатьДействиеНаКлиенте(ИмяДействия, Параметры)
	ИДКнопки = Параметры;
	Если ИмяДействия = "ADDON_NAVIGATE" Тогда  //обработать выбор раздела аккордеона
		Попытка 
			Если ПустаяСтрока(ИДКнопки) Тогда
				//Возврат ;
			КонецЕсли;
			ПерейтиВРаздел(ИДКнопки);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			МодульОбъектаКлиент().СообщитьСбисИсключение(МодульОбъектаКлиент().НовыйСбисИсключение(ИнфоОбОшибке, "ГлавноеОкно.ОбработатьДействиеНаКлиенте."+ИмяДействия));
		КонецПопытки;		
	ИначеЕсли ИмяДействия = "ADDON_CLICK" Тогда
		Если ИДКнопки = "addon_status_version" Тогда   //не выводится диалог
			сбисПроверитьНаличиеОбновлений(Новый Структура("Режим, ТекстДиалога", 
			"Ручной",
			"Обновление <ВерсияНаСервере> готово к установке. Продолжить?"));
		ИначеЕсли ИДКнопки = "addon_version" Тогда //показать ФормаНовости
			ФормаНовости = сбисПолучитьФорму("ФормаНовости",,,ЭтаФорма);
			ФормаНовости.Открыть();
			СтандартнаяОбработка = Ложь;	
		ИначеЕсли ИДКнопки = "addon_logo" Тогда //пока никак не обрабатывается	
		КонецЕсли;
	ИначеЕсли ИмяДействия = "ADDON_READSYSTEMINFO" Тогда
		Возврат ПолучитьИнформациюОВерсииПользователя(); 
	КонецЕсли;	
	Возврат Параметры;
КонецФункции

