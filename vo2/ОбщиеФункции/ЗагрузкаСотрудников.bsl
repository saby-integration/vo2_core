
////////////////////////////////////////////////////
///////////////////Загрузка сотрудников/////////////
////////////////////////////////////////////////////

&НаКлиенте
Функция сбисСформироватьДанныеСотрудников(Кэш, СписокОтмеченных, ИниСотрудника) Экспорт
	// Формирует данные по отмеченным сотрудникам для загрузки в СБИС
	СоответствиеОбъектовиИни = Новый Соответствие;
	Для Каждого Элемент Из СписокОтмеченных Цикл
		СоответствиеОбъектовиИни.Вставить(Элемент.Значение, ИниСотрудника);
	КонецЦикла;
	СоответствиеРезультат = ПолучитьДанныеОбъектовНаСервере(СоответствиеОбъектовиИни, Кэш.КэшЗначенийИни, Кэш.Парам);
	Для Каждого Элемент Из СоответствиеРезультат Цикл
		Попытка
			Данные = Элемент.Значение;
			Если Данные.Сотрудник.Свойство("ФИО") и НЕ Данные.Сотрудник.Свойство("Фамилия") Тогда
				ФИО = сбисПолучитьФИОИзНазвания(Данные.Сотрудник.ФИО);
				Данные.Сотрудник.Вставить("Фамилия", ФИО.Фамилия);
				Данные.Сотрудник.Вставить("Имя", ФИО.Имя);
				Данные.Сотрудник.Вставить("Отчество", ФИО.Отчество);
				Данные.Сотрудник.Удалить("ФИО");
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	Возврат СоответствиеРезультат;
КонецФункции

&НаСервере
Функция ПолучитьДанныеОбъектовНаСервере(СоответствиеОбъектовиИни, КэшЗначенийИни, КэшПарам) Экспорт	
	// Функция заполняет структуру файла настроек данными из документа
	СоответствиеРезультат = Новый Соответствие;
	Для каждого Элемент из СоответствиеОбъектовиИни Цикл
		Объект1С = Элемент.Ключ;
		СтруктураИниФайла = Элемент.Значение;
		
		ГрязныйИни = ПолучитьДанныеДокумента1С(СтруктураИниФайла, Объект1С, КэшЗначенийИни, КэшПарам); 
		ГрязныйИни = сбисПочиститьСтруктуру(ГрязныйИни);
		СоответствиеРезультат.Вставить(Объект1С,  ГрязныйИни);
	КонецЦикла;
	Возврат СоответствиеРезультат;
КонецФункции

&НаСервере
Функция сбисПочиститьСтруктуру(ГрязныйИни) Экспорт	
	// Функция заполняет структуру файла настроек данными из документа
	Если ТипЗнч(ГрязныйИни) = Тип("Структура") Тогда
		Для каждого Элемент из ГрязныйИни Цикл
			Если Лев(Элемент.Ключ, 1) = "_" Тогда
				ГрязныйИни.Удалить(Элемент.Ключ);
				Продолжить;
			КонецЕсли;
			Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
				сбисПочиститьСтруктуру(Элемент.Значение);
			ИначеЕсли ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда
				Для Каждого ЭлемМас Из Элемент.Значение Цикл
					сбисПочиститьСтруктуру(ЭлемМас);	
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат ГрязныйИни;
КонецФункции

&НаКлиенте
Функция сбисСформироватьДанныеТекущегоПользователя(Кэш) Экспорт
	Возврат сбисСформироватьДанныеТекущегоПользователяНаСервере();	
КонецФункции

&НаСервереБезКонтекста
функция сбисСформироватьДанныеТекущегоПользователяНаСервере() Экспорт
	// функция ид текущего пользователя 1С	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	ФизЛицо = ТекПользователь.ФизическоеЛицо;
	ДанныеСотрудника = Новый Структура("Сотрудник, Права", Новый Структура, Новый Структура("Роль", Новый Массив));
	ДанныеСотрудника.Сотрудник.Вставить("ИдентификаторИС", Строка(ФизЛицо.УникальныйИдентификатор()));
	Попытка
		Фамилия = ФизЛицо.Фамилия;
		Имя = ФизЛицо.Имя;
		Отчество = ФизЛицо.Отчество;
	Исключение
		ФИО = сбисПолучитьФИОИзНазванияНаСервере(ФизЛицо.Наименование);
		Фамилия = ФИО.Фамилия;
		Имя = ФИО.Имя;
		Отчество = ФИО.Отчество;
	КонецПопытки;
	ДанныеСотрудника.Сотрудник.Вставить("Фамилия", Фамилия);
	ДанныеСотрудника.Сотрудник.Вставить("Имя", Имя);
	ДанныеСотрудника.Сотрудник.Вставить("Отчество", Отчество);
	ДанныеСотрудника.Сотрудник.Вставить("ДоступВСистему", "Да");	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ГруппыДоступа.Профиль.Наименование КАК ПрофильНаименование
	|ИЗ
	|	Справочник.ГруппыДоступа КАК ГруппыДоступа
	|ГДЕ
	|	НЕ ГруппыДоступа.ПометкаУдаления
	|	И НЕ ГруппыДоступа.Профиль.ПометкаУдаления
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Справочник.ГруппыДоступа.Пользователи КАК ПользователиГруппДоступа
	|			ГДЕ
	|				ПользователиГруппДоступа.Ссылка = ГруппыДоступа.Ссылка
	|				И НЕ(ПользователиГруппДоступа.Пользователь <> &Пользователь
	|						И НЕ ПользователиГруппДоступа.Пользователь В
	|								(ВЫБРАТЬ
	|									СоставыГруппПользователей.ГруппаПользователей
	|								ИЗ
	|									РегистрСведений.СоставыГруппПользователей КАК СоставыГруппПользователей
	|								ГДЕ
	|									СоставыГруппПользователей.Пользователь = &Пользователь)))
	|
	|СГРУППИРОВАТЬ ПО
	|	ГруппыДоступа.Профиль";
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	ТабПрофили = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Для Каждого Элемент Из ТабПрофили Цикл
		ДанныеСотрудника.Права.Роль.Добавить(Новый Структура("Название", Элемент.ПрофильНаименование));	
	КонецЦикла;
	Возврат ДанныеСотрудника;
КонецФункции

