
&НаКлиенте
Процедура ОткрытьФормуСопоставления(Элемент) Экспорт    
	
	ДанныеНоменклатурыЗаполнены = Ложь;
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	
	Для Каждого ПозицияНоменклатурыКонтрагента Из ДанныеНоменклатурДляСопоставления.ПодготовленныеДанныеНоменклатур Цикл
		Если ПозицияНоменклатурыКонтрагента.НоменклатураСБИС.Наименование = ТабЧасть.ТекущиеДанные.Название Тогда
			ДанныеНоменклатурыЗаполнены = Истина;
			ИскомаяНоменклатура = ПозицияНоменклатурыКонтрагента;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ДанныеНоменклатурыЗаполнены Тогда
		// TO DO Ду-ду обработать ошибку для пользователя
		Возврат;
	КонецЕсли;
	
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("Количество", ТабЧасть.ТекущиеДанные.Количество);
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("Цена", ТабЧасть.ТекущиеДанные.Цена);  
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("СтавкаНДС", ТабЧасть.ТекущиеДанные.СтавкаНДС);
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("СуммаНДС", ТабЧасть.ТекущиеДанные.СуммаНДС);
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("СуммаБезНДС", ТабЧасть.ТекущиеДанные.СуммаБезНал);
	ИскомаяНоменклатура.НоменклатураСБИС.Вставить("Сумма", ТабЧасть.ТекущиеДанные.Сумма);
	
	фрм = МестныйКэш.ГлавноеОкно.сбисПолучитьФорму("ФормаРучногоСопоставленияКонтрагентов");   
	Заголовок = "Сопоставления по номенклатуре " +"'" + Табчасть.ТекущиеДанные.Название + "'";

	ДопПараметры = Новый Структура;
	фрм.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПослеРучнойОбработкиСопоставления", ЭтотОбъект, ДопПараметры);

	фрм.Показать(Новый Структура("ОсновныеДанные, Кэш, Заголовок", ИскомаяНоменклатура, МестныйКэш, Заголовок));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНоменклатуруВ1С(Команда)
    МестныйКэш.Вставить("РезультатДействия", МестныйКэш.ОбщиеФункции.РезультатДействия_Получить(МестныйКэш,Новый Структура("ПредставлениеОперации", "СозданиеНоменклатуры1С"),Истина));
	ЗагрузитьВложения(1);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСопоставлениеНоменклатуры(Команда)
	
	НеВсяНоменклатураСопоставлена = Ложь;
	Для Каждого НоменклатураСБИС Из ТабличнаяЧасть Цикл
		Если НоменклатураСбис.Статус = 1 Тогда
			НеВсяНоменклатураСопоставлена = Истина;
			Сообщить("Перед сохранением требуется сопоставить всю номенклатуру");
			Возврат;	
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыДляОбновления = Новый Структура("Контрагент, Номенклатура");
	
	ПараметрыДляОбновления.Вставить("Контрагент", СоставПакета.Контрагент);  
	ПараметрыДляОбновления.Вставить("Номенклатура", ДанныеНоменклатурДляСопоставления.ПодготовленныеДанныеНоменклатур);
	
	фрм = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("НоменклатураПоставщика_МассовоеОбновление",МестныйКэш.ФормаРаботыСНоменклатурой,"", МестныйКэш);
	фрм.НоменклатураПоставщика_МассовоеОбновление(ПараметрыДляОбновления, МестныйКэш);
	
	Для Каждого НоменклатураДокумента Из ТабличнаяЧасть Цикл
		НоменклатураДокумента.Статус = 0;
	КонецЦикла;
	ОбновитьСтатусыСопоставления();
		
	Сообщить("Номенклатура успешно сопоставлена"); 
	
КонецПроцедуры

//Обработка сопоставления
&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьПриИзменении(Кэш, ТабЧасть)
	
	СтрокаТабЧасти	= ТабЧасть.ТекущиеДанные;
	Если СтрокаТабЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ИмяПоиска = "НомерПП";
	#Иначе
		ИмяПоиска = "Название";
		Если ЗначениеЗаполнено(СтрокаТабЧасти.КодПокупателя) Тогда
			ИмяПоиска = "КодПокупателя";
		ИначеЕсли ЗначениеЗаполнено(СтрокаТабЧасти.Идентификатор) Тогда
			ИмяПоиска = "Идентификатор";
		КонецЕсли;
	#КонецЕсли
	ЗначениеПоиска = СтрокаТабЧасти[ИмяПоиска];
	
	ДанныеНоменклатуры = Новый Структура("Название, КодПокупателя, Идентификатор, Код, Номенклатура, Характеристика, GTIN, ЕдИзм, Коэффициент");
    ЗаполнитьЗначенияСвойств(ДанныеНоменклатуры, СтрокаТабЧасти);
	ЕстьИзмененияСтроки			= Ложь;
	ЕстьИзмененияНоменклатуры	= Ложь;
	Для Каждого КлючИЗначениеСтр Из СтрокаТЧДоИзменения.Номенклатура Цикл
		Если СтрокаТабЧасти[КлючИЗначениеСтр.Ключ] = КлючИЗначениеСтр.Значение Тогда
			Продолжить;
		КонецЕсли;
		ЕстьИзмененияНоменклатуры = Истина;
		ЕстьИзмененияСтроки = Истина;
		Прервать;
	КонецЦикла;
	Если Не ЕстьИзмененияСтроки Тогда
		Для Каждого КлючИЗначениеСтр Из СтрокаТЧДоИзменения.Прочее Цикл
			Если СтрокаТабЧасти[КлючИЗначениеСтр.Ключ] = КлючИЗначениеСтр.Значение Тогда
				Продолжить;
			КонецЕсли;
			ЕстьИзмененияСтроки = Истина;
			Прервать;
		КонецЦикла;
		Если Не ЕстьИзмененияСтроки Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПутьКонтрагента	= сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьКонтрагента;
	ПутьТаблДок		= сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	Если Не ЗначениеЗаполнено(ПутьКонтрагента) Тогда
		Сообщить("Отсутствуют требуемые данные для записи сопоставления");
		Возврат;
	КонецЕсли;
		
	НомерПП = СтрокаТабЧасти.НомерПП-1;
	ТаблДок = Кэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	ТаблДок[НомерПП].Вставить("Номенклатура",				ДанныеНоменклатуры.Номенклатура);
	ТаблДок[НомерПП].Вставить("ХарактеристикаНоменклатуры",	ДанныеНоменклатуры.Характеристика);
	ТаблДок[НомерПП].Вставить("Коэффициент",				ДанныеНоменклатуры.Коэффициент);
	Если СтрокаТабЧасти.Отмечен Тогда
		ТаблДок[НомерПП].Удалить("НеЗагружать");
	Иначе
		ТаблДок[НомерПП].Вставить("НеЗагружать");
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);

	Если ЗначениеПоиска = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтрокаТЧУстановить = Новый Структура(ИмяПоиска, ЗначениеПоиска);
	
	ЭтаФорма.ПодключитьОбработчикОжидания("СбисСпозиционироватьСтроку", 0.1, Истина);
КонецПроцедуры

//Позиционирует строку в ТЧ после обновления
&НаКлиенте
Процедура СбисСпозиционироватьСтроку() Экспорт
	ТабЧасть	= СбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	Строка		= ТабличнаяЧасть.НайтиСтроки(СтрокаТЧУстановить);
	Если Строка.Количество() Тогда
		СтрокаУстановить = Строка[0];
		#Если Не ТолстыйКлиентОбычноеПриложение Тогда 
			СтрокаУстановить = СтрокаУстановить.ПолучитьИдентификатор();
		#КонецЕсли
	Иначе
		Возврат;
	КонецЕсли;
	ТабЧасть.ТекущаяСтрока = СтрокаУстановить;		
КонецПроцедуры

//Запись до изменений
&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьДоИзменения(Кэш, ТабЧасть)
	СтрокаТЧДоИзменения = Новый Структура("Номенклатура, Прочее", Новый Структура("Номенклатура, Характеристика, КоэффициентСБИС"), Новый Структура("Отмечен"));
    ЗаполнитьЗначенияСвойств(СтрокаТЧДоИзменения.Номенклатура,	ТабЧасть.ТекущиеДанные);
    ЗаполнитьЗначенияСвойств(СтрокаТЧДоИзменения.Прочее,		ТабЧасть.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьХарактеристикаНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если Не ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура) Тогда
		Сообщить("Заполните номенклатуру");
	КонецЕсли;
	
	Если Кэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
		ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
	Иначе
		ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
	КонецЕсли;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Форма = Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
    #Иначе
		П = Новый Структура();
		Если Лев(ИмяОтбораХарактеристики,6) = "Отбор." Тогда
			ИмяОтбора = Сред(ИмяОтбораХарактеристики, 7);
			П.Вставить("Отбор", Новый Структура(ИмяОтбора,Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура));
		Иначе
			П.Вставить(ИмяОтбораХарактеристики, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура);
		КонецЕсли;
		Форма = ПолучитьФорму("Справочник." + ИмяСправочникаХарактеристикиНоменклатуры + ".ФормаВыбора", П, Элемент);
	#КонецЕсли
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СбисВыбратьПочтовыйЯщик(Кэш, Элемент, ДопПараметры)
	Перем СписокЯщиков, ЭлементВыбораДефолт;
	Отказ = Ложь;
	ИнформацияОКонтрагенте = Кэш.ОбщиеФункции.ПолучитьИнформациюОКонтрагенте(Кэш, СоставПакета.Контрагент, Новый Структура("ДопПоля", "СписокИдентификаторов"), Отказ);
	Если Отказ Тогда
		Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, ИнформацияОКонтрагенте, Новый Структура("ФормаВладелец", ЭтаФорма));
		Возврат;
	КонецЕсли;
	Если	Не	ИнформацияОКонтрагенте.Свойство("Идентификатор", СписокЯщиков)
		Или	Не	ТипЗнч(СписокЯщиков) = Тип("Массив")
		Или		СписокЯщиков.Количество() < 2 Тогда
		Кэш.ГлавноеОкно.СбисСообщитьПользователю(Новый Структура("Текст, ФормаВладелец, ЭлементНазначения", "Указывать абонентский ящик не требуется", ЭтаФорма, "АбонентскийЯщик"), Кэш);
		Возврат;
	КонецЕсли;
	СписокВыбора		= Новый СписокЗначений;
	ЭлементВыбораДефолт = Неопределено;
	Для Каждого ЭлементЯщика Из СписокЯщиков Цикл
		ПредставлениеЯщика =	СтрЗаменить(СтрЗаменить(СтрЗаменить("{оператор}({идентификатор}) - {статус}", 
								"{оператор}", ЭлементЯщика.Оператор.Название), 
											"{идентификатор}", ЭлементЯщика.ИдентификаторУчастника),
														"{статус}", ЭлементЯщика.СостояниеПодключения.Описание);
		
		СписокВыбора.Добавить(ЭлементЯщика.ИдентификаторУчастника, ПредставлениеЯщика);
		Если НРег(ЭлементЯщика.Основной) = "да" Тогда
			ЭлементВыбораДефолт = СписокВыбора.НайтиПоЗначению(ЭлементЯщика.ИдентификаторУчастника);
		КонецЕсли;	
	КонецЦикла;
	СписокВыбора.Добавить("", "Определять автоматически");
	
	ПараметрыВыбораСписка = Новый Структура("Заголовок, Элемент, Обработчик", "Укажите абонентский ящик получателя", ЭлементВыбораДефолт, Кэш.ОбщиеФункции.СбисОписаниеОповещения(Кэш, "СбисВыбратьПочтовыйЯщик_Обработчик", ЭтаФорма, Новый Структура("Кэш", Кэш)));
	Кэш.СБИС.МодульОбъектаКлиент.СбисВыбратьИзСписка(СписокВыбора, ПараметрыВыбораСписка);
КонецПроцедуры

&НаКлиенте
Процедура СбисВыбратьПочтовыйЯщик_Обработчик(РезультатВыбора, ДопПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	АбонентскийЯщик = РезультатВыбора.Представление;
	СоставПакета.Контрагент.Вставить("Идентификатор", РезультатВыбора.Значение);
КонецПроцедуры

&НаКлиенте
Процедура УчетСторонаПриИзменении(Элемент)
	
	Сторона1С = ЭтаФорма[Элемент.Имя];
	Если Не ЗначениеЗаполнено(ДанныеСторон) Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "УчетОрганизация" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеОрганизации;
		Тип = "НашаОрганизация";
		СторонаСБИС = СоставПакета.НашаОрганизация;
	ИначеЕсли Элемент.Имя = "УчетКонтрагент" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеКонтрагента;
		Тип = "Контрагент";
		СторонаСБИС = СоставПакета.Контрагент;
	ИначеЕсли Элемент.Имя = "УчетГрузополучатель" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеГрузополучателя;
		Тип = "Контрагент";
		СторонаСБИС = МодульОбъектаКлиент().ПолучитьГрузополучателяПакета(СоставПакета);
	КонецЕсли;
	
	СторонаДляИзменения.Ссылка = Сторона1С;
	ДанныеДляОбновления = Новый Структура;
	МестныйКэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ДанныеДляОбновления, СторонаДляИзменения);
	ДанныеДляОбновления.Вставить("Тип", Тип); 
	ДопПараметры = Новый Структура("СторонаСБИС", СторонаСБИС);
	МодульОбъектаКлиент().Маппинг_ОбновитьСторону1С(ДанныеДляОбновления, ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСопоставлению()
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЭлементыФормы.ТабличнаяЧасть.ОтборСтрок.Номенклатура.Использование = Истина Тогда
			ЭлементыФормы.ТабличнаяЧасть.ОтборСтрок.Номенклатура.Использование = Ложь;
		Иначе
			ЭлементыФормы.ТабличнаяЧасть.ОтборСтрок.Номенклатура.Использование = Истина; 
			ЭлементыФормы.ТабличнаяЧасть.ОтборСтрок.Номенклатура.ВидСравнения = ВидСравнения.НеРавно; 
			ЭлементыФормы.ТабличнаяЧасть.ОтборСтрок.Номенклатура.Значение = Неопределено; 
		КонецЕсли;  
		ЭлементыФормы.ТабличнаяЧасть.Обновить();
	#Иначе 
		// Тот редкий случай, когда на ОФ функционал работает как нужно, а на УФ приходится костыльезы запиливать (c) Сычев
		// Контейнер таблицы значений нихрена не таблица вообще, а табличная часть не умеет в сложные отборы вообще
		
		Если Элементы.ТабличнаяЧасть.ОтборСтрок = Неопределено Тогда                                    
						
			Элементы.ТабличнаяЧасть.ОтборСтрок = Новый ФиксированнаяСтруктура("Статус", 0);
		Иначе
			Элементы.ТабличнаяЧасть.ОтборСтрок = Неопределено;
		КонецЕсли;
		Элементы.ТабличнаяЧасть.Обновить();
	#КонецЕсли
	
КонецПроцедуры
