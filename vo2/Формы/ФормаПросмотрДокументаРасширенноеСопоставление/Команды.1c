
// Процедура отправляет текущий пакет документов 	
&НаКлиенте
Процедура ОтправитьНажатие(Команда)
	
	Перем Идентификатор;
	Перем БлокировкаОтправки;
	
	СоставПакета.Вставить("Примечание", ПакетКомментарий); 
	
	фрм = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("СбисПрочитатьЗначениеСвойстваДокумента",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
	ДокументСсылка = СоставПакета.Вложение[0].Документы1С[0].Значение;   
	ПараметрыЧтенияСвойства    = Новый Структура("Имя, ДокументСсылка", "ДокументСБИС_Статус", ДокументСсылка);
    ПредставлениеСтатуса = фрм.СбисПрочитатьЗначениеСвойстваДокумента(ПараметрыЧтенияСвойства,МестныйКэш); 
	СтатусЭД = МестныйКэш.ОбщиеФункции.СбисИндексКартинкиПоСтатусуЭД(ПредставлениеСтатуса); 
	Если СоставПакета.Свойство("Идентификатор") Тогда
		Идентификатор = СоставПакета.Идентификатор;
	КонецЕсли; 
	
	Если НЕ Идентификатор = Неопределено Тогда     
		Попытка
			БлокировкаОтправки = МодульОбъектаКлиент().ПроверитьБлокировкуОтправкиПакетаВСБИС(СоставПакета);
		Исключение
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнформацияОбОшибке(), "ОтправитьНажатие");
		КонецПопытки; 
	КонецЕсли; 
	
	Если НЕ БлокировкаОтправки = Неопределено И БлокировкаОтправки.БлокироватьОтправку Тогда
		МодульОбъектаКлиент().СбисСообщить(БлокировкаОтправки.ПричинаБлокировки);
		Возврат;
	КонецЕсли;

	МассивПодготовленныхПакетов = Новый Массив;
	МассивПодготовленныхПакетов.Добавить(СоставПакета);
	СписокКОтправке = Новый Массив;
	СписокКОтправке.Добавить(Новый Структура("МассивПодготовленныхПакетов,ИдПакета,Статус", МассивПодготовленныхПакетов,Идентификатор,СтатусЭД));
	
	ПараметрыЗавершить			= Новый Структура("Кэш", МестныйКэш);
	ОбработчикРезультатОтправки	= МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ОтправитьДокументы_Завершение", ЭтаФорма, ПараметрыЗавершить);

	ДопПараметрыОтправки = Новый Структура("ИмяРеестра, ОбработчикРезультата", МестныйКэш.Текущий.ТипДок, ОбработчикРезультатОтправки);
	
	МодульОбъектаКлиент().ЗапуститьМассовуюОтправкуДокументов(СписокКОтправке, ДопПараметрыОтправки)

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////

////////////////////// Управляемое приложение/////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииЯчейки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	сбисУстановитьHTML(Элемент.ТекущиеДанные.ТекстHTML);
	Вложение = Элемент.ТекущиеДанные.Вложение[0].Значение;
	ДокРазобран = (ДокументУчетаРазобран И ИмяРеквизитаВложений = "ВложениеУчета") или (ДокументРазобран И ИмяРеквизитаВложений = "Вложение");
	Если ДокРазобран Тогда
		Если Вложение.Свойство("Направление") Тогда 
			ЗаполнитьДокументДаннымиЭД(Вложение);
			//НГС Выводим на экран тип загружаемого документа
			Если Вложение.Свойство("СтруктураИниФайла") Тогда
				Ини = МестныйКэш.ФормаНастроек.Ини(МестныйКэш, Вложение.ИмяИни);
				ИмяТекущее = МестныйКэш.ОбщиеФункции.сбисСообщитьИмяРеквизита(МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Название",Вложение.СтруктураИниФайла, МестныйКэш));
				
				сбисЭлементФормы(ЭтаФорма, "СинонимДокумента").СписокВыбора.Очистить();
				Для Каждого ТипДокумент Из Ини.мДокумент Цикл
					Название = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Название",ТипДокумент.Значение,МестныйКэш);
					Имя = ТипДокумент.Ключ;
					СписокТиповДокументов.Добавить(Название, Имя);
					сбисЭлементФормы(ЭтаФорма, "СинонимДокумента").СписокВыбора.Добавить(Название);
					Если Название = ИмяТекущее Тогда
						СинонимДокумента = Название; 	
					КонецЕсли;
				КонецЦикла;
			Иначе
				ОчиститьВкладкуЗагрузка();
			КонецЕсли;
			//КНГС
			Если Вложение.Свойство("Договор1С") Тогда
				Договор1С = Вложение.Договор1С;
			иначе
				Договор1С = "";
			КонецЕсли;
			Если Вложение.Свойство("Дата1С") Тогда
				Дата1С = Вложение.Дата1С;
			иначе
				Дата1С = "";
			КонецЕсли;
			Если Вложение.Свойство("Контрагент1С") Тогда
				Контрагент1С = Вложение.Контрагент1С;
			иначе
				Контрагент1С = "";
			КонецЕсли;
		ИначеЕсли Вложение.Свойство("НоменклатураКодКонтрагента") Тогда
			сбиЗаполнитьТаблицуНоменклатуры(Вложение);
		Иначе
			ТабличнаяЧасть.Очистить();
		КонецЕсли;
		Если Найти(Элемент.ТекущиеДанные.Статус, "Не найден контрагент") Тогда
			сбисЭлементФормы(ЭтаФорма,"НеНайденКонтрагент").Видимость = Истина;
		Иначе
			сбисЭлементФормы(ЭтаФорма,"НеНайденКонтрагент").Видимость = Ложь;
		КонецЕсли;
	Иначе
		ОчиститьВкладкуЗагрузка();
	КонецЕсли;
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры
&НаКлиенте
Процедура ВыборЗакладки(Элемент)
	// Процедура осуществляет переход по вкладкам формы	
	Элементы.Контент.ТекущаяСтраница = Элементы.Загрузка;
КонецПроцедуры
&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "ТаблицаДокументовДокументы1СНазвания" и Элемент.ТекущиеДанные.Документы1С.Количество()>0 Тогда
		Для Каждого Документ1С из Элемент.ТекущиеДанные.Документы1С Цикл
			ПоказатьЗначение(,Документ1С.Значение);
		КонецЦикла;
	ИначеЕсли Поле.Имя = "ТаблицаДокументовУдалить"  Тогда
		УдалитьВложение("");
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	// Если это не написать, то при закрытии формы с активной вкладкой Загрузка в следующий раз форма открывается с пустым Просмотром
	ЭтаФорма.Элементы.Контент.ТекущаяСтраница = ЭтаФорма.Элементы.Просмотр;
	ПолеHTMLДокумента = ""; // без этого при повторном открытии одного документа УПД двоились линии в визуализации
КонецПроцедуры
&НаКлиенте
Процедура Отклонить(Команда)
	ОтклонитьУтвердитьНажатие(Новый Структура("Имя","Отклонить"));
КонецПроцедуры
&НаКлиенте
Процедура Утвердить(Команда)
	ОтклонитьУтвердитьНажатие(Новый Структура("Имя","Утвердить"));
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьИдентификаторПриИзменении(Элемент)
	// Процедура записывает сопоставление номенклатуры	
	ТабЧасть = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	Если ЗначениеЗаполнено(ТабЧасть.ТекущиеДанные.Номенклатура) Тогда
		ГлавноеОкно = МестныйКэш.ГлавноеОкно;
		ДанныеНоменклатуры = Новый Структура("Название,Идентификатор,Номенклатура,Характеристика,GTIN",ТабЧасть.ТекущиеДанные.Название,ТабЧасть.ТекущиеДанные.Идентификатор,ТабЧасть.ТекущиеДанные.Номенклатура,ТабЧасть.ТекущиеДанные.Характеристика,ТабЧасть.ТекущиеДанные.GTIN);
		ПутьКонтрагента = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьКонтрагента;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("УстановитьСоответствиеНоменклатуры",МестныйКэш.ФормаРаботыСНоменклатурой,"", МестныйКэш);
		фрм.УстановитьСоответствиеНоменклатуры(МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьКонтрагента, Вложение.СтруктураФайла), ДанныеНоменклатуры, МестныйКэш.Парам.КаталогНастроек, МестныйКэш.Ини);
		НомерПП = ТабЧасть.ТекущиеДанные.НомерПП - 1;
		ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
		ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
		ТаблДок[НомерПП].Вставить(Вложение.НоменклатураКодКонтрагента, ТабЧасть.ТекущиеДанные.Идентификатор);
		НоменклатураСопоставлена = Истина;
		Для Каждого СтрТабл Из ТаблДок Цикл
			Если Не СтрТабл.Свойство(Вложение.НоменклатураКодКонтрагента) или Не ЗначениеЗаполнено(СтрТабл[Вложение.НоменклатураКодКонтрагента])  Тогда
				НоменклатураСопоставлена = Ложь;	
			КонецЕсли;
		КонецЦикла;
		Если НоменклатураСопоставлена Тогда
			СоставПакета.Удалить("Ошибка");
			Вложение.XMLДокумента = МестныйКэш.ОбщиеФункции.сбисПолучитьXMLФайлаИзСтруктуры(Вложение,МестныйКэш.XSLT);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПолеHTMLДокументаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ДанныеСобытия.Element.id = "Открыть" Тогда
		Если сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Свойство("ПолноеИмяФайла") Тогда // файл добавлен в пакет для отправки (вручную или во внешних функциях) 
			ПолноеИмяФайла = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.ПолноеИмяФайла;
		Иначе
			ПолноеИмяФайла = КаталогВременныхФайлов()+ сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Файл.Имя;   // файл с онлайна
			МестныйКэш.Интеграция.СохранитьВложениеПоСсылкеВФайл(МестныйКэш,сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение.Файл.Ссылка,ПолноеИмяФайла);
		КонецЕсли;
		ЗапуститьПриложение(ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПодготовитьКЗагрузке(Команда)
	// Вставить содержимое обработчика.
	сбисРазобратьДокумент("");
	ЗаполнитьДанныеСторонИзВложения();
	Для каждого СтрокаТаблДок из ТаблицаДокументов Цикл
		
		Вложение = СтрокаТаблДок.Вложение[0].Значение;
		Если СтрокаТаблДок.МожемЗагрузитьВ1С <=0 Тогда					//Если на вложение нет ИНИшки для загрузки то ничего не делаем
			Продолжить             
		КонецЕсли;
		ТипДокумента = МестныйКэш.ОбщиеФункции.сбисСообщитьИмяРеквизита(МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Документ", Вложение.СтруктураИниФайла, МестныйКэш));
		Вложение.Вставить("ТипДокумента", ТипДокумента);
		фрм = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("ЗаполнитьДаннымиСтруктурыФайлаСтруктуруДокумента","Документ_"+Вложение.ТипДокумента,"Документ_Шаблон",МестныйКэш);
		СтруктураДокОбъект = Новый Структура; // Структура с названиями полей, как у создаваемого документа 1С
		СтруктураФайла = Вложение.СтруктураФайла;
		СтруктураДанныхДокумента = Новый Структура;
		МестныйКэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(СтруктураДанныхДокумента, Вложение.СтруктураИниФайла);    
		
		ПараметрыФормированияВходящегоКонтекста = Новый Структура("МестныйКэш, Вложение", МестныйКэш, Вложение);
		МодульОбъектаКлиент().СформироватьВходящийКонтекстСогласноНастройкам(ПараметрыФормированияВходящегоКонтекста);		
		фрм.ЗаполнитьДаннымиСтруктурыФайлаСтруктуруДокумента(МестныйКэш, Вложение.СтруктураФайла, СтруктураДанныхДокумента, СтруктураДокОбъект, Новый Массив,СоставПакета,Вложение, Новый Структура("Режим", "Подготовка"));
		сбисЗаполнитьДанныеВложения(Вложение, СтруктураДокОбъект);
	КонецЦикла;
	
	Если	МодульОбъектаКлиент().ПолучитьЗначениеФичи(Новый Структура("НазваниеФичи", "НовыеКонтрагенты"))
		И	МестныйКэш.Парам.СпособХраненияНастроек = 1 Тогда
		
		сбисЭлементФормы(ЭтаФорма, "УчетОрганизация").Доступность = Истина;
		сбисЭлементФормы(ЭтаФорма, "УчетКонтрагент").Доступность = Истина;
		сбисЭлементФормы(ЭтаФорма, "УчетГрузополучатель").Доступность = Истина;
	КонецЕсли;
	
	сбисЭлементФормы(ЭтаФорма,"ПодготовитьКЗагрузке").Видимость = Ложь;
	сбисЭлементФормы(ЭтаФорма,"ЗагрузитьНаВложении").Видимость = Истина; 
	
	ДанныеНоменклатурДляСопоставления = Новый Структура;
	ЗаполнитьДанныеНоменклатурДляСопоставления();
	ЭлементФормыХарактеристика = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧастьХарактеристика");
	ЭлементФормыХарактеристика.Видимость = Ложь;
    ЭлементФормыХарактеристика = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧастьХарактеристикаПоставщика");
	ЭлементФормыХарактеристика.Видимость = Ложь;

КонецПроцедуры
                                       
&НаКлиенте
Процедура ТаблицаДокументовШифрованиеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные<>Неопределено Тогда
		СоставПакета.Вложение[сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.НомерВложенияВПакете].Вставить("Шифрование", сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Шифрование);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ПереключитьТипВложений(Команда)
	// Вставить содержимое обработчика.
	Если ИмяРеквизитаВложений = "Вложение" Тогда
		Если Не СоставПакета.Свойство("ВложениеУчета") Тогда
			Сообщить("Отсутствуют вложения учета. Возможно в личном кабинете СБИС учет не ведется.");
			Возврат;
		КонецЕсли;
		ИмяРеквизитаВложений = "ВложениеУчета";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения ЭДО";
		Если Не ВложенияУчетаРазобраны Тогда
			ВложенияУчетаРазобраны = Истина;
			сч = 0;
			фрмСтатусы = МестныйКэш.ГлавноеОкно.сбисНайтиФормуФункции("НайтиДокументы1СПоИдВложенияСБИС",МестныйКэш.ФормаРаботыСоСтатусами,"",МестныйКэш);
			Для Каждого ВложениеУчета Из СоставПакета.ВложениеУчета Цикл
				СоставПакета.ВложениеУчета[сч].Вставить("Направление", СоставПакета.Направление);
				СоставПакета.ВложениеУчета[сч].Вставить("Идентификатор", ВложениеУчета.Тип+ВложениеУчета.Подтип+ВложениеУчета.ВерсияФормата+ВложениеУчета.ПодверсияФормата);
				ТекстHTML = МестныйКэш.Интеграция.ПолучитьHTMLВложения(МестныйКэш, СоставПакета.Идентификатор, ВложениеУчета);
				СоставПакета.ВложениеУчета[сч].Вставить("ТекстHTML",ТекстHTML);
				ДанныеДокумента1С = фрмСтатусы.НайтиДокументы1СПоИдВложенияСБИС(СоставПакета.Идентификатор, ВложениеУчета.Идентификатор, МестныйКэш.Ини, МестныйКэш.ГлавноеОкно.КаталогНастроек);
				СоставПакета.ВложениеУчета[сч].Вставить("Документы1С", Новый СписокЗначений);
				СоставПакета.ВложениеУчета[сч].Вставить("Документ1СПроведен");
				СоставПакета.ВложениеУчета[сч].Вставить("Отмечен", Истина);
				Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
					СоставПакета.ВложениеУчета[сч].Документы1С=ДанныеДокумента1С.Ссылки;
					СоставПакета.ВложениеУчета[сч].Документ1СПроведен=ДанныеДокумента1С.Проведен;
				КонецЕсли;
				сч = сч+1;
			КонецЦикла;
		КонецЕсли;
	Иначе
		ИмяРеквизитаВложений = "Вложение";
		сбисЭлементФормы(ЭтаФорма,"ПереключитьТипВложений").Заголовок = "Показать вложения СБИС";
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);
	сбисУстановитьВидимостьЭлементов(МестныйКэш);
	ЭтаФорма.Элементы.ТаблицаДокументов.Обновить();
	ТаблицаДокументовПриАктивизацииЯчейки(сбисЭлементФормы(ЭтаФорма, "ТаблицаДокументов"));
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовОтмеченПриИзменении(Элемент)
	СтрокаТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные;
	СоставПакета[ИмяРеквизитаВложений][СтрокаТаблДок.НомерВложенияВПакете].Вставить("Отмечен", СтрокаТаблДок.Отмечен);
КонецПроцедуры
&НаКлиенте
Процедура ОтметитьВсе(Команда)
	ОтметитьВсе = Не ОтметитьВсе;   
	ПутьТаблДок = сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	ТаблДок = МестныйКэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	Для Каждого Строка Из ЭтаФорма.ТабличнаяЧасть Цикл
		Строка.Отмечен = ОтметитьВсе;   
		Если ОтметитьВсе Тогда
			ТаблДок[Строка.НомерПП-1].Удалить("НеЗагружать");
		Иначе
			ТаблДок[Строка.НомерПП-1].Вставить("НеЗагружать");
		КонецЕсли;
	КонецЦикла;    
	ЗаполнитьТаблицуДокументов(СоставПакета);
КонецПроцедуры

