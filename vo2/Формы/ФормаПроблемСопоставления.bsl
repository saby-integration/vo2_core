
&НаКлиенте
Функция Показать(Кэш, СтркаТаблицыЗначений) Экспорт
	Перем ТаблВложения;
	ОшибкаЧтения = Ложь;
	ЭтаФорма.Заголовок = "Расхождения в документах СБИС и 1С";
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.ТолькоПросмотр = Истина;
	
	// Списочек заполнить надо
	ОшибкиВложения.Очистить();
	Для Каждого КлючИЗначение Из СтркаТаблицыЗначений Цикл
		Если		КлючИЗначение.Ключ = "Таблица" 
			Или Не	КлючИЗначение.Значение.Свойство("ОписаниеКратко")
			Или Не	ЗначениеЗаполнено(КлючИЗначение.Значение.ОписаниеКратко) Тогда
			Продолжить;
		КонецЕсли;
		
		ОшибкиВложения.Добавить(КлючИЗначение.Значение, КлючИЗначение.Значение.ОписаниеКратко);
	КонецЦикла;
	
	// Заполнение таблицы
	СоответствиеДокументДанные	= Новый Соответствие;
	СписокКолонок				= Новый Структура;
	//СтруктураВложения = Кэш.ОбщиеФункции.ПолучитьРазобранныеДанныеВложенияСбис(Кэш, СтркаТаблицыЗначений.СоставПакета[0].Значение, СтркаТаблицыЗначений.СоставПакета[0].Значение.Вложение[0], Новый Структура, Ложь);
	//Если СтруктураВложения.СтруктураФайла.Файл.Документ.Свойство("ТаблДок", ТаблВложения) И ТаблВложения.СтрТабл.Количество() Тогда
	Если	СтркаТаблицыЗначений.Свойство("Таблица")
		И	СтркаТаблицыЗначений.Таблица.Свойство("ТабличныеДанные", ТаблВложения) Тогда
		
		СформирвоатьСтруктуруКолонок(СписокКолонок, ТаблВложения[0]);
		
	КонецЕсли;
	
	 // ТаблДок
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТаблДок.Колонки.Очистить();
		ЭлементыФормы.ТаблДок.Колонки.Очистить();
		СформироватьТаблица(СписокКолонок);
	#Иначе
		ПодготовитьТаблДокУправ(СписокКолонок);
	#КонецЕсли
	
	ЗаполнитьСтрокиТаблДок(ТаблВложения);
	
	ЭтаФорма.Открыть();
КонецФункции

&НаКлиенте
Процедура СформирвоатьСтруктуруКолонок(СписокКолонок, Группировка)
	ТипСтрока = Новый ОписаниеТипов("Строка");
	Для Каждого Колонка Из Группировка Цикл
		// Убираем лишнее
		Если Найти("Параметр Идентификатор", Колонка.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		СписокКолонок.Вставить(Колонка.Ключ, Новый Структура);
		Если ТипЗнч(Колонка.Значение) = Тип("Структура") Тогда
			СформирвоатьСтруктуруКолонок(СписокКолонок[Колонка.Ключ], Колонка.Значение);
		Иначе
			СписокКолонок[Колонка.Ключ] = ТипСтрока;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиТаблДок(МассивСтрок)
	
	Если Не ЗначениеЗаполнено(МассивСтрок) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТЗ = ТаблДок;
	#Иначе
		ТЗ = ТаблДок.Выгрузить();
	#КонецЕсли
	СтрокаБезИерархии = Новый Структура;
	Для Каждого Строка Из МассивСтрок Цикл
		ПреобразоватьСтроку(Строка, СтрокаБезИерархии);
		НовСтрока = ТаблДок.Добавить();
		Для Каждого Ячейка Из СтрокаБезИерархии Цикл
			Если ТЗ.Колонки.Найти(Ячейка.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НовСтрока[Ячейка.Ключ] = Ячейка.Значение;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПреобразоватьСтроку(Строка, Результат, Префик = "")
	Для Каждого Элемент Из Строка Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			ПреобразоватьСтроку(Элемент.Значение, Результат, Элемент.Ключ + "_");
		Иначе
			Результат.Вставить(Префик + Элемент.Ключ, Элемент.Значение);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблДокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
		Ячейка.Видимость = Не ТаблДок.Колонки.Найти(Ячейка.Имя) = Неопределено;
	КонецЦикла;
КонецПроцедуры

