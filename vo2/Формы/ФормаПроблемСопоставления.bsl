
&НаКлиенте
Функция Показать(Кэш, СтркаТаблицыЗначений) Экспорт
	
	Перем ТаблВложения;
	
	ОшибкаЧтения = Ложь;
	ЭтаФорма.Заголовок = СтркаТаблицыЗначений.ДокументСБИСНазвание;
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФорма.ТолькоПросмотр = Истина;
	
	// Списочек заполнить надо
	ОшибкиВложения.Очистить();
	ИтогиСравнения = СтркаТаблицыЗначений.ДанныеСравнения[0].Значение;
	
	Для Каждого КлючИЗначение Из ИтогиСравнения Цикл
		
		Если		КлючИЗначение.Ключ = "Таблица" 
			Или Не	КлючИЗначение.Значение.Свойство("ОписаниеКратко")
			Или Не	ЗначениеЗаполнено(КлючИЗначение.Значение.ОписаниеКратко) Тогда
			Продолжить;
		КонецЕсли;
		
		НовОписание = ОшибкиВложения.Добавить();
		НовОписание.Описание	= КлючИЗначение.Значение.ОписаниеКратко;
		НовОписание.ДанныеСБИС	= КлючИЗначение.Значение.ЗначениеСБИС;
		НовОписание.Данные1С	= КлючИЗначение.Значение.Значение1С;
		
	КонецЦикла;
	
	// Заполнение таблицы
	СоответствиеДокументДанные	= Новый Соответствие;
	СписокКолонок				= Новый Соответствие;
	
	Если	ИтогиСравнения.Свойство("Таблица")
		И	ИтогиСравнения.Таблица.Свойство("ТабличныеДанные", ТаблВложения) Тогда
		
		СформирвоатьСтруктуруКолонок(СписокКолонок, ТаблВложения[0]);
		
	КонецЕсли;
	
	 // ТаблДок
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТаблДок.Колонки.Очистить();
		ЭлементыФормы.ТаблДок.Колонки.Очистить();
		СформироватьТаблица(СписокКолонок);
	#Иначе
		ПодготовитьТаблДокУправ(СписокКолонок);
	#КонецЕсли
	
	ЗаполнитьСтрокиТаблДок(ТаблВложения);
	
	ЭтаФорма.Открыть();
	
КонецФункции

&НаКлиенте
Процедура СформирвоатьСтруктуруКолонок(СписокКолонок, Группировка)
	
	ТипСтрока = Новый ОписаниеТипов("Строка");
	СписокКолонок.Вставить("_Порядок", Новый Массив);
	ИндексСоСравнением = Неопределено;
	
	Для Каждого Колонка Из Группировка Цикл
		
		// Убираем лишнее
		Если Найти("Параметр Идентификатор", Колонка.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ИндексСоСравнением = Неопределено
			И (Прав(Колонка.Ключ, 4) = "СБИС"
				Или Прав(Колонка.Ключ, 2) = "1С") Тогда
			ИндексСоСравнением = СписокКолонок["_Порядок"].Количество();
		КонецЕсли;
		
		СписокКолонок.Вставить(Колонка.Ключ, Новый Структура);
		СписокКолонок["_Порядок"].Добавить(Колонка.Ключ);
		
		Если ТипЗнч(Колонка.Значение) = Тип("Структура") Тогда
			СформирвоатьСтруктуруКолонок(СписокКолонок[Колонка.Ключ], Колонка.Значение);
		Иначе
			СписокКолонок[Колонка.Ключ] = ТипСтрока;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИндексСоСравнением <> Неопределено Тогда
		
		СписокКолонок.Вставить("ДокументСБИС",	ТипСтрока);
		СписокКолонок.Вставить("Документ1С",	ТипСтрока);
		СписокКолонок["_Порядок"].Вставить(ИндексСоСравнением, "ДокументСБИС");
		СписокКолонок["_Порядок"].Вставить(ИндексСоСравнением, "Документ1С");
		
	КонецЕсли;
	
	Для каждого Колонка Из СписокКолонок Цикл
	
		Если Прав(Колонка.Ключ, 4) = "СБИС" Тогда
			
			ИмяГруппы = Сред(Колонка.Ключ, 1, СтрДлина(Колонка.Ключ) - 4);
			Постфикс = "СБИС";
			ПостфиксПары = "1С";
			
		ИначеЕсли Прав(Колонка.Ключ, 2) = "1С" Тогда
			
			ИмяГруппы = Сред(Колонка.Ключ, 1, СтрДлина(Колонка.Ключ) - 2);
			Постфикс = "1С";
			ПостфиксПары = "СБИС";
			
		Иначе
			Продолжить;
		КонецЕсли;
		
		
		
		Если СписокКолонок.Количество() = 2
			И Не СписокКолонок.Получить(ИмяГруппы + Постфикс) = Неопределено
			И Не СписокКолонок.Получить(ИмяГруппы + ПостфиксПары) = Неопределено Тогда
			Продолжить;
		ИначеЕсли СписокКолонок.Получить(ИмяГруппы) = Неопределено Тогда
			
			СписокКолонок.Вставить(ИмяГруппы, Новый Соответствие);
			СписокКолонок[ИмяГруппы].Вставить(Постфикс, Колонка.Значение);
			СписокКолонок[ИмяГруппы].Вставить("_Порядок", Новый Массив);
			СписокКолонок[ИмяГруппы]["_Порядок"].Добавить("СБИС");
			СписокКолонок[ИмяГруппы]["_Порядок"].Добавить("1С");
			
			СписокКолонок["_Порядок"][СписокКолонок["_Порядок"].Найти(Колонка.Ключ)] = ИмяГруппы;
			
			ИндексПары = СписокКолонок["_Порядок"].Найти(ИмяГруппы + ПостфиксПары);
			
			Если ИндексПары = Неопределено Тогда 
				СписокКолонок[ИмяГруппы].Вставить(ПостфиксПары, Колонка.Значение);
			Иначе
				СписокКолонок["_Порядок"].Удалить(ИндексПары);
			КонецЕсли;
			
			СписокКолонок.Удалить(Колонка.Ключ);
			
		Иначе
			
			СписокКолонок[ИмяГруппы].Вставить(Постфикс, Колонка.Значение);
			СписокКолонок.Удалить(Колонка.Ключ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтрокиТаблДок(МассивСтрок)
	
	Если Не ЗначениеЗаполнено(МассивСтрок) Тогда
		Возврат;
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ТЗ = ТаблДок;
	#Иначе
		ТЗ = ТаблДок.Выгрузить();
	#КонецЕсли
	
	Для Каждого Строка Из МассивСтрок Цикл
	
		СтрокаБезИерархии = Новый Структура;
		ПреобразоватьСтроку(Строка, СтрокаБезИерархии);
		НовСтрока = ТаблДок.Добавить();
		
		Для Каждого Ячейка Из СтрокаБезИерархии Цикл
			
			Если ТЗ.Колонки.Найти(Ячейка.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НовСтрока[Ячейка.Ключ] = Ячейка.Значение;
			
		КонецЦикла;
		
		НовСтрока.Документ1С	= "1С";
		НовСтрока.ДокументСБИС	= "СБИС";
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПреобразоватьСтроку(Строка, Результат, Префик = "")
	Для Каждого Элемент Из Строка Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("Структура") Тогда
			ПреобразоватьСтроку(Элемент.Значение, Результат, Элемент.Ключ + "_");
		Иначе
			Результат.Вставить(Префик + Элемент.Ключ, Элемент.Значение);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблДокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
		Ячейка.Видимость = Не ТаблДок.Колонки.Найти(Ячейка.Имя) = Неопределено;
	КонецЦикла;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция Синоним(Знач Имя) Экспорт
	
	НовоеИмя = "";
	Имя = СтрЗаменить(Имя, "СНДС", "_сНДС"); 
	Длина = СтрДлина(Имя);
	
	Для Индекс = 1 По Длина Цикл
		
		Символ = Сред(Имя, Индекс, 1);
		
		Если Символ = НРег(Символ)
			И Найти("1234567890", Символ) = 0 Тогда
			
			НовоеИмя = НовоеИмя + Символ;
			Продолжить;
			
		КонецЕсли;
		
		Если Символ = ВРег(Символ) Тогда
			
			Если Индекс > 1 Тогда
				НовоеИмя = НовоеИмя + " "
			КонецЕсли;
			
			Аббревиатура = (Сред(Имя, Индекс, 3) = ВРег(Сред(Имя, Индекс, 3))) И (Длина - Индекс > 1);
			Предлог = (Сред(Имя, Индекс, 2) = ВРег(Сред(Имя, Индекс, 2))) И (Длина > Индекс);
			
			Если Аббревиатура Тогда
				
				ДлинаАббревиатуры = 3;
				
				Пока Сред(Имя, Индекс, ДлинаАббревиатуры) = ВРег(Сред(Имя, Индекс, ДлинаАббревиатуры)) 
					И  Индекс + ДлинаАббревиатуры <= Длина + 1 Цикл
					ДлинаАббревиатуры = ДлинаАббревиатуры + 1
				КонецЦикла;
				
				ДлинаАббревиатуры = ДлинаАббревиатуры - 1;
				
				Если (Индекс + ДлинаАббревиатуры - 1) = Длина Тогда
					НовоеИмя = НовоеИмя + Сред(Имя, Индекс, ДлинаАббревиатуры);
				Иначе
					
					ДлинаАббревиатуры = ДлинаАббревиатуры - 1;
					НовоеИмя = НовоеИмя + Сред(Имя, Индекс, ДлинаАббревиатуры)
						+ " " + НРег(Сред(Имя, Индекс + ДлинаАббревиатуры, 1));
					
				КонецЕсли;
				
				Индекс = Индекс + ДлинаАббревиатуры;
				Продолжить;
				
			КонецЕсли; 
			
			
			Если Предлог Тогда
				
				НовоеИмя = НовоеИмя + НРег(Символ) + " " + НРег(Сред(Имя, Индекс + 1, 1)) + " ";
				Индекс = Индекс + 1;
				Продолжить;
				
			КонецЕсли; 
			
			НовоеИмя = НовоеИмя + НРег(Символ);
			
		КонецЕсли; 
		
	КонецЦикла;
	
	НовоеИмя = СтрЗаменить(НовоеИмя, "_", " ");
	НовоеИмя = ВРег(Лев(НовоеИмя, 1)) + Прав(НовоеИмя, СтрДлина(НовоеИмя) - 1);
	
	Возврат НовоеИмя;
	
КонецФункции

