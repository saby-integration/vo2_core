&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если НЕ СохранениеПроведено
		И НЕ ИмеютсяИзмененияСопоставленнойНоменклатуры Тогда
		ЗакрытьБезСохранения = Истина;
		Закрыть(Неопределено);
	ИначеЕсли НЕ СохранениеПроведено 
		И НЕ ЗакрытьБезСохранения
		И ИмеютсяИзмененияСопоставленнойНоменклатуры Тогда
		Отказ = Истина; 
		Режим = РежимДиалогаВопрос.ДаНет;
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ЗакрытьБезСохранения", ЗакрытьБезСохранения); 
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Ответ = Вопрос("Выйти без сохранения?", Режим, 0);	
			ПослеВопросаОЗакрытии(Ответ, ЗакрытьБезСохранения);
		#Иначе   
			ОповещениеПослеВопроса = Новый ОписаниеОповещения("ПослеВопросаОЗакрытии",ЭтаФорма, ДопПараметры);
			ПоказатьВопрос(ОповещениеПослеВопроса,"Выйти без сохранения?", Режим, 0);
		#КонецЕсли

	ИначеЕсли ЗакрытьБезСохранения Тогда
		Закрыть(Неопределено);
	Иначе 
		Возврат;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбработчикЗавершения = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ПослеЗакрытия", ЭтаФорма);
	НовыйОтложенноеДействие = МодульОбъектаКлиент().НовыйОтложенноеДействие(Новый Структура("ОписаниеОповещения", ОбработчикЗавершения));
	МодульОбъектаКлиент().ПодключитьОтложенноеДействие(НовыйОтложенноеДействие);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытия(Аргумент = Неопределено, ДопПараметры = Неопределено) Экспорт
	
	// Для толстого клиента оповещения вызываются вручную, так заведено
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если Не ОписаниеОповещенияОЗакрытии = Неопределено Тогда
			МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(ПараметрыФормы.Результат, ОписаниеОповещенияОЗакрытии);
		КонецЕсли;
	#КонецЕсли
	
	ПараметрыФормы.Очистить();
	ОписаниеОповещенияОЗакрытии	= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	СписокОшибок = ПроверитьЗаполнениеДанныхНоменклатур1С();
	
	ИмеютсяИзмененияСопоставленнойНоменклатуры = Номенклатуры1СИзменены();
	
	Если НЕ ИмеютсяИзмененияСопоставленнойНоменклатуры Тогда
		Закрыть(Неопределено);
		Возврат;
	ИначеЕсли НЕ ДанныеРучногоСопоставления.Свойство("НеобходимоСопоставление") Тогда
		ДанныеРучногоСопоставления.Вставить("НеобходимоСопоставление", Истина);      
	Иначе
		ДанныеРучногоСопоставления.НеобходимоСопоставление = Истина;
	КонецЕсли;	
	
	Если НЕ СписокОшибок.Количество() Тогда 
		
		ЗаполнитьРезультатРучногоСопоставления(ДанныеРучногоСопоставления);
				
		ТабличнаяЧасть.Очистить();
				
		СохранениеПроведено = Истина;
		ПараметрыФормы.Результат = ДанныеРучногоСопоставления;
		Закрыть(ДанныеРучногоСопоставления);
	    Возврат;
		
	Иначе
		
		Сообщить("Имеются ошибки, которые необходимо исправить перед сохранением результата:");
		Для Каждого Ошибка Из СписокОшибок Цикл
			Сообщить(Ошибка + Символы.ПС);
		КонецЦикла;	
		Возврат;
	   
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоличествоПриИзменении(Элемент)
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
	Если ЗначениеЗаполнено(ТабЧастьТекДанные.Цена) Тогда
		ТабЧастьТекДанные.Сумма = ТабЧастьТекДанные.Кол_во * ТабЧастьТекДанные.Цена;
	КонецЕсли;
	
	ПересчитатьИспользованноеИДоступноеКоличествоПоДокументу();
	ПересчитатьНДСПоТекущейСтроке();
	ПеречистатьСуммыПоСтрокам();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьЦенаПриИзменении(Элемент)
	
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
	Если ЗначениеЗаполнено(ТабЧастьТекДанные.Кол_во) Тогда
		ТабЧастьТекДанные.Сумма = ТабЧастьТекДанные.Кол_во * ТабЧастьТекДанные.Цена;
	КонецЕсли;
	
	ПересчитатьНДСПоТекущейСтроке();
	ПеречистатьСуммыПоСтрокам();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьСуммаПриИзменении(Элемент)
	
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
	Если ЗначениеЗаполнено(ТабЧастьТекДанные.Кол_во) Тогда
		ТабЧастьТекДанные.Цена = ТабЧастьТекДанные.Сумма / ТабЧастьТекДанные.Кол_во;
	КонецЕсли;

	ПересчитатьНДСПоТекущейСтроке();
	ПеречистатьСуммыПоСтрокам();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьКоэффициентПриИзменении(Элемент)  
	
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
	
	Если ТабЧастьТекДанные.Коэффициент = 0 Тогда
		Сообщить("Коэффициент не может быть равен нулю");
		ТабЧастьТекДанные.Коэффициент = 1;
	КонецЕсли;
	
	СтрокаДляПересчета = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные; 
	ПроизвестиПересчетПоКоэффициентуЕдиницИзмерения(СтрокаДляПересчета);
    ПересчитатьИспользованноеИДоступноеКоличествоПоДокументу();
	ПересчитатьНДСПоТекущейСтроке();
	ПеречистатьСуммыПоСтрокам();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьНоменклатураПриИзменении(Элемент)
	
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
	ВыбраннаяНоменклатура = ТабЧастьТекДанные.Номенклатура;
	
	СопоставлениеДляЕдиницы = Новый Структура("Владелец, Единица", ВыбраннаяНоменклатура, Неопределено); 
	КлючПоиска = "Единица";
	НайденнаяЕдиницы = МодульОбъектаКлиент().СопоставлениеДляЕдиницыКлиент_Получить(СопоставлениеДляЕдиницы, КлючПоиска);
	ПослеВыбораЕдиницИзмерения(НайденнаяЕдиницы, Новый Структура("НайденоВНоменклатуре", Истина));

КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НЕ НоваяСтрока Тогда
		Возврат;
	ИначеЕсли Копирование Тогда
		ПеречистатьСуммыПоСтрокам();
		Возврат;
	Иначе
		ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные;
		
		
		ТабЧастьТекДанные.Цена = Цена;
		ТабЧастьТекДанные.Коэффициент = 1;
		ТабЧастЬТекДанные.КоэффициентБыл = 1;
		ТабЧастьТекДанные.Кол_во = ОсталосьКоличествоВБазовыхЕдиницах;
		ТабЧастьТекДанные.Сумма = ТабЧастьТекДанные.Кол_во * ТабЧастьТекДанные.Цена;
		ТабЧастьТекДанные.СтавкаНДС = СтавкаНДС;
		
		ОсталосьКоличествоВБазовыхЕдиницах = 0;
		
		ПересчитатьИспользованноеИДоступноеКоличествоПоДокументу();
		
		ПересчитатьНДСПоТекущейСтроке();
		ПеречистатьСуммыПоСтрокам();  
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьПослеУдаления(Элемент)
	
	ПересчитатьИспользованноеИДоступноеКоличествоПоДокументу();
	ПеречистатьСуммыПоСтрокам();
		
КонецПроцедуры

