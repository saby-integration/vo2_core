
&НаКлиенте
Функция ПослеВопросаОЗакрытии(Результат, ДопПараметры) Экспорт
		
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗакрытьБезСохранения = Истина; 
		Закрыть(Неопределено);
	Иначе
		ЗакрытьБезСохранения = Ложь;
	КонецЕсли;	                      
	
	ДопПараметры.ЗакрытьБезСохранения = ЗакрытьБезСохранения;
	Возврат ДопПараметры.ЗакрытьБезСохранения;
	
КонецФункции

// Функция - Проверить наличие критических ошибок
// Проверяет наличие ошибок, при которых запрещено сохранять внесённые вручную изменения сопоставлений 
//
// Возвращаемое значение:
// Булево  - Наличие или отсутствие ошибок, при которых будем запрещать запись данных по сопоставлению
//
&НаКлиенте
Функция ПроверитьЗаполнениеДанныхНоменклатур1С()
	
	ОчиститьСообщения();
	СписокОшибок = Новый Массив; 
	СчетчикСтрок = 1;
	
	Для Каждого Строка Из ТабличнаяЧасть Цикл
		
		Если Не ЗначениеЗаполнено(Строка.Номенклатура)
			И Не ЗначениеЗаполнено(Строка.Единицы) Тогда
			СписокОшибок.Добавить("Не заполнены Номенклатура и Единицы в строке №" + СчетчикСтрок);
		ИначеЕсли Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			СписокОшибок.Добавить("Не заполнена Номенклатура в строке №" + СчетчикСтрок);
		ИначеЕсли Не ЗначениеЗаполнено(Строка.Единицы) Тогда
			СписокОшибок.Добавить("Не заполнены Единицы в строке №" + СчетчикСтрок);
		КонецЕсли;                                                                 
		
		СчетчикСтрок = СчетчикСтрок + 1;
		
	КонецЦикла;
	
	Возврат СписокОшибок;
	
КонецФункции

&НаСервере
Функция ПустаяСсылкаИскомогоСправочника(ИмяСправочника)
	
	Возврат Справочники[ИмяСправочника].ПустаяСсылка();	
		
КонецФункции

&НаКлиенте
Процедура ПодборЕдиницИзмерения()
	
	ПолноеИмяФормыВыбора = СправочникЕдиницПолноеИмя + ".ФормаВыбора";
	ПараметрыПодбора = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, МножественныйВыбор");
	 
    ПараметрыПодбора.МножественныйВыбор = Истина;    
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ОткрытьФорму(ПолноеИмяФормыВыбора, ПараметрыПодбора, ЭтаФорма);
	#Иначе
		ДопПараметры = Новый Структура;
		ОбработкаВыбора = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ПослеВыбораЕдиницИзмерения", ЭтаФорма, ДопПараметры);
		ОткрытьФорму(ПолноеИмяФормыВыбора, ПараметрыПодбора, ЭтаФорма, , , , ОбработкаВыбора, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	#КонецЕсли
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеВыбораЕдиницИзмерения(Результат, ДопПараметры = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда 
		Возврат;
	КонецЕсли;
	
	ТабЧастьТекДанные = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ТабличнаяЧасть").ТекущиеДанные; 
		
	ТабЧастьТекДанные.Единицы = Результат;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеИзСправочникаЕдиниц(Ссылка);

	СпрОбъект = Ссылка.ПолучитьОбъект();
	Единица = Новый Структура("Код, Наименование, Владелец");
	
	Единица.Код = СпрОбъект.Код;
	Единица.Наименование = СпрОбъект.Наименование;
	Единица.Владелец = СпрОбъект.Владелец;

	Возврат Единица;
	
КонецФункции

// Преобразует строку таблицы значений в структуру.
// Свойства структуры и их значения совпадают с колонками переданной строки.
//
// Параметры:
//  СтрокаТаблицыЗначений - СтрокаТаблицыЗначений
//
// Возвращаемое значение:
//  Структура - преобразованная строка таблицы значений.
//
Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
	
	Структура = Новый Структура;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Структура.Вставить(Колонка.Имя, СтрокаТаблицыЗначений[Колонка.Имя]);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

&НаКлиенте
Процедура ПеречистатьСуммыПоСтрокам()
	
	СуммаВсего 	  = 0;
	СуммаНДСВсего = 0;
	
	ЭлементСуммаВсего = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "СуммаВсего");
    ЭлементСуммаНДСВсего 	= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "СуммаНДСВсего");
	
	Для Каждого Строка Из ТабличнаяЧасть Цикл
		СуммаВсего = СуммаВсего + Строка.Сумма;
		СуммаНДСВсего = СуммаНДСВсего + Строка.СуммаНДС;
	КонецЦикла;
	
	Если НЕ СуммаВсего = СуммаПоДокументу Тогда
		ЭлементСуммаВсего.ЦветФона  = WebЦвета.Коралловый;
		ЭлементСуммаВсего.Подсказка = "Не сходится сумма по документу(" + СуммаПоДокументу + ") и сумма по строкам сопоставления(" + СуммаВсего + ")";
	Иначе
		ЭлементСуммаВсего.ЦветФона  = WebЦвета.НейтральноВесеннеЗеленый;
		ЭлементСуммаВсего.Подсказка = "";
	КонецЕсли;
	
	Если НЕ СуммаНДСВсего = СуммаНДСПоДокументу Тогда 
		ЭлементСуммаНДСВсего.ЦветФона  = WebЦвета.Коралловый;
		ЭлементСуммаНДСВсего.Подсказка = "Не сходится сумма НДС по документу(" + СуммаНДСПоДокументу + ") и сумма НДС по строкам сопоставления(" + СуммаНДСВсего + ")";
	Иначе
		ЭлементСуммаНДСВсего.ЦветФона  = WebЦвета.НейтральноВесеннеЗеленый;
		ЭлементСуммаНДСВсего.Подсказка = "";
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Заполнить результат ручного сопоставления
// Внесение в класс сопоставления всех данных (изменённых и уже существовавших) номенклатур 1С из табличной части формы ручного сопоставления
//
// Параметры:
//  ДанныеРучногоСопоставления	 - Структура - Содержит массив данных класса сопоставления номенклатур по проекту расширенных проверок сопоставления номенклатур
//
&НаСервере
Процедура ЗаполнитьРезультатРучногоСопоставления(ДанныеРучногоСопоставления)
	
	ТаблицаНоменклатур1С = ТабличнаяЧасть.Выгрузить(); 
	ДанныеНоменклатуры1С = Новый Структура; 
	
	ДанныеРучногоСопоставления.Номенклатура1С.Очистить();
	
	Для Каждого Номенклатура1С Из ТаблицаНоменклатур1С Цикл 	
		
		ДанныеНоменклатуры1С = СтрокаТаблицыЗначенийВСтруктуру(Номенклатура1С);
				
		ВходящиеДанные = Новый Структура("Источник", Номенклатура1С.Единицы);      
		ДопПараметры = Новый Структура("ТипИсточника", "Ссылка");
		СтруктураЕдиницы = МодульОбъектаСервер().НовыйСопоставлениеДляЕдиницыСервер(ВходящиеДанные, ДопПараметры);
		
		Если ЗначениеЗаполнено(Номенклатура1С.Коэффициент) Тогда
			СтруктураЕдиницы.Коэффициент = Номенклатура1С.Коэффициент;
		КонецЕсли;
		
		ДанныеНоменклатуры1С.Удалить("Единицы");
		ДанныеНоменклатуры1С.Вставить("ЕдИзм1С", Новый Соответствие);
		ДанныеНоменклатуры1С.ЕдИзм1С.Вставить(Номенклатура1С.Единицы, СтруктураЕдиницы);                                                                                                                                       
		
		ДанныеНоменклатуры1С.Вставить("Основное", Истина);
		
		МодульОбъектаСервер().ОписаниеНоменклатуры1ССервер_Заполнить(ДанныеРучногоСопоставления, ДанныеНоменклатуры1С);
		
		ЗаполнитьДанныеДляЗагрузкиВДокумент1С(ДанныеРучногоСопоставления, ДанныеНоменклатуры1С, "РучноеСопоставление");
				
	КонецЦикла;  
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляЗагрузкиВДокумент1С(ДанныеРучногоСопоставления, ДанныеНоменклатуры1С, ИсточникЗаполнения)
	
	ТекущаяСтрокаНоменклатуры1С = Неопределено;
		
	Если ИсточникЗаполнения = "РучноеСопоставление" Тогда
		
		НоменклатураСсылка = ДанныеНоменклатуры1С.Номенклатура;
        ТекущиеДанныеНоменклатуры = ДанныеРучногоСопоставления.Номенклатура1С.Получить(НоменклатураСсылка);
		
		ТекущиеДанныеНоменклатуры.Вставить("Цена", 0);
		ТекущиеДанныеНоменклатуры.Вставить("Кол_Во", ДанныеНоменклатуры1С.Количество);
		ТекущиеДанныеНоменклатуры.Вставить("Сумма", 0);
		ТекущиеДанныеНоменклатуры.Вставить("СуммаНДС", 0);
		ТекущиеДанныеНоменклатуры.Вставить("СуммаБезнал", ДанныеНоменклатуры1С.СуммаБезНДС);
		ТекущиеДанныеНоменклатуры.Вставить("СтавкаНДС", "");
		
		ЗаполнитьЗначенияСвойств(ТекущиеДанныеНоменклатуры, ДанныеНоменклатуры1С);
		
	Иначе                                                                                        
		                                                                   
		НоменклатураСсылка = ДанныеНоменклатуры1С;  
		ТекущиеДанныеНоменклатуры = ДанныеРучногоСопоставления.Номенклатура1С.Получить(НоменклатураСсылка); 
		ПараметрыОтбора = Новый Структура("Номенклатура", ДанныеНоменклатуры1С); 
		ТекущаяСтрокаНоменклатуры1С = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрокаНоменклатуры1С[0], ТекущиеДанныеНоменклатуры, , "Характеристики"); 
		
	КонецЕсли;
	
КонецПроцедуры

// Функция - Получить безопасное наименование
//
// Параметры:
//  ИсходнаяСтрока	 - Строка - Преобразуемая строка 
// 
// Возвращаемое значение:
// Строка  - Строка без спецсиволов, содержит только цифры и буквы кириллицы/латиницы 
//
Функция ПолучитьБезопасноеНаименование(ИсходнаяСтрока) Экспорт
	
	Результат = "";
	
	Латиница = "QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm";
	Кириллица = "абвгдеёзжийклмнопрстуфхцчшщъыьэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ";
	Цифры = "0123456789";                                                            
	ДопустимыеСимволы = Латиница + Кириллица + Цифры;
	
	Для ПозицияСимвола = 1 по СтрДлина(ИсходнаяСтрока) Цикл
		ТекСимв = Сред(ИсходнаяСтрока, ПозицияСимвола, 1);
		Если Найти(ДопустимыеСимволы, ТекСимв) > 0 Тогда
			Результат = Результат + ТекСимв;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВРЕГ(Результат);
	
КонецФункции

// Процедура - Произвести пересчет по коэффициенту единиц измерения
//
// Параметры:
//  СтрокаДляПересчета	 - Строка табличной части	 - Строка в которой будет вестить пересчет
//  КоэффициентПересчета - Число	 - На это число будет умножено количество 
//
&НаКлиенте
Процедура ПроизвестиПересчетПоКоэффициентуЕдиницИзмерения(СтрокаДляПересчета)
	
	СтрокаДляПересчета.Количество = СтрокаДляПересчета.Количество * (СтрокаДляПересчета.Коэффициент / СтрокаДляПересчета.КоэффициентБыл);
	СтрокаДляПересчета.Цена 	  = СтрокаДляПересчета.Цена / (СтрокаДляПересчета.Коэффициент / СтрокаДляПересчета.КоэффициентБыл);
	
	СтрокаДляПересчета.КоэффициентБыл = СтрокаДляПересчета.Коэффициент;
	ПеречистатьСуммыПоСтрокам();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьИспользованноеИДоступноеКоличествоПоДокументу()
	
	ЗарезервированноеКоличествоВБазовыхЕдиницах = 0;
	ОсталосьКоличествоВБазовыхЕдиницах = 0;
	
	// Расчёт "Осталось" для определения доступного количества в базовых единицах
	Для Каждого Строка Из ТабличнаяЧасть Цикл
		
		ЗарезервированноеКоличествоВБазовыхЕдиницах = ЗарезервированноеКоличествоВБазовыхЕдиницах + Строка.Количество / Строка.Коэффициент; 		
		
	КонецЦикла;
	
	ОсталосьКоличествоВБазовыхЕдиницах = КоличествоСБИС / КоэффициентСБИС - ЗарезервированноеКоличествоВБазовыхЕдиницах;
		
	КоличествоПоДокументуСходитсяСТабличнойЧастью = ОсталосьКоличествоВБазовыхЕдиницах = 0 И ЗарезервированноеКоличествоВБазовыхЕдиницах = КоличествоСБИС / КоэффициентСБИС;

	ЭлементРаспределено = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ЗарезервированноеКоличествоВБазовыхЕдиницах");
    ЭлементОсталось 	= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ОсталосьКоличествоВБазовыхЕдиницах"); 
	
	Если КоличествоПоДокументуСходитсяСТабличнойЧастью Тогда
		
		ЭлементРаспределено.ЦветФона  = WebЦвета.НейтральноВесеннеЗеленый;
		ЭлементРаспределено.Подсказка = "";
		ЭлементОсталось.ЦветФона 	  = WebЦвета.НейтральноВесеннеЗеленый; 
		ЭлементОсталось.Подсказка 	  = "";
		
	Иначе
		
		ЭлементРаспределено.ЦветФона  = WebЦвета.Коралловый;
		ЭлементРаспределено.Подсказка = "Разница количества в базовых единицах по документу и по строкам табличной части: " + (КоличествоСБИС / КоэффициентСБИС - ЗарезервированноеКоличествоВБазовыхЕдиницах);
		ЭлементОсталось.ЦветФона 	  = WebЦвета.Коралловый;
		ЭлементОсталось.Подсказка 	  = "Разница количества в базовых единицах по документу и по строкам табличной части: " + (КоличествоСБИС / КоэффициентСБИС - ЗарезервированноеКоличествоВБазовыхЕдиницах);
		
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция Номенклатуры1СИзменены()
	
	ТаблицаНоменклатур1С = ТабличнаяЧасть.Выгрузить();
	Если ТаблицаНоменклатур1С.Количество() <> ДанныеРучногоСопоставления.Номенклатура1С.Количество() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Для Каждого СопоставленнаяНоменклатура1С Из ДанныеРучногоСопоставления.Номенклатура1С Цикл
		
		СтрокаСНоменклатурой1С = ТаблицаНоменклатур1С.Найти(СопоставленнаяНоменклатура1С.Ключ, "Номенклатура");
		
		Если СтрокаСНоменклатурой1С = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаСНоменклатурой1С.Единицы) 
			И НЕ СопоставленнаяНоменклатура1С.Значение.Единицы.Количество() Тогда
			Возврат Истина;
		КонецЕсли;
		
		Для Каждого Единицы Из СопоставленнаяНоменклатура1С.Значение.Единицы Цикл
			Если СтрокаСНоменклатурой1С.Единицы <> Единицы.Ключ
				ИЛИ СтрокаСНоменклатурой1С.Коэффициент <> Единицы.Значение.Коэффициент Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокаСНоменклатурой1С.Цена <> СопоставленнаяНоменклатура1С.Цена 
			ИЛИ СтрокаСНоменклатурой1С.Количество <> СопоставленнаяНоменклатура1С.Количество Тогда
			Возврат Истина;  
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

