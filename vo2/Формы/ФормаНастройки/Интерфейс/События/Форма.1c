
&НаКлиенте
Процедура ПриОткрытии()
	
	НажатиеСохранитьВыполнено = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПараметрыФормы.Свойство("РежимЗапуска") И ПараметрыФормы.РежимЗапуска = "НастройкиСоединения" И НажатиеСохранитьВыполнено Тогда//Пробуем включить обмен
		//Нажали закрыть, возвращаем как было и закрываем.
		ДополнительныеПараметры	= Новый Структура("ФормаВладелец, ВызыватьРекурсивно", ЭтаФорма, Ложь);//Для корректного сообщения об ошибке УФ
		НастройкиПодключения	= Новый Структура(КлючиИспользовать);
		ЗаполнитьЗначенияСвойств(НастройкиПодключения, Этаформа);
		Изменено = МестныйКэш.ГлавноеОкно.ОпределитьИнтеграциюРабочиеФормы(МестныйКэш, НастройкиПодключения, ДополнительныеПараметры);

		Если Изменено Тогда
			МестныйКэш.Интеграция.СбисУстановитьВремяОжидания(МестныйКэш, ВремяОжиданияОтвета);
		Иначе
			НажатиеСохранитьВыполнено = Ложь;
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбработчикЗавершения = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ПослеЗакрытия", ЭтаФорма);
	НовыйОтложенноеДействие = МодульОбъектаКлиент().НовыйОтложенноеДействие(Новый Структура("ОписаниеОповещения", ОбработчикЗавершения));
	МодульОбъектаКлиент().ПодключитьОтложенноеДействие(НовыйОтложенноеДействие);
	
КонецПроцедуры

// Процедура - после закрытия почистить форму
//
// Параметры:
//  Аргумент	 - 	 - 
//  ДопПараметры - 	 - 
//
&НаКлиенте
Процедура ПослеЗакрытия(Аргумент=Неопределено, ДопПараметры=Неопределено) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//Вызвать описание оповещения о закрытии вручную.
		Если Не ОписаниеОповещенияОЗакрытии = Неопределено Тогда
			МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(ПараметрыФормы.Результат, ОписаниеОповещенияОЗакрытии);
		КонецЕсли;
	#КонецЕсли
	ПараметрыФормы				= Неопределено;
	ОписаниеОповещенияОЗакрытии	= Неопределено;
	
КонецПроцедуры

