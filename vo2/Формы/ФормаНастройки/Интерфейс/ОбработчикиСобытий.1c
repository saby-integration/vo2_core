
// Процедура - Обновить настройки элементов формы
//
// Параметры:
//  СписокЭлементов		 - Массив - Содержит строки с именами элементов формы, которые нужно настроить 
//  ПараметрыНастройки	 - 	Структура 	 - Параметры, которые будут установлены элементу (доступность, видимость и т.п.)
//
//			Настройка 	 -	Строка	  	 - Имя настройки элемента 
//			Значение 	 -	Произвольный - Устанавливаемое значение. Проверок на установку недопустимого значения нет, остаётся на совести программиста
//
// Пока делаю локально для формы, потому что доброска срочная
&НаКлиенте
Процедура ОбновитьНастройкиЭлементовФормы(СписокЭлементов, ПараметрыНастройки)
	
	ЭлементыДляИзменения = Новый Массив;
	
	Для Каждого ИмяЭлемента Из СписокЭлементов Цикл
		
		ЭлементФормы = МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, ИмяЭлемента);
		
		Если НЕ ЭлементФормы = Неопределено Тогда
			ЭлементыДляИзменения.Добавить(ЭлементФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент Из ЭлементыДляИзменения Цикл
		Для Каждого Параметр Из ПараметрыНастройки Цикл
			Элемент[Параметр.Ключ] = Параметр.Значение;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуНастроек()
	
	МестныйКэш.ФормаНастроек.ПараметрыРаботы.Вставить("ВыполнитьПроверку", Истина);
	ПараметрыУстановки = Новый Структура("ПринудительнаяПроверка, ПродолжитьУстановку", Истина, Истина);
	МестныйКэш.ФормаНастроекОбщее.СбисПолучитьИУстановитьНастройкиВКэш(ПараметрыУстановки, МестныйКэш);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВкладкуСервис()
	
	ГруппаНастройкиСтраницы = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "НастройкиСтраницы");
	ГруппаНастройкиСтраницы.ТекущаяСтраница = МестныйКэш.ГлавноеОкно.сбисПолучитьСтраницу(ГруппаНастройкиСтраницы, "Сервис");

	Если Не ЭтаФорма.Таблица_Сервис.Количество() И МестныйКэш.Ини.Свойство("Сервис") Тогда
		
		ИниСервис = МестныйКэш.ФормаНастроек.Ини(МестныйКэш, "Сервис");
		
		Для Каждого ПунктКоманды Из ИниСервис Цикл
			
			Если ТипЗнч(ПунктКоманды.Значение) = Тип("Структура") И ПунктКоманды.Значение.Свойство("Имя") Тогда
				
				НовыйПунктКоманды 		   = ЭтаФорма.Таблица_Сервис.Добавить();
				НовыйПунктКоманды.Ключ 	   = ПунктКоманды.Ключ;
				НовыйПунктКоманды.Имя 	   = ПунктКоманды.значение.Имя;
				НовыйПунктКоманды.Описание = ПунктКоманды.значение.Описание;
				НовыйПунктКоманды.Команда  = ПунктКоманды.значение.Значение;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Сбросим начальную страницу
	ГруппаНастройкиСтраницы.ТекущаяСтраница = МестныйКэш.ГлавноеОкно.сбисПолучитьСтраницу(ГруппаНастройкиСтраницы, "ОбщиеНастройки"); 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСпособХраненияМетокСтатусов(НовоеЗначениеМеток)
	
	Попытка
		МодульОбъектаКлиент().ИзменитьПараметрСбис("СпособХраненияМетокСтатусов", НовоеЗначениеМеток);
		МеткиСтатусов = МестныйКэш.ФормаНастроек.СбисПрочитатьМеткиСтатусов(МестныйКэш);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, МеткиСтатусов);
		ЗаполнитьЗначенияСвойств(МестныйКэш.ГлавноеОкно, МеткиСтатусов);
		МестныйКэш.ФормаНастроек.ИнициализироватьКэшНастроек(МестныйКэш, Новый Структура("Обновить, Параметр", Истина, "status_marks")); //для способа хранения меток в разрезе аккаунта добавим status_marks в список параметров, хранящихся на шаблоне	
	Исключение
		ИнфаОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфаОбОшибке, "ФормаНастройки.ИзменитьСпособХраненияМетокСтатусов")
	КонецПопытки;

КонецПроцедуры

&НаКлиенте                                             
Процедура ОбновитьДоступностьНастроек()
// Процедура устанавливает видимость элементов формы в зависимости от выбранного варианта настроек прокси		

	ДоступностьПрокси = ТипПрокси = "Вручную";
	СбисЭлементВидимость = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "ИнтеграцияAPIВызовыНаКлиенте");
	Если Не СбисЭлементВидимость = Неопределено Тогда
		#Если ВебКлиент Тогда
			СбисЭлементВидимость.Видимость = Ложь;
		#Иначе
			СбисЭлементВидимость.Видимость = (СпособОбмена = 3);
		#КонецЕсли
	КонецЕсли;
	
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ШифроватьВыборочно").Видимость	= СпособОбмена = 5 Или СпособОбмена = 7;    

	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ВремяОжиданияОтвета").Видимость	= СпособОбмена = 0 Или СпособОбмена = 7 
																  Или СпособОбмена = 6 Или СпособОбмена = 5 Или СпособОбмена = 4;
																  
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "КаталогОбмена").Видимость		= СпособОбмена = 1;
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "НастройкаЭП").Видимость			= СпособОбмена = 3;
	МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "КаталогОтладки").Видимость 		= РежимОтладки;
	
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ИспользоватьГенератор").Видимость = МестныйКэш.СБИС.ПараметрыИнтеграции.ГенераторФЭД;
	
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ПроксиСервер").Доступность		= ДоступностьПрокси;
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ПроксиПорт").Доступность			= ДоступностьПрокси;
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ПроксиЛогин").Доступность		= ДоступностьПрокси;
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "ПроксиПароль").Доступность		= ДоступностьПрокси;
	
	Если Не МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда 
		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "НадписьСервер").Доступность	= ДоступностьПрокси;
		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "НадписьПорт").Доступность	= ДоступностьПрокси;
		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "НадписьЛогин").Доступность	= ДоступностьПрокси;
		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "НадписьПароль").Доступность	= ДоступностьПрокси;
	КонецЕсли;
	
	Если	ДоступностьПрокси
		И	МестныйКэш.Парам.Свойство("ПроксиСервер")
		И	СокрЛП(МестныйКэш.Парам.ПроксиСервер) <> "" Тогда
		
		ПроксиСервер = МестныйКэш.Парам.ПроксиСервер;
	КонецЕсли;	 
	
	//Определить возможность использования серверных настроек для интеграции
	ПараметрыКэша = Новый Структура("ТихийРежим, Владелец, ПараметрыСистемы", Истина, МестныйКэш.ГлавноеОкно, МестныйКэш.ПараметрыСистемы);
	ВременныйКэш = МодульОбъектаКлиент().НовыйЛокальныйКэш(ПараметрыКэша);
	МестныйКэш.ГлавноеОкно.ОпределитьФормуИнтеграции(ВременныйКэш, СпособОбмена);

	Если	ВременныйКэш.Интеграция.ДоступныСерверныеНастройки()	Тогда

		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "СпособХраненияНастроек").ТолькоПросмотр	= Ложь;

	Иначе 

		СпособХраненияНастроек	= 0; 
		МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "СпособХраненияНастроек").ТолькоПросмотр	= Истина;

	КонецЕсли;
	МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "КаталогНастроек").Видимость		= СпособХраненияНастроек = 0;
	
	ВариантыСпособаОбмена			= МестныйКэш.ГлавноеОкно.СбисЭлементФормы(ЭтаФорма, "СпособОбмена").СписокВыбора;	
	ДоступностьНовыхСпособовОбмена	= ДоступностьНовыхСпособовОбмена(МестныйКэш.ПараметрыСистемы);
	
	Если НЕ ВариантыСпособаОбмена.НайтиПоЗначению(9) = Неопределено И НЕ ДоступностьНовыхСпособовОбмена.SabyHttpsClient Тогда
		ВариантыСпособаОбмена.Удалить(ВариантыСпособаОбмена.НайтиПоЗначению(9));
	КонецЕсли; 
	
	Если НЕ ВариантыСпособаОбмена.НайтиПоЗначению(8) = Неопределено И НЕ ДоступностьНовыхСпособовОбмена.SabyPluginConnector Тогда
		ВариантыСпособаОбмена.Удалить(ВариантыСпособаОбмена.НайтиПоЗначению(8));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ДоступностьНовыхСпособовОбмена(ПараметрыСистемы)
	Результат 				= Новый Структура("SabyHttpsClient, SabyPluginConnector", Ложь, Ложь);	
	МестаПоискаОбработки	= Новый Массив();//Массив адресов, где искать файл в порядке приоритета
	МестаПоискаОбработки.Добавить(Новый Структура("Путь, Алгоритм", "Справочники.ДополнительныеОтчетыИОбработки",	"Запрос"));
	МестаПоискаОбработки.Добавить(Новый Структура("Путь, Алгоритм", "Справочники.ВнешниеОбработки",					"Запрос"));
		
	ДополнительныеПараметры 		= Новый Структура("МестаПоиска, ПараметрыСистемы, Действия", МестаПоискаОбработки, ПараметрыСистемы, Новый Структура);//Действия пустые - только поиск
	ПараметрыФункций				= Новый Структура("ИмяВнешнихФункций", "vo3_sabyhttpclient");
	Если МодульОбъектаСервер().ПолучитьАдресВнешнихФункцийСервер(ПараметрыФункций, ДополнительныеПараметры).Результат = Истина Тогда
		Результат.SabyHttpsClient = Истина;
	КонецЕсли;	
	
	ПараметрыФункций 				= Новый Структура("ИмяВнешнихФункций", "vo3_sabypluginconnector");	
	Если МодульОбъектаСервер().ПолучитьАдресВнешнихФункцийСервер(ПараметрыФункций, ДополнительныеПараметры).Результат = Истина Тогда
		Результат.SabyPluginConnector = Истина;
	КонецЕсли;	
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СбисВыбратьКаталог(СтароеЗначение)
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	ДиалогОткрытия.Каталог		= СтароеЗначение;
	ДиалогОткрытия.Заголовок	= "Выберите каталог"; 
	Если ДиалогОткрытия.Выбрать() Тогда 
		Возврат МестныйКэш.ОбщиеФункции.СбисФорматКаталога(ДиалогОткрытия.Каталог, МестныйКэш.ПараметрыСистемы.Клиент); 
	КонецЕсли;
	
	Возврат	СтароеЗначение;
	
КонецФункции

//Заполняет список адресов сервера
&НаКлиенте
Процедура СбисЗаполнитьАдресСервера(Кэш)
	
	ДанныеЭлементов = "ЭлементыФормы";
	Если Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		ДанныеЭлементов = "Элементы";
	КонецЕсли;
	ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Очистить();
	
	СписокСерверов		= Кэш.ГлавноеОкно.СбисСписокСерверов(Кэш);
	ПредставлениеАдрес	= СтрЗаменить(СтрЗаменить(СокрЛП(АдресСервера), "https:", ""), "/", "");
	ДобавитьАдрес		= Истина;
	Для Каждого ЭлементСписка Из СписокСерверов Цикл
		ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		Если ЭлементСписка.Представление = ПредставлениеАдрес Тогда
			АдресСервера = ЭлементСписка.Значение;
			ДобавитьАдрес = Ложь;
		КонецЕсли;
	КонецЦикла;
	Если ДобавитьАдрес Тогда
		ЭтаФорма[ДанныеЭлементов].АдресСервера.СписокВыбора.Добавить(АдресСервера, ПредставлениеАдрес);
	КонецЕсли;
	АдресСервера = АдресСервера;//перевыберем для списка
	
КонецПроцедуры

// Процедура записывает выбранные настройки в сохраняемые параметры и закрывает форму	
&НаКлиенте
Процедура СбисПрименитьНастройки()
	
	Если СпособОбмена = 1 И Не ЗначениеЗаполнено(КаталогОбмена) Тогда
		
		ТекстСообщения = "Заполните каталог обмена документами";
		
		Если МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда 	
			Сообщить(ТекстСообщения);
		Иначе
			Предупреждение(ТекстСообщения);
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СписокСвойствЗаполнения = "СпособОбмена, СпособХраненияНастроек, КаталогОбмена, КаталогНастроек, ВремяОжиданияОтвета, ТипГрузополучателя, АдресСервера, ЗаполнениеКонтрагента1С";
	ЗаполнитьЗначенияСвойств(МестныйКэш.Парам, ЭтаФорма, СписокСвойствЗаполнения);

	Если ТипПрокси = "Вручную" Тогда
		
		МестныйКэш.Парам.Вставить("ТипПрокси","Вручную");
		МестныйКэш.Парам.Вставить("ПроксиСервер",	ПроксиСервер);
		МестныйКэш.Парам.Вставить("ПроксиПорт",		ПроксиПорт );
		МестныйКэш.Парам.Вставить("ПроксиЛогин",	ПроксиЛогин);
		МестныйКэш.Парам.Вставить("ПроксиПароль",	ПроксиПароль);
		
	ИначеЕсли ТипПрокси = "Автоматически" Тогда
		
		МестныйКэш.Парам.Вставить("ТипПрокси","Автоматически");
		
	Иначе
		
		МестныйКэш.Парам.Вставить("ТипПрокси","НеИспользовать");
		
	КонецЕсли;
	
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
	МестныйКэш.Парам.ИнтеграцияAPIВызовыНаКлиенте = ИнтеграцияAPIВызовыНаКлиенте;
    #КонецЕсли
	
	МестныйКэш.Интеграция.СбисУстановитьВремяОжидания(МестныйКэш, ВремяОжиданияОтвета);
	МестныйКэш.ГлавноеОкно.АдресСервера = АдресСервера;
	МестныйКэш.СБИС.АдресСервера = АдресСервера;
	МестныйКэш.СБИС.ПараметрыИнтеграции.РезервныйДомен = МестныйКэш.Интеграция.сбисВключенРезервныйДомен(МестныйКэш, АдресСервера);
	
	ИзмененСпособИнтеграции = Ложь;
	
	Если СпособОбмена <> МестныйКэш.ГлавноеОкно.СпособОбмена Тогда
		
		// При изменении способа обмена (SDK, API, каталог)	"перезапускаем" обработку
		ПараметрыИнтеграции = Новый Структура("АдресСервера, СпособОбмена, СпособХраненияНастроек, ВремяОжиданияОтвета", МестныйКэш.СБИС.АдресСервера);
		ЗаполнитьЗначенияСвойств(ПараметрыИнтеграции, МестныйКэш.Парам);
		ПараметрыИнтеграции.СпособОбмена = СпособОбмена;
		ИзмененСпособИнтеграции = Истина; 
		
		#Если ТонкийКлиент Тогда
			МестныйКэш.ГлавноеОкно.ПерезапуститьГлавноеОкно(ПараметрыИнтеграции, Истина, Ложь);	
		#КонецЕсли
	КонецЕсли; 
	
	Если КаталогНастроек <> МестныйКэш.ГлавноеОкно.КаталогНастроек Тогда  
		
		МестныйКэш.ГлавноеОкно.КаталогНастроек = КаталогНастроек;
		МестныйКэш.Парам.ИдентификаторНастроек = МестныйКэш.ФормаНастроек.сбисПолучитьИдентификаторНастроек(МестныйКэш);		
		
		Если НЕ ПараметрыФормы.РежимЗапуска = "НастройкиСоединения" Тогда
			ВыполнитьПроверкуНастроек();
		КонецЕсли;
		
	КонецЕсли;
	
	НажатиеСохранитьВыполнено = Истина;
	
	Для Каждого ПутьКДаннымФормы Из ИзмененныеПараметры Цикл    
		
		СтароеЗначение = МестныйКэш.Парам[ПутьКДаннымФормы.Ключ];
		
		Попытка
			
			МестныйКэш.Парам[ПутьКДаннымФормы.Ключ] = ЭтаФорма[ПутьКДаннымФормы.Ключ];
			
		Исключение                                              
			
			ТекстОшибкиДляПользователя = "Ошибка при сохранении новых значений настроек. Несохранённому параметру возвращено предыдущее значение. Подробно: " + ИнформацияОбОшибке();
			МодульОбъектаКлиент().СообщитьСбисИсключение(ТекстОшибкиДляПользователя, "ФормаНастройки.СпособХраненияМетокСтатусовПриИзменении");
        	МестныйКэш.Парам[ПутьКДаннымФормы.Ключ] = СтароеЗначение;
			
		КонецПопытки;                                           
		
	КонецЦикла;
	
	Если СпособХраненияНастроек <> МестныйКэш.ГлавноеОкно.СпособХраненияНастроек Тогда
		
		МестныйКэш.Парам.ИдентификаторНастроек = МестныйКэш.ФормаНастроек.сбисПолучитьИдентификаторНастроек(МестныйКэш);
		
		Если НЕ ПараметрыФормы.РежимЗапуска = "НастройкиСоединения" Тогда
			ВыполнитьПроверкуНастроек();
		КонецЕсли;
		
		ПараметрыИнтеграции = Новый Структура("АдресСервера, СпособОбмена, СпособХраненияНастроек, ВремяОжиданияОтвета", МестныйКэш.СБИС.АдресСервера);
		ЗаполнитьЗначенияСвойств(ПараметрыИнтеграции, МестныйКэш.Парам);
		ПараметрыИнтеграции.СпособОбмена = СпособОбмена;
		
		Если МестныйКэш.СБИС.Авторизован Тогда
			МестныйКэш.ГлавноеОкно.ПерезапуститьГлавноеОкно(ПараметрыИнтеграции, Ложь, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы.Результат = МестныйКэш.Парам;
	
	Закрыть(ПараметрыФормы.Результат);
	
КонецПроцедуры

//Выполняет вызов проверки автообновления
&НаКлиенте
Процедура СбисПроверитьНаличиеОбновлений(ПараметрыПроверки, ДоПараметры = Неопределено) Экспорт
	
	Попытка
		Если ЗначениеЗаполнено(МестныйКэш.Парам.ОжидаемаяВерсия) Тогда
			Сообщить("На текущий момент обновление не требуется - установлена актуальная версия внешней обработки");
			Возврат;
		КонецЕсли;
		
		МестныйКэш.ГлавноеОкно.сбисПоказатьСостояние("Проверка наличия обновлений");
		МестныйКэш.ОбщиеФункции.СбисПроверитьНаличиеОбновлений(МестныйКэш, ПараметрыПроверки);
		МестныйКэш.ГлавноеОкно.сбисСпрятатьСостояние();
		
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "ФормаГлавноеОкно.СбисПроверитьНаличиеОбновлений");
	КонецПопытки;

КонецПроцедуры

&НаКлиенте
Процедура СбисУстановитьФорму(ПараметрыОткрытия)
		
	ПараметрыФормы = Новый Структура("РежимЗапуска, Результат");
	ИзмененныеПараметры = Новый Структура;
	
	Если		ПараметрыОткрытия = Неопределено Тогда
		ПараметрыФормы.РежимЗапуска = "ОбщиеНастройки";
	Иначе
		Если Не	ПараметрыОткрытия.Свойство("РежимЗапуска", ПараметрыФормы.РежимЗапуска) Тогда
			ПараметрыФормы.РежимЗапуска = "ОбщиеНастройки";
		КонецЕсли;
		Если ПараметрыОткрытия.Свойство("Кэш") Тогда
			МестныйКэш = ПараметрыОткрытия.Кэш;
		КонецЕсли;
	КонецЕсли;
	
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = ВладелецФормы.Кэш;
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ЭтаФорма, МестныйКэш.Парам);
	
	ЭлементДействия = МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, "НастройкиСтраницы");
	
	Если ПараметрыФормы.РежимЗапуска = "ОбщиеНастройки" Тогда
		
		ЗаполнитьВкладкуСервис();
		//Обновить метки статусов при открытии формы
		МодульОбъектаКлиент().ОбновитьМеткиСтатусов(, МестныйКэш);
		ЗаполнитьЗначенияСвойств(ЭтаФорма, МестныйКэш.ГлавноеОкно, "ДатаПоследнегоЗапросаСтатусов, ИдентификаторПоследнегоСобытия, ДатНачЧтенияСтатусов, ДатКнцЧтенияСтатусов");
		
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "СтраницаСоединение").Видимость   = Истина;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "НастройкиДокументов").Видимость  = Истина;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ОбщиеНастройки").Видимость  	   = Истина;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "Сервис").Видимость  			   = Ложь;
		
		СписокСпособовХранения	= МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, "СпособХраненияМетокСтатусов").СписокВыбора;
		СписокЭлементВ_ИБ		= СписокСпособовХранения.НайтиПоЗначению(2);
		Если МодульОбъектаКлиент().ИспользоватьСбисПараметрыДляХраненияОбщихНастроек() Тогда
			Если Не СписокЭлементВ_ИБ = Неопределено Тогда
				СписокСпособовХранения.Удалить(СписокЭлементВ_ИБ);
			КонецЕсли;
		ИначеЕсли СписокЭлементВ_ИБ = Неопределено Тогда
			СписокСпособовХранения.Добавить(2, "Информационной базы");
		КонецЕсли;
		
		Если МодульОбъектаКлиент().ПолучитьЗначениеФичи(Новый Структура("НазваниеФичи", "ПоддержкаМаркировки")) Тогда
			
			МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ЗаказыПокупателей").Видимость   = Истина;
			
			Если НЕ ЗначениеЗаполнено(СкладПоУмолчанию) 
				И МестныйКэш.ФормаНастроек.ПараметрыРаботы.Свойство("СправочникСклады")
				И ЗначениеЗаполнено(МестныйКэш.ФормаНастроек.ПараметрыРаботы.СправочникСклады) Тогда
				
				НаименованиеТипа = СокрЛП(МестныйКэш.ФормаНастроек.ПараметрыРаботы.СправочникСклады);
				ЭлементСкладПоУмолчанию = МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, "СкладПоУмолчанию");
				ЭлементСкладПоУмолчанию.ОграничениеТипа = Новый ОписаниеТипов(НаименованиеТипа);
				
				ИмяСправочника = СтрЗаменить(НаименованиеТипа, "Ссылка", ""); 
				СкладПоУмолчанию = ПредопределенноеЗначение(ИмяСправочника + ".ПустаяСсылка");
				
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(РасСчетПоУмолчанию) 
				И МестныйКэш.ФормаНастроек.ПараметрыРаботы.Свойство("СправочникРасСчет")
				И ЗначениеЗаполнено(МестныйКэш.ФормаНастроек.ПараметрыРаботы.СправочникРасСчет) Тогда
				
				НаименованиеТипа = СокрЛП(МестныйКэш.ФормаНастроек.ПараметрыРаботы.СправочникРасСчет);
				ЭлементРасСчет = МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, "РасСчетПоУмолчанию");
				ЭлементРасСчет.ОграничениеТипа = Новый ОписаниеТипов(НаименованиеТипа);
				
				ИмяСправочника = СтрЗаменить(НаименованиеТипа, "Ссылка", ""); 
				РасСчетПоУмолчанию = ПредопределенноеЗначение(ИмяСправочника + ".ПустаяСсылка");

				ЭлементыДляОбновления = Новый Массив;
				ЭлементыДляОбновления.Добавить("РасСчетПоУмолчанию");
				ЭлементыДляОбновления.Добавить("НадписьРасСчет");
				ПараметрНастройки = Новый Структура("Видимость", Ложь);
				ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрНастройки);				
			Иначе
				
				РасСчетПоУмолчанию = Неопределено;
				МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, "РасСчетПоУмолчанию").Видимость = Ложь;   // Если заполнен расчетный счет, но из инишки не подтянулся справочник, то принудительно очищаем и прячем
				ЭлементыДляОбновления = Новый Массив;
				ЭлементыДляОбновления.Добавить("РасСчетПоУмолчанию");
				ЭлементыДляОбновления.Добавить("НадписьРасСчет");
				ПараметрНастройки = Новый Структура("Видимость", Ложь);
				ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрНастройки);
				
			КонецЕсли;  
			
			Настройки = НастройкиЭлементовЗаполненияКонтрагента1С();	
			ОбновитьНастройкиЭлементовФормы(Настройки.СписокЭлементов, Настройки.ПараметрыНастройки); 
			
		Иначе
			МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ЗаказыПокупателей").Видимость   = Ложь;
		КонецЕсли;
		
		
	ИначеЕсли ПараметрыФормы.РежимЗапуска = "НастройкиСоединения" Тогда   
		
		РежимЗапускаНастройкаСоединения();
		
	ИначеЕсли ПараметрыФормы.РежимЗапуска = "Сервисы" Тогда
		
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "СтраницаСоединение").Видимость   = Ложь;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "НастройкиДокументов").Видимость  = Ложь;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ОбщиеНастройки").Видимость  	   = Ложь;  
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ЗаказыПокупателей").Видимость    = Ложь;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "Сервис").Видимость  			   = Истина;	
		ЗаполнитьВкладкуСервис();
		
	Иначе
		
		ИнфоОбОшибке = "Передано неизвестное значение параметра ""Режим запуска""";
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "ФормаНастройки.ПриОткрытии")

	КонецЕсли;   
	
	Если НЕ МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "НадписьАдресСервисаОбновлений") = Неопределено Тогда 
		МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "НадписьАдресСервисаОбновлений").Видимость = РежимОтладки;   
	КонецЕсли;	
	МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "АдресСервисаОбновлений").Видимость = РежимОтладки;
	
	СбисЗаполнитьАдресСервера(МестныйКэш);
	
	ОбновитьДоступностьНастроек();
	
КонецПроцедуры

//Процедура управляет включением/отключением вывода логов
&НаКлиенте
Процедура СбисПереключитьОтладку()
	Если РежимОтладки Тогда
		МестныйКэш.Интеграция.ВключитьОтладку(МестныйКэш, КаталогОтладки);
	Иначе
		МестныйКэш.Интеграция.ОтключитьОтладку(МестныйКэш);
	КонецЕсли;
	
	МестныйКэш.Парам.РежимОтладки	= РежимОтладки;
	МестныйКэш.Парам.КаталогОтладки = КаталогОтладки;
	МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "КаталогОтладки").Видимость = РежимОтладки;
	//+++ МАИ 09.09.2021 Переопределяем сервер обновлений, если пользователь в режиме отладки указал другой
	МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "АдресСервисаОбновлений").Видимость = РежимОтладки;
	Если НЕ РежимОтладки ИЛИ АдресСервисаОбновлений = "" Тогда
		АдресСервисаОбновлений = "update.sbis.ru";
		МестныйКэш.СБИС.ПараметрыИнтеграции.Вставить("АдресСервисаОбновлений", АдресСервисаОбновлений);
	КонецЕсли;
	//--- МАИ 09.09.2021 
	
КонецПроцедуры					

Функция НастройкиЭлементовЗаполненияКонтрагента1С()
	
	СписокЭлементов = Новый Массив;
	СписокЭлементов.Добавить("ГрузополучательНеВедется");
	СписокЭлементов.Добавить("ГрузополучательКонтрагент");
	СписокЭлементов.Добавить("ГрузополучательПартнер");
	СписокЭлементов.Добавить("ТипГрузополучателя");
	
	ПараметрыНастройки = Новый Структура;
	
	Если ЗаполнениеКонтрагента1С = "ГрузополучательСБИС" Тогда
		
		ТипГрузополучателя = "ГрузополучательКонтрагент";
		
		ПараметрыНастройки.Вставить("Доступность", Ложь);		
		
   	Иначе 
		
		ПараметрыНастройки.Вставить("Доступность", Истина);
		
	КонецЕсли;
	
	Настройки = Новый Структура("СписокЭлементов, ПараметрыНастройки", СписокЭлементов, ПараметрыНастройки);
	Возврат Настройки;
	
КонецФункции
&НаКлиенте
Процедура РежимЗапускаНастройкаСоединения()
	
	ЭлементДействия = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "НастройкиСтраницы");
	МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "СтраницаСоединение").Видимость   = Истина; 
	МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ЗаказыПокупателей").Видимость    = Ложь;
	МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "НастройкиДокументов").Видимость  = Ложь;
	МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "ОбщиеНастройки").Видимость  	   = Ложь;
	МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭлементДействия, "Сервис").Видимость  			   = Ложь;	
	СбисЗаполнитьАдресСервера(МестныйКэш);
	ЗаполнитьЗначенияСвойств(НастройкиПодключения_Было, ЭтаФорма);
	
	СпособОбменаСписокВыбора = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "СпособОбмена").СписокВыбора;
	Если СпособОбмена = 0 И ПустаяСтрока(СпособОбменаСписокВыбора.НайтиПоЗначению(0))	Тогда
		
		СпособОбменаСписокВыбора.Вставить(0, 0, "SDK");
		Попытка 
			МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "СпособОбмена").Значение = СпособОбменаСписокВыбора.Получить(0).Значение;  //по индексу - SDK
		Исключение	
			
		КонецПопытки;		
		
		СпособОбменаСписокВыбора.СортироватьПоЗначению();
	КонецЕсли;
	
	Если СпособОбмена = 4 И ПустаяСтрока(СпособОбменаСписокВыбора.НайтиПоЗначению(4))	Тогда
		СпособОбменаСписокВыбора.Вставить(3, 4, "ExtSDK");
		Попытка 
			МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "СпособОбмена").Значение = СпособОбменаСписокВыбора.Получить(3).Значение;  //по индексу - ExtSDK
		Исключение	
			
		КонецПопытки;		
		
		СпособОбменаСписокВыбора.СортироватьПоЗначению();
	КонецЕсли;
	
	Если СпособОбмена = 5 И ПустаяСтрока(СпособОбменаСписокВыбора.НайтиПоЗначению(5))	Тогда
		СпособОбменаСписокВыбора.Вставить(4, 5, "ExtSDKCrypto");
		Попытка 
			МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "СпособОбмена").Значение = СпособОбменаСписокВыбора.Получить(4).Значение;	//по индексу - ExtSDKCrypto	
		Исключение	
			
		КонецПопытки;	
		
		СпособОбменаСписокВыбора.СортироватьПоЗначению();
	КонецЕсли;
	
	Если ТипПрокси = Неопределено Тогда
		ТипПрокси = "НеИспользовать";
		
	ИначеЕсли Не(	ТипПрокси = "Вручную"
		Или	ТипПрокси = "НеИспользовать") Тогда;
		
		ТипПрокси = "Автоматически";
	КонецЕсли;
	
	Если Не ТипПрокси = "Вручную" Тогда
		ПроксиСервер = "";
		ПроксиПорт   = ""; 
		ПроксиЛогин  = "";  
		ПроксиПароль = "";
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиАвтообновлениеПриИзменении(Элемент)
	МестныйКэш.ФормаНастроек.АвтообновлениеПриИзменении(МестныйКэш, НастройкиАвтообновление);
	ПараметрыПриИзменении(Элемент);
КонецПроцедуры

