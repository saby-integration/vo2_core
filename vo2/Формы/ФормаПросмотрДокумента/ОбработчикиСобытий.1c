
//Обработка сопоставления
&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьПриИзменении(Кэш, ТабЧасть)
	
	СтрокаТабЧасти	= ТабЧасть.ТекущиеДанные;
	Если СтрокаТабЧасти = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ИмяПоиска = "НомерПП";
	#Иначе
		ИмяПоиска = "Название";
		Если ЗначениеЗаполнено(СтрокаТабЧасти.КодПокупателя) Тогда
			ИмяПоиска = "КодПокупателя";
		ИначеЕсли ЗначениеЗаполнено(СтрокаТабЧасти.Идентификатор) Тогда
			ИмяПоиска = "Идентификатор";
		КонецЕсли;
	#КонецЕсли
	ЗначениеПоиска = СтрокаТабЧасти[ИмяПоиска];
	
	ДанныеНоменклатуры = Новый Структура("Название, КодПокупателя, Идентификатор, Код, Номенклатура, Характеристика, GTIN, ЕдИзм, ЕдИзмОрг, Коэффициент");
    ЗаполнитьЗначенияСвойств(ДанныеНоменклатуры, СтрокаТабЧасти);
	ЕстьИзмененияСтроки			= Ложь;
	ЕстьИзмененияНоменклатуры	= Ложь;
	Для Каждого КлючИЗначениеСтр Из СтрокаТЧДоИзменения.Номенклатура Цикл
		Если СтрокаТабЧасти[КлючИЗначениеСтр.Ключ] = КлючИЗначениеСтр.Значение Тогда
			Продолжить;
		КонецЕсли;
		ЕстьИзмененияНоменклатуры = Истина;
		ЕстьИзмененияСтроки = Истина;
		Прервать;
	КонецЦикла;
	Если Не ЕстьИзмененияСтроки Тогда
		Для Каждого КлючИЗначениеСтр Из СтрокаТЧДоИзменения.Прочее Цикл
			Если СтрокаТабЧасти[КлючИЗначениеСтр.Ключ] = КлючИЗначениеСтр.Значение Тогда
				Продолжить;
			КонецЕсли;
			ЕстьИзмененияСтроки = Истина;
			Прервать;
		КонецЦикла;
		Если Не ЕстьИзмененияСтроки Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПутьКонтрагента	= сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьКонтрагента;
	ПутьТаблДок		= сбисЭлементФормы(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.ПутьТаблДок;
	Если Не ЗначениеЗаполнено(ПутьКонтрагента) Тогда
		Сообщить("Отсутствуют требуемые данные для записи сопоставления");
		Возврат;
	КонецЕсли;
	
	//Если меняли номенлклатуру, то запишем.
	Если ЕстьИзмененияНоменклатуры Тогда
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("УстановитьСоответствиеНоменклатуры", Кэш.ФормаРаботыСНоменклатурой, "", Кэш);
		Попытка
			фрм.УстановитьСоответствиеНоменклатуры(Кэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьКонтрагента, Вложение.СтруктураФайла), ДанныеНоменклатуры, Кэш.Парам.КаталогНастроек, Кэш.Ини);
		Исключение
			СбисИсключение = Кэш.ОбщиеФункции.СбисИсключение(ОписаниеОшибки(), "ФормаПросмотрДокумента.СбисЗаписатьСопоставление",,"Ошибка записи сопоставления");
			Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, СбисИсключение, Новый Структура("ФормаВладелец", ЭтаФорма));
		КонецПопытки;
	КонецЕсли;
	
	НомерПП = СтрокаТабЧасти.НомерПП-1;
	ТаблДок = Кэш.ОбщиеФункции.РассчитатьЗначениеИзСтруктуры(ПутьТаблДок, Вложение.СтруктураФайла);
	ТаблДок[НомерПП].Вставить("Номенклатура",				ДанныеНоменклатуры.Номенклатура);
	ТаблДок[НомерПП].Вставить("ХарактеристикаНоменклатуры",	ДанныеНоменклатуры.Характеристика);
	ТаблДок[НомерПП].Вставить("ЕдИзмОрг",					ДанныеНоменклатуры.ЕдИзмОрг);
	ТаблДок[НомерПП].Вставить("Коэффициент",				ДанныеНоменклатуры.Коэффициент);
	Если СтрокаТабЧасти.Отмечен Тогда
		ТаблДок[НомерПП].Удалить("НеЗагружать");
	Иначе
		ТаблДок[НомерПП].Вставить("НеЗагружать");
	КонецЕсли;
	ЗаполнитьТаблицуДокументов(СоставПакета);

	Если ЗначениеПоиска = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтрокаТЧУстановить = Новый Структура(ИмяПоиска, ЗначениеПоиска);
	
	ЭтаФорма.ПодключитьОбработчикОжидания("СбисСпозиционироватьСтроку", 0.1, Истина);
КонецПроцедуры

//Позиционирует строку в ТЧ после обновления
&НаКлиенте
Процедура СбисСпозиционироватьСтроку() Экспорт
	ТабЧасть	= СбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть");
	Строка		= ТабличнаяЧасть.НайтиСтроки(СтрокаТЧУстановить);
	Если Строка.Количество() Тогда
		СтрокаУстановить = Строка[0];
		#Если Не ТолстыйКлиентОбычноеПриложение Тогда 
			СтрокаУстановить = СтрокаУстановить.ПолучитьИдентификатор();
		#КонецЕсли
	Иначе
		Возврат;
	КонецЕсли;
	ТабЧасть.ТекущаяСтрока = СтрокаУстановить;		
КонецПроцедуры

//Запись до изменений
&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьДоИзменения(Кэш, ТабЧасть)
	СтрокаТЧДоИзменения = Новый Структура("Номенклатура, Прочее", Новый Структура("Номенклатура, Характеристика, ЕдИзмОрг, Коэффициент"), Новый Структура("Отмечен"));
    ЗаполнитьЗначенияСвойств(СтрокаТЧДоИзменения.Номенклатура,	ТабЧасть.ТекущиеДанные);
    ЗаполнитьЗначенияСвойств(СтрокаТЧДоИзменения.Прочее,		ТабЧасть.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьНоменклатураНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисТабличнаяЧастьНоменклатураНачалоВыбора","ФормаПросмотрДокумента","", Кэш);
	Если Не фрм = Ложь Тогда
		фрм.сбисТабличнаяЧастьНоменклатураНачалоВыбора(Кэш, ЭтаФорма, Элемент, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьХарактеристикаНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если Не ЗначениеЗаполнено(сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура) Тогда
		Сообщить("Заполните номенклатуру");
	КонецЕсли;
	
	Если Кэш.Ини.Конфигурация.Свойство("ХарактеристикиНоменклатуры") Тогда
		ИмяСправочникаХарактеристикиНоменклатуры = СокрЛП(Сред(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, Найти(Кэш.Ини.Конфигурация.ХарактеристикиНоменклатуры.Значение, ".")+1));
	Иначе
		ИмяСправочникаХарактеристикиНоменклатуры="ХарактеристикиНоменклатуры";
	КонецЕсли;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Форма = Справочники[ИмяСправочникаХарактеристикиНоменклатуры].ПолучитьФормуВыбора(,Элемент);
		Форма.ПараметрВыборПоВладельцу = сбисЭлементФормы(ЭтаФорма,"ТабличнаяЧасть").ТекущиеДанные.Номенклатура;
    #Иначе
		П = Новый Структура();
		Если Лев(ИмяОтбораХарактеристики,6) = "Отбор." Тогда
			ИмяОтбора = Сред(ИмяОтбораХарактеристики, 7);
			П.Вставить("Отбор", Новый Структура(ИмяОтбора,Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура));
		Иначе
			П.Вставить(ИмяОтбораХарактеристики, Элементы.ТабличнаяЧасть.ТекущиеДанные.Номенклатура);
		КонецЕсли;
		Форма = ПолучитьФорму("Справочник." + ИмяСправочникаХарактеристикиНоменклатуры + ".ФормаВыбора", П, Элемент);
	#КонецЕсли
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьЕдИзмОргНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисТабличнаяЧастьЕдИзмОргНачалоВыбора","ФормаПросмотрДокумента","", Кэш);
	Если Не фрм = Ложь Тогда
		фрм.сбисТабличнаяЧастьЕдИзмОргНачалоВыбора(Кэш, ЭтаФорма, Элемент, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СбисСтрокаТабличнаяЧастьКоэффициентНачалоВыбора(Кэш, Элемент, СтандартнаяОбработка)
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисТабличнаяЧастьКоэффициентНачалоВыбора","ФормаПросмотрДокумента","", Кэш);
	Если Не фрм = Ложь Тогда
		фрм.сбисТабличнаяЧастьЕдИзмОргНачалоВыбора(Кэш, ЭтаФорма, Элемент, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СбисВыбратьПочтовыйЯщик(Кэш, Элемент, ДопПараметры)
	Перем СписокЯщиков, ЭлементВыбораДефолт;
	Отказ = Ложь;
	ИнформацияОКонтрагенте = Кэш.ОбщиеФункции.ПолучитьИнформациюОКонтрагенте(Кэш, СоставПакета.Контрагент, Новый Структура("ДопПоля", "СписокИдентификаторов"), Отказ);
	Если Отказ Тогда
		Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, ИнформацияОКонтрагенте, Новый Структура("ФормаВладелец", ЭтаФорма));
		Возврат;
	КонецЕсли;
	Если	Не	ИнформацияОКонтрагенте.Свойство("Идентификатор", СписокЯщиков)
		Или	Не	ТипЗнч(СписокЯщиков) = Тип("Массив")
		Или		СписокЯщиков.Количество() < 2 Тогда
		Кэш.ГлавноеОкно.СбисСообщитьПользователю(Новый Структура("Текст, ФормаВладелец, ЭлементНазначения", "Указывать абонентский ящик не требуется", ЭтаФорма, "АбонентскийЯщик"), Кэш);
		Возврат;
	КонецЕсли;
	СписокВыбора		= Новый СписокЗначений;
	ЭлементВыбораДефолт = Неопределено;
	Для Каждого ЭлементЯщика Из СписокЯщиков Цикл
		ПредставлениеЯщика =	СтрЗаменить(СтрЗаменить(СтрЗаменить("{оператор}({идентификатор}) - {статус}", 
								"{оператор}", ЭлементЯщика.Оператор.Название), 
											"{идентификатор}", ЭлементЯщика.ИдентификаторУчастника),
														"{статус}", ЭлементЯщика.СостояниеПодключения.Описание);
		
		СписокВыбора.Добавить(ЭлементЯщика.ИдентификаторУчастника, ПредставлениеЯщика);
		Если НРег(ЭлементЯщика.Основной) = "да" Тогда
			ЭлементВыбораДефолт = СписокВыбора.НайтиПоЗначению(ЭлементЯщика.ИдентификаторУчастника);
		КонецЕсли;	
	КонецЦикла;
	СписокВыбора.Добавить("", "Определять автоматически");
	
	ПараметрыВыбораСписка = Новый Структура("Заголовок, Элемент, Обработчик", "Укажите абонентский ящик получателя", ЭлементВыбораДефолт, Кэш.ОбщиеФункции.СбисОписаниеОповещения(Кэш, "СбисВыбратьПочтовыйЯщик_Обработчик", ЭтаФорма, Новый Структура("Кэш", Кэш)));
	Кэш.СБИС.МодульОбъектаКлиент.СбисВыбратьИзСписка(СписокВыбора, ПараметрыВыбораСписка);
КонецПроцедуры

&НаКлиенте
Процедура СбисВыбратьПочтовыйЯщик_Обработчик(РезультатВыбора, ДопПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	АбонентскийЯщик = РезультатВыбора.Представление;
	СоставПакета.Контрагент.Вставить("Идентификатор", РезультатВыбора.Значение);
КонецПроцедуры

&НаКлиенте
Процедура УчетСторонаПриИзменении(Элемент)
	
	Сторона1С = ЭтаФорма[Элемент.Имя];
	Если Не ЗначениеЗаполнено(ДанныеСторон) Тогда
		Возврат;
	ИначеЕсли Элемент.Имя = "УчетОрганизация" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеОрганизации;
	ИначеЕсли Элемент.Имя = "УчетКонтрагент" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеКонтрагента;
	ИначеЕсли Элемент.Имя = "УчетГрузополучатель" Тогда
		СторонаДляИзменения = ДанныеСторон.ДанныеГрузополуателя;
	КонецЕсли;
	
	СторонаДляИзменения.Ссылка = Сторона1С;
	МодульОбъектаКлиент().СохранитьСопосталвниеСторон(Новый Структура("ДанныеСтороны", СторонаДляИзменения), Новый Структура("Кэш", МестныйКэш));
	
КонецПроцедуры

