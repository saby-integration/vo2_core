
&НаКлиенте
Процедура ЗагрузкаВ1С_Начало() Экспорт

	МодульТекущий = МодульОбъектаКлиент();
	
	ДокументРазобранДоЗагрузки = Истина;
	ДокРазобран =	(ДокументУчетаРазобран	И ИмяРеквизитаВложений = "ВложениеУчета")
				Или (ДокументРазобран		И ИмяРеквизитаВложений = "Вложение");
								
	Если Не ДокРазобран Тогда
					
		ДокументРазобранДоЗагрузки = Ложь;
		СбисВыполнитьРазбор();
		КонтентВыборЗакладки("Загрузка");
		
	КонецЕсли;
	
	ОтмеченныеВложенияДляЗагрузки = СписокВложенийДляОперация();
	Если Не ОтмеченныеВложенияДляЗагрузки.Количество() Тогда
		
		МодульТекущий.СбисСообщить("Не отмечены документы для загрузки");
		
	КонецЕсли;
	
	РежимОбработкиНоменклатуры = -1; // автовыбор режима номенклатуры
	
	ПараметрыОбработки		= Новый Структура("СоставПакета, Вложение", СоставПакета, ОтмеченныеВложенияДляЗагрузки);
	ОбработчикВыбора		= МодульТекущий.НовыйСбисОписаниеОповещения("ЗагрузкаВ1С_ВыбранРежимНоменклатуры",	ЭтаФорма, ПараметрыОбработки);
	Если Не СоставПакета.НоменклатураСопоставлена Тогда //Если номенклатура сопоставлена
		
		// Если установлен режим создавать номенклатуру для массовой загрузки, то тут так же применяется
		Если МодульТекущий.ПолучитьЗначениеПараметраСбис("СпособЗагрузки") = 1 Тогда
			
			РежимОбработкиНоменклатуры = 1;
			
		Иначе
			
			ДоступныеРежимыЗагрузки = МодульТекущий.СписокДоступныхСпособовОбработкиНоменклатуры("Диалог");
			МодульТекущий.СбисВыбратьИзСписка(ДоступныеРежимыЗагрузки, Новый Структура("Обработчик, Заголовок", ОбработчикВыбора, "Вариант загрузки документов"));
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(РежимОбработкиНоменклатуры, ОбработчикВыбора); 

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВ1С_ВыбранРежимНоменклатуры(Ответ, ДопПараметры) Экспорт

	Если Ответ = Неопределено Тогда
		
		Возврат;
		
	ИначеЕсли ТипЗнч(Ответ) = Тип("ЭлементСпискаЗначений") Тогда
		
		ВыбранныйРежимЗагрузкиДокумента = Ответ.Значение;
		
	Иначе
		
		ВыбранныйРежимЗагрузкиДокумента = Ответ;
		
	КонецЕсли;
	
	ДопПараметры.Вставить("РежимНоменклатуры", ВыбранныйРежимЗагрузкиДокумента);
	ОбработчикВыбора = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ЗагрузкаВ1С_ВыбранРежимДокумента", ЭтаФорма, ДопПараметры);
	
	РежимОбработкиДокументов	= -1;
	ДопПараметрыПолучить		= Новый ФиксированнаяСтруктура("СоставПакета", ДопПараметры.СоставПакета);
	Для Каждого ВложениеСБИС Из ДопПараметры.Вложение Цикл
		
		ПараметрыВложения = МодульОбъектаКлиент().ВложениеСБИС_Получить(ВложениеСБИС, "Параметры");
		Если Не ПараметрыВложения.МожемЗагрузитьВ1С Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Документы1СВложения	= МодульОбъектаКлиент().ВложениеСБИС_Получить(ВложениеСБИС, "Документы1С");
		ПодходящийДокумент	= МодульОбъектаКлиент().ВложениеСБИС_Получить(ВложениеСБИС, "ПодходящийДокумент", ДопПараметрыПолучить);
		
		Если Не ЗначениеЗаполнено(ПодходящийДокумент) Тогда
			Продолжить;
		КонецЕсли;
		
		// Подобранный документ есть в списке сохранённых документов 1С Вложения.
		ДокументСопоставлен = Не Документы1СВложения.НайтиПоЗначению(ПодходящийДокумент) = Неопределено;
		
		Если ДокументСопоставлен Тогда
			
			РежимыОбработкиДокументов = МодульОбъектаКлиент().СписокДоступныхСпособовОбработкиДокументов("Диалог");
			МодульОбъектаКлиент().СбисПоказатьВопрос(ОбработчикВыбора,     
													"Есть существующие документы. Выберите вариант загрузки.",
													РежимыОбработкиДокументов);
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
	МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(РежимОбработкиДокументов, ОбработчикВыбора); 
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаВ1С_ВыбранРежимДокумента(Ответ, ДопПараметры) Экспорт

	Если Ответ = Неопределено Тогда
		
		Возврат;
		
	ИначеЕсли ТипЗнч(Ответ) = Тип("ЭлементСпискаЗначений") Тогда
		
		ВыбранныйРежимЗагрузкиДокумента = Ответ.Значение;
		
	Иначе
		
		ВыбранныйРежимЗагрузкиДокумента = Ответ;
		
	КонецЕсли;
	
	Если ВыбранныйРежимЗагрузкиДокумента = 2 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ДопПараметры.Вставить("РежимДокументов", ВыбранныйРежимЗагрузкиДокумента);
	
	Если	ВыбранныйРежимЗагрузкиДокумента = 1 Тогда
		// костыль для пересоздания документов
		Для Каждого ВложениеТчОтмечено Из ДопПараметры.Вложение Цикл
			
			РедактируемыеПоляВложения	= МодульОбъектаКлиент().ВложениеСБИС_Получить(ВложениеТчОтмечено, "Поля1С");
			Если		РедактируемыеПоляВложения = Неопределено
				Или	Не	РедактируемыеПоляВложения.Свойство("Документ")
				Или		РедактируемыеПоляВложения.Документ = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ВложениеТчОтмечено.Параметры.РедактируемыеПоля.Документ.Значение = Неопределено;
			
		КонецЦикла;
	КонецЕсли;
	ПараметрыЗагрузки	= Новый Структура("РежимДокументов, РежимНоменклатуры", ВыбранныйРежимЗагрузкиДокумента, ДопПараметры.РежимНоменклатуры);
	ПараметрыОбработки	= Новый Структура();
	
	ОбработчикРезультат = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ЗагрузкаВ1С_ОбработатьРезультат", ЭтаФорма, ПараметрыОбработки);
	
	ДопПараметрыСоздатьПерезаполнить = Новый Структура();
	ДопПараметрыСоздатьПерезаполнить.Вставить("ОбработчикРезультата",	ОбработчикРезультат);
	ДопПараметрыСоздатьПерезаполнить.Вставить("ВыполнитьОбработчик",	Истина);
	ДопПараметрыСоздатьПерезаполнить.Вставить("ИскатьДокумент1С",		Ложь);
	ДопПараметрыСоздатьПерезаполнить.Вставить("СохранитьСопоставление",	Ложь);

	ПодготовленныеПараметрыКонтекста = ПараметрыДляФормированияКонтекста(МестныйКэш);

	ПараметрыФормированияКонтекста = Новый Структура;
	ПараметрыФормированияКонтекста.Вставить("СоставПакета",						ДопПараметры.СоставПакета); 
	ПараметрыФормированияКонтекста.Вставить("ПодготовленныеПараметрыКонтекста", ПодготовленныеПараметрыКонтекста); 
	ПараметрыФормированияКонтекста.Вставить("Вложение",							Неопределено);  
	ПараметрыФормированияКонтекста.Вставить("ЗаменятьЗаполненныеПараметры",		Истина);  
	
	МодульОбъектаКлиент().СФормироватьВходящийКонтекстНаВложении(ПараметрыФормированияКонтекста);
	
	ПараметрыРезультатаДействия = Новый Структура("ПредставлениеОперации, ФормаВызова, ПрикладнаяСтатистика",
		"ЗагрузкаДокумента",
		"ФормаПросмотрДокумента",
		МодульОбъектаКлиент().НовыйПрикладнаяСтатистика());
	РезультатДействия = МестныйКэш.ОбщиеФункции.РезультатДействия_Получить(МестныйКэш, ПараметрыРезультатаДействия, Истина);
	РезультатДействия.Параметры.Вставить("РежимДокументов", ВыбранныйРежимЗагрузкиДокумента);
	МестныйКэш.ОбщиеФункции.СоздатьПерезаполнитьДокументы(МестныйКэш, СоставПакета, ТаблицаДокументов, ПараметрыЗагрузки, ДопПараметрыСоздатьПерезаполнить);
	
КонецПроцедуры
	
&НаКлиенте
Функция ЗагрузкаВ1С_ОбработатьРезультат(РезультатЗагрузки, ДополнительныеПараметры) Экспорт
		
	Если РезультатЗагрузки = Неопределено Тогда
		//В процессе был диалог, а значит для УФ с результатом попадём уже после выбора и последующей обработки. Для ОФ уже попадали
		Возврат Неопределено;
	КонецЕсли;
	
	//Заполняем данные формы в зависимости от результата.
	Для Каждого КлючИЗначение Из РезультатЗагрузки.Ошибки.ДетализацияОшибок Цикл
		Для Каждого СтрокаДетализации Из КлючИЗначение.Значение Цикл
			Если Найти(СтрокаДетализации.Сообщение, "Автоматическое создание номенклатуры при загрузке не поддерживается для Вашей конфигурации") Тогда
				КонтентВыборЗакладки("Загрузка");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Для Каждого КлючИЗначение Из РезультатЗагрузки.Действие.ДетализацияВыполнено Цикл
		Для Каждого СтрокаДетализации Из КлючИЗначение.Значение Цикл
			Для Каждого СтрокаРасшифровки Из СтрокаДетализации.ОбработаныОбъекты1С Цикл
				Если Не СтрокаРасшифровки.Свойство("СтруктураДокумента1С") Тогда
					Продолжить;
				КонецЕсли;
				ОбновлятьГлавноеОкно = Истина;
				ЗаполнитьДокумент1СВСоставеПакета(СтрокаДетализации.ИдентификаторВложения, СтрокаРасшифровки.Ссылка, СтрокаРасшифровки.СтруктураДокумента1С);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ОбновитьПоляФормыПоДокументуСБИС(СоставПакета);
	
	АктивноеВложениеСбис = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма,"ТаблицаДокументов").ТекущиеДанные.Вложение[0].Значение;
	ОбновитьПоляФормыПоВложениюСБИС(АктивноеВложениеСбис);
	
	ПараметрыСообщить = Новый Структура("СообщитьНеВыполнено", Ложь);
	МестныйКэш.ОбщиеФункции.РезультатДействия_СообщитьРезультат(РезультатЗагрузки, ПараметрыСообщить);
	
КонецФункции

