
&НаКлиенте
Процедура СбисУстановитьФорму(ПараметрыОткрытия)
    Перем ИмяЗакладкиУстановить;
	
	Если Не ПараметрыОткрытия = Неопределено Тогда
		
		ПараметрыОткрытия.Свойство("ВариантФильтра", ИмяЗакладкиУстановить);
		
	КонецЕсли;
	
	Если ИмяЗакладкиУстановить = Неопределено Тогда
		
		ИмяЗакладкиУстановить = ВладелецФормы.НазваниеКратко();
		
	КонецЕсли;
	
	ПанельУстановки		= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, 		"ВариантыФильтров");
	СтраницаУстановить	= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ПанельУстановки,	ИмяЗакладкиУстановить);

	ПанельУстановки.ТекущаяСтраница = СтраницаУстановить;
	
	Если		ИмяЗакладкиУстановить = "ФормаСопоставитьСДокументами1С" Тогда
		
		СбисУстановитьФорму_ФормаСопоставитьСДокументами1С(ПараметрыОткрытия);
		
	ИначеЕсли   ИмяЗакладкиУстановить = "ФормаГлавноеОкноНоменклатура" Тогда
		
		СбисУстановитьФорму_ФормаГлавноеОкноНоменклатура(ПараметрыОткрытия);
		
	Иначе
		
		СбисУстановитьФорму_ФормаГлавноеОкно(ПараметрыОткрытия);
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СбисУстановитьФорму_ФормаГлавноеОкноНоменклатура(ПараметрыОткрытия)
	
	ПараметрПроизвольныйФильтр1 = ВладелецФормы.ФильтрНаименованиеНоменклатуры;	
	ПараметрПроизвольныйФильтр2 = ВладелецФормы.ФильтрНоменклатура1С;	
	ПараметрПроизвольныйФильтр3 = ВладелецФормы.ФильтрGTIN;	
	ПараметрПроизвольныйФильтр4 = ВладелецФормы.ФильтрКодКонтрагента;	
	
	ФильтрУстановитьВидимость_ТочкаВхода();
	
КонецПроцедуры

&НаКлиенте
Процедура СбисУстановитьФорму_ФормаГлавноеОкно(ПараметрыОткрытия)
	
	МодульОбработки = МодульОбъектаКлиент();
	
	ФильтрыОтВладельцаИспользуются = "ФильтрДатаНач, ФильтрДатаКнц, ФильтрСостояние, ФильтрТипыДокументов, ФильтрКонтрагент,
	| ФильтрКонтрагентПодключен, ФильтрКонтрагентСФилиалами, ФильтрОрганизация, ФильтрОтветственный, ФильтрМаска";
	
	ЭлементФильтрТипыДокументов = МодульОбработки.ПолучитьЭлементФормыОбработки(ЭтаФорма, "ФильтрТипыДокументов");
	ЭлементФильтрТипыДокументов.СписокВыбора.Очистить();

	ЭлементФильтрСостояния = МодульОбработки.ПолучитьЭлементФормыОбработки(ЭтаФорма, "ФильтрСостояние");
	ЭлементФильтрСостояния.СписокВыбора.ЗагрузитьЗначения(ВладелецФормы.СписокСостояний.ВыгрузитьЗначения());
	
	Для Каждого ЭлементСписка Из МодульОбработки.ФильтрТипыДокументовСписок() Цикл
		
		ЭлементФильтрТипыДокументов.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		
	КонецЦикла;
	
	Если Не ВладелецФормы.ФильтрПериод = Неопределено Тогда
			
		ФильтрПериод = ВладелецФормы.ФильтрПериод;
		
	КонецЕсли;
	
	//По умолчанию устанавливаем видимость для полей Контрагент,Состояние,Организация
	ПутьЭлементов = "ВариантыФильтров." + ИмяТекущегоВариантаФильтра() + ".";
	
	ЭлементФильтрКонтрагент		= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, ПутьЭлементов + "КонтрагентГруппа.ФильтрКонтрагент");
	ЭлементФильтрОрганизация	= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, ПутьЭлементов + "ФильтрОрганизация");
	ЭлементФильтрОтветственный	= МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, ПутьЭлементов + "ФильтрОтветственный");

	ФильтрУстановитьТипыПолей_ПривестиПоле(ЭлементФильтрКонтрагент,		"ФильтрКонтрагент"); 
	ФильтрУстановитьТипыПолей_ПривестиПоле(ЭлементФильтрОрганизация,	"ФильтрОрганизация");
	ФильтрУстановитьТипыПолей_ПривестиПоле(ЭлементФильтрОтветственный,	"ФильтрОтветственный");
	
	ФильтрУстановитьВидимость(ИмяТекущегоВариантаФильтра());
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ВладелецФормы, ФильтрыОтВладельцаИспользуются);
	
КонецПроцедуры

&НаКлиенте
Процедура СбисУстановитьФорму_ФормаСопоставитьСДокументами1С(ПараметрыОткрытия)
	
	ФильтрыИспользуются	= "ФильтрДатаНач, ФильтрДатаКнц, ФильтрПериод";
	ЗначенияФильтров	= ПараметрыОткрытия.Фильтры;
	
	Если ЗначенияФильтров.ФильтрСтатусСопоставления = Неопределено Тогда
		
		ПараметрПроизвольныйФильтр1 = "";
		
	Иначе
		
		ПараметрПроизвольныйФильтр1 = ЗначенияФильтров.ФильтрСтатусСопоставления;
		
	КонецЕсли;
	
	Если ЗначенияФильтров.ФильтрДельта = Неопределено Тогда
		
		ПараметрПроизвольныйФильтр2 = "";
		
	Иначе
		
		ПараметрПроизвольныйФильтр2 = ЗначенияФильтров.ФильтрДельта;
		
	КонецЕсли;

	ФильтрМаска = ЗначенияФильтров.ФильтрНомер;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗначенияФильтров, ФильтрыИспользуются);
	
	ФильтрУстановитьВидимость(ИмяТекущегоВариантаФильтра());
		
КонецПроцедуры	

