
&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОбработчикЗавершения = МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ПослеЗакрытия", ЭтаФорма);
	НовыйОтложенноеДействие = МодульОбъектаКлиент().НовыйОтложенноеДействие(Новый Структура("ОписаниеОповещения", ОбработчикЗавершения));
	МодульОбъектаКлиент().ПодключитьОтложенноеДействие(НовыйОтложенноеДействие);
	
КонецПроцедуры

// Процедура - после закрытия почистить форму
//
// Параметры:
//  Аргумент	 - 	 - 
//  ДопПараметры - 	 - 
//
&НаКлиенте
Процедура ПослеЗакрытия(Аргумент=Неопределено, ДопПараметры=Неопределено) Экспорт
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//Вызвать описание оповещения о закрытии вручную.
		Если Не ОписаниеОповещенияОЗакрытии = Неопределено Тогда
			МодульОбъектаКлиент().ВыполнитьСбисОписаниеОповещения(ПараметрыФормы.Результат, ОписаниеОповещенияОЗакрытии);
		КонецЕсли;
	#КонецЕсли
	
	ПараметрыФормы									= Неопределено;
	ОписаниеОповещенияОЗакрытии						= Неопределено;
	ДокументДанные									= Неопределено;
	Контрагент										= Неопределено;
	ОбогащенныеДанныеНоменклатурыДляСопоставления	= Неопределено;
	ХарактеристикиИспользуютсяВДокументе			= Ложь;
	КнопкаЗаписатьНажата							= Ложь;
	ИдентификаторДокумента							= Неопределено;
	ПараметрыРасхождения							= Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьСопоставленияИПоложитьВДокументДанные() 
	
	ДанныеНоменклатурДляЗаписиСопоставлений = Новый Массив;
	
	Для Каждого СтрСопоставления Из ОбогащенныеДанныеНоменклатурыДляСопоставления Цикл
		
		СтрокаВТаблице = ТаблицаСопоставлений.НайтиСтроки(Новый Структура("ИдСтроки", СтрСопоставления.ИдСтроки))[0];
		
		Если Не ЗначениеЗаполнено(СтрокаВТаблице.НоменклатураСБИС) Тогда
			// Если не заполнено основное поле - выгружаем, как есть
			Продолжить;
		КонецЕсли;
		
		Если СтрокаВТаблице.СтрокаИзменена Тогда
			// Если строка изменена, добавляем строку сопоставления для записи, дополняя ее измененными данными
			ОбновитьСтрокуСопоставленияПоСтрокеТаблицы(СтрСопоставления, СтрокаВТаблице);
			СтрСопоставления.Вставить("НеобходимоСопоставление", Истина);
			ДанныеНоменклатурДляЗаписиСопоставлений.Добавить(СтрСопоставления);
		КонецЕсли;
		
		// Обновим данные по строке в ДокументДанные
		МассивИдСтроки = Кэш.ОбщиеФункции.РазбитьСтрокуВМассивНаКлиенте(СтрСопоставления.ИдСтроки);
		СтрокаДокумента1С = ДокументДанные.мФайл[МассивИдСтроки[0]][МассивИдСтроки[1]][МассивИдСтроки[2]][Число(МассивИдСтроки[3])];
		
		СтрокаДокумента1С.ТаблДок_Название	= СтрокаВТаблице.НоменклатураСБИС;
		СтрокаДокумента1С.ТаблДок_Кол_во	= Формат(СтрокаВТаблице.КоличествоПересчитанное, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000");
		СтрокаДокумента1С.Цена				= СтрокаВТаблице.ЦенаПересчитанная;
		
		Если СтрокаДокумента1С.Свойство("ТаблДок_GTIN")
				И ЗначениеЗаполнено(СтрокаВТаблице.GTIN_СБИС) Тогда
			СтрокаДокумента1С.ТаблДок_GTIN = СтрокаВТаблице.GTIN_СБИС;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВТаблице.НаименованиеЕдиницыСБИС) Тогда
			СтрокаДокумента1С.ТаблДок_ЕдИзм		= СтрокаВТаблице.НаименованиеЕдиницыСБИС;
			Если ЗначениеЗаполнено(СтрокаВТаблице.ОКЕИ_ЕдиницыСБИС) Тогда
				СтрокаДокумента1С.ТаблДок_ОКЕИ	= СтрокаВТаблице.ОКЕИ_ЕдиницыСБИС;
			Иначе
				// Неформализированная упаковка
				СтрокаДокумента1С.ТаблДок_ОКЕИ	= "0000";
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВТаблице.КодСБИС) Тогда
			СтрокаДокумента1С.Вставить("ТаблДок_" + СтрокаВТаблице.ТипКодаСБИС, СтрокаВТаблице.КодСБИС);
			//Заполним Идентификатор, что бы потом не было расхождений с чем сравниваем                  
			СтрокаДокумента1С.Вставить("ТаблДок_Идентификатор", СтрокаВТаблице.КодСБИС);
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаВТаблице.GTIN_СБИС) Тогда
			СтрокаДокумента1С.Вставить("ТаблДок_GTIN", СтрокаВТаблице.GTIN_СБИС);
		КонецЕсли;
		
		Если СтрокаДокумента1С.Свойство("мПараметр") Тогда
			Если ЗначениеЗаполнено(СтрокаВТаблице.КодСБИС)
					И СтрокаДокумента1С.мПараметр.Свойство(СтрокаВТаблице.ТипКодаСБИС) Тогда
				СтрокаДокумента1С.мПараметр[СтрокаВТаблице.ТипКодаСБИС].Параметр_Значение = СтрокаВТаблице.КодСБИС;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВТаблице.GTIN_СБИС)
					И СтрокаДокумента1С.мПараметр.Свойство("GTIN") Тогда
				СтрокаДокумента1С.мПараметр["GTIN"].Параметр_Значение = СтрокаВТаблице.GTIN_СБИС;
			КонецЕсли;
		КонецЕсли;
		                                                                                                
	КонецЦикла;
	
	Если ДанныеНоменклатурДляЗаписиСопоставлений.Количество() Тогда

		ФормаРаботыСНоменклатурой = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("МодульСопоставлениеНоменклатуры");
		
		ПараметрыДляЗаписиСопоставений = Новый Структура("Контрагент, Номенклатура", Контрагент, ДанныеНоменклатурДляЗаписиСопоставлений, Истина);
		ФормаРаботыСНоменклатурой.НоменклатураПоставщика_МассовоеОбновление(ПараметрыДляЗаписиСопоставений, Новый Структура("Кэш", Кэш));

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтрокуСопоставленияПоСтрокеТаблицы(СтрокаСопоставления, СтрокаВТаблице)
	
	НоменклатураСБИС = СтрокаСопоставления.НоменклатураСБИС;
	
	НоменклатураСБИС.Наименование	= СтрокаВТаблице.НоменклатураСБИС;
	НоменклатураСБИС.Код			= СтрокаВТаблице.КодСБИС;
	НоменклатураСБИС.ТипКода		= СтрокаВТаблице.ТипКодаСБИС;
	НоменклатураСБИС.GTIN			= СтрокаВТаблице.GTIN_СБИС;
	
	Если НоменклатураСБИС.Единицы.Количество() Тогда
		Для Каждого ЕдиницаСБИС Из НоменклатураСБИС.Единицы Цикл
			ЕдиницаСБИС = ЕдиницаСБИС.Значение;
			Прервать;
		КонецЦикла;
	Иначе
		ЕдиницаСБИС = МодульОбъектаКлиент().НовыйСопоставлениеДляЕдиницыКлиент();
	КонецЕсли;
	
	ЕдиницаСБИС.Название	= СтрокаВТаблице.НаименованиеЕдиницыСБИС;
	ЕдиницаСБИС.ОКЕИ		= СтрокаВТаблице.ОКЕИ_ЕдиницыСБИС;
	ЕдиницаСБИС.Коэффициент	= СтрокаВТаблице.КоэффициентСБИС;
	
	МодульОбъектаКлиент().СтрокаСопоставленияСБИСКлиент_Вставить(СтрокаСопоставления, "Единица", ЕдиницаСБИС);
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаТЧПриИзменении(Элемент)
	
	ТекущиеДанные = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ТаблицаСопоставлений").ТекущиеДанные;
	
	ТекущиеДанные.СтрокаИзменена = Истина;
	
	Если Элемент.Имя = "ТаблицаСопоставленийКоличествоПересчитанное" Тогда
		ПересчитатьСтрокуПоКоличеству(ТекущиеДанные);
	ИначеЕсли Элемент.Имя = "ТаблицаСопоставленийКоэффициент1СкСБИС" Тогда
		ПересчитатьСтрокуПоКоэффициентуСБИСк1С(ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокуПоКоличеству(ТекущиеДанные)
	
	ТекущиеДанные.Коэффициент1СкСБИС	= ТекущиеДанные.КоличествоПересчитанное / ТекущиеДанные.КоличествоВДокументе1С;
	ТекущиеДанные.ЦенаПересчитанная 	= ТекущиеДанные.ЦенаВДокументе1С * ТекущиеДанные.Коэффициент1СкСБИС;
	ТекущиеДанные.Коэффициент1С			= ТекущиеДанные.Коэффициент1СкСБИС;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокуПоКоэффициентуСБИСк1С(ТекущиеДанные)
	
	ТекущиеДанные.КоличествоПересчитанное	= ТекущиеДанные.КоличествоВДокументе1С / ТекущиеДанные.Коэффициент1СкСБИС;
	ТекущиеДанные.ЦенаПересчитанная 		= ТекущиеДанные.ЦенаВДокументе1С * ТекущиеДанные.Коэффициент1СкСБИС;
	ТекущиеДанные.Коэффициент1С				= ТекущиеДанные.Коэффициент1СкСБИС;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийНоменклатураКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ТаблицаСопоставлений").ТекущиеДанные;
	ТекущиеДанные.НоменклатураСБИСЗначение = ВыбранноеЗначение; 
	ТекущиеДанные.НоменклатураСБИС = ВыбранноеЗначение.Название;
	ТекущиеДанные.НаименованиеЕдиницыСБИС = ВыбранноеЗначение.ЕдИзм;
	ТекущиеДанные.ОКЕИ_ЕдиницыСБИС = ВыбранноеЗначение.ОКЕИ;
	ТекущиеДанные.ТипКодаСБИС = "КодПокупателя";
	ТекущиеДанные.КодСБИС = ВыбранноеЗначение.КодПокупателя;   
	
	Если ВыбранноеЗначение.Свойство("GTIN") Тогда
		ТекущиеДанные.GTIN_СБИС = ВыбранноеЗначение.GTIN;    
	КонецЕсли;
	
	МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ТаблицаСопоставлений").ТекущийЭлемент = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ТаблицаСопоставленийТипКодаСБИС");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаСопоставленийТипКодаСБИСОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекущиеДанные = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, "ТаблицаСопоставлений").ТекущиеДанные;
	Значение = ТекущиеДанные.НоменклатураСБИСЗначение;
	
	Если Значение.Свойство(ВыбранноеЗначение) Тогда
		Значение.Свойство(ВыбранноеЗначение, ТекущиеДанные.КодСБИС)
	Иначе
		ТекущиеДанные.КодСБИС = "";
	КонецЕсли;  
	
КонецПроцедуры


