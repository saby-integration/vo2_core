&НаКлиенте
Функция сбисЗаполнитьЗаголовкиФормы()
	
	ЭлементыДляОбновления = Новый Массив;
	ПараметрыОбновления = Новый Структура;
	
	Если РезультатОтправки.Свойство("ЗаголовкиФормыРезультатов") Тогда
		ЭтаФорма.Заголовок = РезультатОтправки.ЗаголовкиФормыРезультатов.Форма;
		
		ЭлементыДляОбновления.Добавить("Отправлено");
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ПоложительныйРезультат);
		
		ЭлементыДляОбновления[0] = "Неотправлено";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ОтрицательныйРезультат);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокДокументы1С";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.Объект1С);

		ЭлементыДляОбновления[0] = "НадписьТиповыеОшибки";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ТиповыеОшибки);
		
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);

		ЭлементыДляОбновления[0] = "ТипыОшибокКонтекстноеОткрытьДокументОнлайн";
		ПараметрыОбновления.Очистить();
		ПараметрыОбновления.Вставить("Видимость", Ложь);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
	Иначе
		ЭтаФорма.Заголовок = "Результат отправки документов";
		
		ЭлементыДляОбновления.Добавить("Отправлено");
		ПараметрыОбновления.Вставить("Заголовок", "Отправлено");
		
		ЭлементыДляОбновления[0] = "Неотправлено";
		ПараметрыОбновления.Вставить("Заголовок", "Не отправлено");
		
		ЭлементыДляОбновления[0] = "ТипыОшибокДокументы1С";
		ПараметрыОбновления.Вставить("Заголовок", "Документ 1С");
		
		ЭлементыДляОбновления[0] = "НадписьТиповыеОшибки";
		ПараметрыОбновления.Вставить("Заголовок", "Смотреть типовые ошибки отправки и их решение");
		
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокКонтекстноеОткрытьДокументОнлайн";
		ПараметрыОбновления.Очистить();
		ПараметрыОбновления.Вставить("Видимость", Ложь);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
	КонецЕсли
КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеHTMLОшибкиФЛК(ДокументСБИС)
		
	ИДВложений = Новый Массив;
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		Если ЭлементСоответствия <> Неопределено Тогда
			Для Каждого Документ Из ЭлементСоответствия Цикл
				Если Документ.ДокументСБИС = ДокументСБИС Тогда 
					ИДПакета = Документ.ИДПакета;
					Для Каждого Вложение Из ЭлементСоответствия Цикл
						ВложениеУжеВСписке = НЕ (ИДВложений.Найти(Вложение.ИДВложения) = Неопределено); 
						Если НЕ ВложениеУжеВСписке И Вложение.ДокументСБИС = ДокументСБИС Тогда
							ИДВложений.Добавить(Вложение.ИДВложения); 
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		
	КонецЦикла;	
	
	Если НЕ ИдВложений.Количество() Тогда
		Возврат Неопределено;
	КонецЕсли;       
	
	ТекстОшибки = "";
		
	Для Каждого ИДВложения Из ИДВложений Цикл
		 
		Попытка
			РезультатВызова = МодульОбъектаКлиент().ПолучитьПротоколПроверкиВложения(Новый Структура("ИДПакета, ИдРодителя, ИмяРодителя", ИДПакета, ИДВложения, "Документ"));
		Исключение
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнформацияОбОшибке(), "ПолучитьПредставлениеHTMLОшибкиФЛК"); 
			ПредставлениеОшибкиФЛК = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "HTMLПредставлениеОшибкиФЛК");
			ПредставлениеОшибкиФЛК.Видимость = Ложь;
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				HTMLПредставлениеОшибкиФЛК.УстановитьТекст("");	
			#Иначе
				HTMLПредставлениеОшибкиФЛК = Неопределено;	
			#КонецЕсли
		КонецПопытки;
		
		ТекстОшибки = ТекстОшибки + РезультатВызова;
	КонецЦикла;
	
	Возврат ТекстОшибки; 
	
КонецФункции 

// Процедура - Обработать список вложений с ошибками ФЛК
// Просматриваем все вложения с ошибкой ФЛК (код 729) и удаляем их из списка для формирования дерева ошибок
&НаКлиенте
Процедура ОбработатьСписокВложенийСОшибкамиФЛК()
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		
		ИндексыУдаляемыхВложений = Новый Массив;
		ИндексВложения = 0;
		
		Если ЭлементСоответствия <> Неопределено Тогда
			
			Для Каждого СтруктураДанныхОшибки Из ЭлементСоответствия Цикл
				
				ИндексВложения = ИндексВложения + 1;
				
				Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
					СоставПакета = МестныйКэш.Интеграция.ПрочитатьДокумент(МестныйКэш, СтруктураДанныхОшибки.ИДПакета);
					
					Для Каждого Вложение Из СоставПакета.Вложение Цикл
						
						Если Вложение.Идентификатор = СтруктураДанныхОшибки.ИДВложения
							И Вложение.КоличествоОшибок = 0 Тогда
							
							ИндексыУдаляемыхВложений.Добавить(ИндексВложения);
							
						КонецЕсли;
						
					КонецЦикла;
					
					Если СоставПакета.Свойство("ВложениеУчета") Тогда
						Для Каждого ВложениеУчета ИЗ СоставПакета.ВложениеУчета Цикл
							
							Если ВложениеУчета.Идентификатор = СтруктураДанныхОшибки.ИДВложения
								И ВложениеУчета.КоличествоОшибок = 0 Тогда
								
								ИндексыУдаляемыхВложений.Добавить(ИндексВложения);
								
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
				КонецЕсли; 
				
			КонецЦикла;
			
			Для Каждого ИндексВложения Из ИндексыУдаляемыхВложений Цикл
				ЭлементСоответствия.Удалить(ИндексВложения);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДеревоОшибокЛегаси(РезультатОтправки)
	// Знаю, что не нужно пользоваться инструкциями препроцессора, но пока пусть будет так - быстро нужно отдать тестированию, потом перепилю нормально (с) Сычев
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
		ДеревоОшибок = РеквизитФормыВЗначение("ТипыОшибок");
		ДеревоОшибок.Строки.Очистить();
		
		Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
			НоваяСтрока = ДеревоОшибок.Строки.Добавить();            
			НоваяСтрока.ТекстОшибки = Элемент.Значение;            
			НоваяСтрока.Количество = Элемент.Представление;
			
			//AU изменена структура в детализации ошибок для возможности проброса дампа в сервис статистики
			ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
			Если ЭлементСоответствия<>Неопределено Тогда
				Для Каждого Документ1С Из ЭлементСоответствия Цикл
					НоваяПодСтрока = НоваяСтрока.Строки.Добавить();            
					НоваяПодСтрока.Документ1С = Документ1С.ОбработанДокумент1С; 
					НоваяПодСтрока.ТекстОшибки = Документ1С.Сообщение;
				КонецЦикла;
			КонецЕсли
		КонецЦикла;	
		ЗначениеВРеквизитФормы(ДеревоОшибок, "ТипыОшибок");
	#Иначе
		ТипыОшибок.Строки.Очистить();
		
		Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
			НоваяСтрока = ТипыОшибок.Строки.Добавить();            
			НоваяСтрока.ТекстОшибки = Элемент.Значение;            
			НоваяСтрока.Количество = Элемент.Представление;
			
			//AU изменена структура в детализации ошибок для возможности проброса дампа в сервис статистики
			ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
			Если ЭлементСоответствия<>Неопределено Тогда
				Для Каждого Документ1С Из ЭлементСоответствия Цикл
					НоваяПодСтрока = НоваяСтрока.Строки.Добавить();            
					НоваяПодСтрока.Документ1С = Документ1С.ОбработанДокумент1С; 
					НоваяПодСтрока.ТекстОшибки = Документ1С.Сообщение;
				КонецЦикла;
			КонецЕсли
		КонецЦикла;	
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоОшибок(РезультатОтправки)
	// Знаю, что не нужно пользоваться инструкциями препроцессора, но пока пусть будет так - быстро нужно отдать тестированию, потом перепилю нормально (с) Сычев
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда	
		ДеревоОшибок = РеквизитФормыВЗначение("ТипыОшибок");
		ДеревоОшибок.Строки.Очистить();
		
		Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
			
			ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
			
			Если ЭлементСоответствия <> Неопределено Тогда
				Для Каждого СтруктураДанныхОшибки Из ЭлементСоответствия Цикл
					
					СуществующаяСтрокаСДокументомСБИС = ДеревоОшибок.Строки.Найти(СтруктураДанныхОшибки.ДокументСБИС, "ДокументСБИС", Ложь);
					Если СуществующаяСтрокаСДокументомСБИС <> Неопределено Тогда
						
						Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
							СтруктураДанныхОшибки.Сообщение = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
						КонецЕсли;  
						
						Если СуществующаяСтрокаСДокументомСБИС.Строки.Найти(СтруктураДанныхОшибки.Сообщение, "ТекстОшибки") = Неопределено Тогда 
							ОшибкаЭлемент = СуществующаяСтрокаСДокументомСБИС.Строки.Добавить();
							ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
						КонецЕсли;
						
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания = ОшибкаЭлемент.Документы1СНазвания + ";" + СтруктураДанныхОшибки.ОбработанДокумент1С; 
					Иначе
						
						ДокументСБИСЭлемент = ДеревоОшибок.Строки.Добавить();            
						ДокументСБИСЭлемент.ТекстОшибки = СтруктураДанныхОшибки.ДокументСБИС; 
						ДокументСБИСЭлемент.ДокументСБИС  = СтруктураДанныхОшибки.ДокументСБИС;
						ДокументСБИСЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
						
						ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();
						
						Если ДокументСБИСЭлемент.КодОшибки = "729" Тогда
							ОшибкаЭлемент.ТекстОшибки = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
							ОшибкаЭлемент.ДокументСБИС = СтруктураДанныхОшибки.ДокументСБИС; 
							ОшибкаЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
						Иначе
							ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
						КонецЕсли;
						
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания = СтруктураДанныхОшибки.ОбработанДокумент1С;
					КонецЕсли;
					
				КонецЦикла;	
				
			Иначе
				
				ДокументСБИСЭлемент = ДеревоОшибок.Строки.Добавить();
				ДокументСБИСЭлемент.ДокументСБИС = "Документ для ошибки не определён";
				ДокументСБИСЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
				
				ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();            
				
				ОшибкаЭлемент.ТекстОшибки = Элемент.Значение;
				ОшибкаЭлемент.Количество  = Элемент.Представление;
				
			КонецЕсли;
		КонецЦикла;	 
		
		ЗначениеВРеквизитФормы(ДеревоОшибок, "ТипыОшибок");
	#Иначе
		ТипыОшибок.Строки.Очистить();
		
		Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
			
			ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
			
			Если ЭлементСоответствия <> Неопределено Тогда
				Для Каждого СтруктураДанныхОшибки Из ЭлементСоответствия Цикл
					
					СуществующаяСтрокаСДокументомСБИС = ТипыОшибок.Строки.Найти(СтруктураДанныхОшибки.ДокументСБИС, "ДокументСБИС", Ложь);
					Если СуществующаяСтрокаСДокументомСБИС <> Неопределено Тогда
						
						Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
							СтруктураДанныхОшибки.Сообщение = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
						КонецЕсли;  
						
						Если СуществующаяСтрокаСДокументомСБИС.Строки.Найти(СтруктураДанныхОшибки.Сообщение, "ТекстОшибки") = Неопределено Тогда 
							ОшибкаЭлемент = СуществующаяСтрокаСДокументомСБИС.Строки.Добавить();
							ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
						КонецЕсли;
						
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания = ОшибкаЭлемент.Документы1СНазвания + ";" + СтруктураДанныхОшибки.ОбработанДокумент1С; 
					Иначе
						
						ДокументСБИСЭлемент = ТипыОшибок.Строки.Добавить();            
						ДокументСБИСЭлемент.ТекстОшибки = СтруктураДанныхОшибки.ДокументСБИС; 
						ДокументСБИСЭлемент.ДокументСБИС  = СтруктураДанныхОшибки.ДокументСБИС;
						ДокументСБИСЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
						
						ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();
						
						Если ДокументСБИСЭлемент.КодОшибки = "729" Тогда
							ОшибкаЭлемент.ТекстОшибки = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
							ОшибкаЭлемент.ДокументСБИС = СтруктураДанныхОшибки.ДокументСБИС; 
							ОшибкаЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
						Иначе
							ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
						КонецЕсли;
						
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания = СтруктураДанныхОшибки.ОбработанДокумент1С;
					КонецЕсли;
					
				КонецЦикла;	
				
			Иначе
				
				ДокументСБИСЭлемент = ТипыОшибок.Строки.Добавить();
				ДокументСБИСЭлемент.ДокументСБИС = "Документ для ошибки не определён";
				ДокументСБИСЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
				
				ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();            
				
				ОшибкаЭлемент.ТекстОшибки = Элемент.Значение;            
				ОшибкаЭлемент.Количество  = Элемент.Представление;
				
			КонецЕсли;
		КонецЦикла;	 
	#КонецЕсли
	
КонецПроцедуры

// Процедура - Обновить настройки элементов формы
//
// Параметры:
//  СписокЭлементов		 - Массив - Содержит строки с именами элементов формы, которые нужно настроить 
//  ПараметрыНастройки	 - 	Структура 	 - Параметры, которые будут установлены элементу (доступность, видимость и т.п.)
//
//			Настройка 	 -	Строка	  	 - Имя настройки элемента 
//			Значение 	 -	Произвольный - Устанавливаемое значение. Проверок на установку недопустимого значения нет, остаётся на совести программиста
//
&НаКлиенте
Процедура ОбновитьНастройкиЭлементовФормы(СписокЭлементов, ПараметрыНастройки)
	
	ЭлементыДляИзменения = Новый Массив;
	
	Для Каждого ИмяЭлемента Из СписокЭлементов Цикл
		
		ЭлементФормы = МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ЭтаФорма, ИмяЭлемента);
		
		Если НЕ ЭлементФормы = Неопределено Тогда
			ЭлементыДляИзменения.Добавить(ЭлементФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент Из ЭлементыДляИзменения Цикл
		Для Каждого Параметр Из ПараметрыНастройки Цикл
			Попытка
				Элемент[Параметр.Ключ] = Параметр.Значение;
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

