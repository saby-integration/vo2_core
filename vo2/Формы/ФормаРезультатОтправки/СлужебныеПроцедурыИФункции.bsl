&НаКлиенте
Функция сбисЗаполнитьЗаголовкиФормы()
	
	ЭлементыДляОбновления = Новый Массив;
	ПараметрыОбновления = Новый Структура;
	
	Если РезультатОтправки.Свойство("ЗаголовкиФормыРезультатов") Тогда
		ЭтаФорма.Заголовок = РезультатОтправки.ЗаголовкиФормыРезультатов.Форма;
		
		ЭлементыДляОбновления.Добавить("Отправлено");
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ПоложительныйРезультат);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "Неотправлено";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ОтрицательныйРезультат);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокДокументы1С";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.Объект1С);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "НадписьТиповыеОшибки";
		ПараметрыОбновления.Вставить("Заголовок", РезультатОтправки.ЗаголовкиФормыРезультатов.ТиповыеОшибки);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокКонтекстноеОткрытьДокументОнлайн";
		ПараметрыОбновления.Очистить();
		ПараметрыОбновления.Вставить("Видимость", Ложь);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
	Иначе
		ЭтаФорма.Заголовок = "Результат отправки документов";
		
		ЭлементыДляОбновления.Добавить("Отправлено");
		ПараметрыОбновления.Вставить("Заголовок", "Отправлено");
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "Неотправлено";
		ПараметрыОбновления.Вставить("Заголовок", "Не отправлено");
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокДокументы1С";
		ПараметрыОбновления.Вставить("Заголовок", "Документ 1С");
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "НадписьТиповыеОшибки";
		ПараметрыОбновления.Вставить("Заголовок", "Смотреть типовые ошибки отправки и их решение");
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
		
		ЭлементыДляОбновления[0] = "ТипыОшибокКонтекстноеОткрытьДокументОнлайн";
		ПараметрыОбновления.Очистить();
		ПараметрыОбновления.Вставить("Видимость", Ложь);
		ОбновитьНастройкиЭлементовФормы(ЭлементыДляОбновления, ПараметрыОбновления);
	КонецЕсли
КонецФункции

// Функция - Получить представление HTMLОшибки ФЛК
//
// Параметры:
//  ДокументСБИС - Строка - идентификатор документа СБИС
// 
// Возвращаемое значение:
// Строка - HTML-протокол ошибки ФЛК в текстовом формате 
//
&НаКлиенте
Функция ПолучитьПредставлениеHTMLОшибкиФЛК(ДокументСБИС)
		
	ИДВложений = Новый Массив;
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		
		Если ЭлементСоответствия = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Документ Из ЭлементСоответствия Цикл
			
			Если НЕ Документ.ДокументСБИС = ДокументСБИС Тогда 
				Продолжить;
			КонецЕсли;
			
			ИДПакета = Документ.ИДПакета;
			
			Для Каждого Вложение Из ЭлементСоответствия Цикл
				
				ВложениеУжеВСписке = НЕ (ИДВложений.Найти(Вложение.ИДВложения) = Неопределено); 
				
				Если НЕ ВложениеУжеВСписке И Вложение.ДокументСБИС = ДокументСБИС Тогда
					ИДВложений.Добавить(Вложение.ИДВложения); 
				КонецЕсли;
				
			КонецЦикла;
			
			Прервать;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	Если НЕ ИдВложений.Количество() Тогда
		Возврат Неопределено;
	КонецЕсли;       
	
	Возврат ПротоколыФЛКПослеЗапросаПоСпискуВложений(ИДВложений, ИдПакета); 
	
КонецФункции 

&НаКлиенте
Функция ПротоколыФЛКПослеЗапросаПоСпискуВложений(ИДВложений, ИдПакета)
	
	ТекстОшибки = "";
	Для Каждого ИДВложения Из ИДВложений Цикл
		
		Попытка    
			ПараметрыЗапроса = Новый Структура("ИДПакета, ИдРодителя, ИмяРодителя", ИДПакета, ИДВложения, "Документ");
			РезультатВызова = МодульОбъектаКлиент().ПолучитьПротоколПроверкиВложения(ПараметрыЗапроса);
		Исключение
			
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнформацияОбОшибке(), "ПолучитьПредставлениеHTMLОшибкиФЛК"); 
			ПредставлениеОшибкиФЛК = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ЭтаФорма, "HTMLПредставлениеОшибкиФЛК");
			ПредставлениеОшибкиФЛК.Видимость = Ложь;
			
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				HTMLПредставлениеОшибкиФЛК.УстановитьТекст("");	
			#Иначе
				HTMLПредставлениеОшибкиФЛК = Неопределено;	
			#КонецЕсли
			
		КонецПопытки;
		
		ТекстОшибки = ТекстОшибки + РезультатВызова;
	КонецЦикла;
	
	Возврат ТекстОшибки;
	
КонецФункции

// Процедура - Обработать список вложений с ошибками ФЛК
// Просматриваем все вложения с ошибкой ФЛК (код 729) и удаляем их из списка для формирования дерева ошибок
&НаКлиенте
Процедура ОбработатьСписокВложенийСОшибкамиФЛК()
	
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		
		Если ЭлементСоответствия = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИндексыУдаляемыхВложений = Новый Массив;
		ИндексВложения = 0;
		
		Для Каждого СтруктураДанныхОшибки Из ЭлементСоответствия Цикл
			
			ИндексВложения = ИндексВложения + 1;
			
			Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
				СоставПакета = МестныйКэш.Интеграция.ПрочитатьДокумент(МестныйКэш, СтруктураДанныхОшибки.ИДПакета);
				
				ПроверитьВложенияНаНаличиеОшибок(СоставПакета.Вложение, СтруктураДанныхОшибки.ИДВложения, ИндексыУдаляемыхВложений, ИндексВложения);
				
				Если СоставПакета.Свойство("ВложениеУчета") Тогда
					ПроверитьВложенияНаНаличиеОшибок(СоставПакета.ВложениеУчета, СтруктураДанныхОшибки.ИДВложения, ИндексыУдаляемыхВложений, ИндексВложения);
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЦикла;
		
		Для Каждого ИндексВложения Из ИндексыУдаляемыхВложений Цикл
			ЭлементСоответствия.Удалить(ИндексВложения);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВложенияНаНаличиеОшибок(ВложенияПакета, ИДВложения, ИндексыУдаляемыхВложений, ИндексВложения); 
	
	Для Каждого Вложение Из ВложенияПакета Цикл
		
		Если Вложение.Идентификатор = ИДВложения
			И Вложение.КоличествоОшибок = 0 Тогда
			
			ИндексыУдаляемыхВложений.Добавить(ИндексВложения);
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьДеревоОшибокЛегаси(РезультатОтправки)
	
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
		ТипыОшибокПереопределяемый = РеквизитФормыВЗначение("ТипыОшибок");
		ТипыОшибокПереопределяемый.Строки.Очистить();
	#Иначе
		ТипыОшибокПереопределяемый = ТипыОшибок;
		ТипыОшибок.Строки.Очистить();	
	#КонецЕсли
	
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		НоваяСтрока = ТипыОшибокПереопределяемый.Строки.Добавить();            
		НоваяСтрока.ТекстОшибки = Элемент.Значение;            
		НоваяСтрока.Количество = Элемент.Представление;
		
		//AU изменена структура в детализации ошибок для возможности проброса дампа в сервис статистики
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		
		Если ЭлементСоответствия <> Неопределено Тогда
			
			Для Каждого Документ1С Из ЭлементСоответствия Цикл
				
				НоваяПодстрока = НоваяСтрока.Строки.Добавить();            
				НоваяПодстрока.Документ1С  = Документ1С.ОбработанДокумент1С; 
				НоваяПодстрока.ТекстОшибки = Документ1С.Сообщение;
				
			КонецЦикла;
			
		КонецЕсли
		
	КонецЦикла;	
	
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
		ЗначениеВРеквизитФормы(ТипыОшибокПереопределяемый, "ТипыОшибок");
	#КонецЕсли	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоОшибок(РезультатОтправки)

	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда	
		
		ТипыОшибокПереопределяемый = РеквизитФормыВЗначение("ТипыОшибок");
		ТипыОшибокПереопределяемый.Строки.Очистить();
	#Иначе
		ТипыОшибокПереопределяемый = ТипыОшибок;
		ТипыОшибок.Строки.Очистить();
	#КонецЕсли
	
	Для Каждого Элемент Из РезультатОтправки.ТипыОшибок Цикл
		
		НоваяСтрока = ТипыОшибокПереопределяемый.Строки.Добавить();
		НоваяСтрока.ТекстОшибки = Элемент.Значение;
		НоваяСтрока.Количество 	= Элемент.Представление;
		
		ЭлементСоответствия = РезультатОтправки.ДетализацияОшибок.Получить(Элемент.Значение);
		
		Если ЭлементСоответствия <> Неопределено Тогда
			
			Для Каждого СтруктураДанныхОшибки Из ЭлементСоответствия Цикл
				
				СуществующаяСтрокаСДокументомСБИС = ТипыОшибокПереопределяемый.Строки.Найти(СтруктураДанныхОшибки.ДокументСБИС, "ДокументСБИС", Ложь);
				
				Если СуществующаяСтрокаСДокументомСБИС <> Неопределено Тогда
					
					Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
						СтруктураДанныхОшибки.Сообщение = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
					КонецЕсли;  
					
					Если СуществующаяСтрокаСДокументомСБИС.Строки.Найти(СтруктураДанныхОшибки.Сообщение, "ТекстОшибки") = Неопределено Тогда 
						
						ОшибкаЭлемент = СуществующаяСтрокаСДокументомСБИС.Строки.Добавить();
						ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
						
					КонецЕсли;
					
					Если СтруктураДанныхОшибки.Свойство("ОбработанДокумент1С") И ЗначениеЗаполнено(СтруктураДанныхОшибки.ОбработанДокумент1С) Тогда
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания	= СтруктураДанныхОшибки.ОбработанДокумент1С;
						ОшибкаЭлемент.Документ1С			= СтруктураДанныхОшибки.ОбработанДокумент1С;  
						ОшибкаЭлемент.ДокументСБИС			= СтруктураДанныхОшибки.ДокументСБИС;
						ОшибкаЭлемент.КодОшибки				= СтруктураДанныхОшибки.СтруктураОшибки.code;
					КонецЕсли;
				Иначе
					
					ДокументСБИСЭлемент = НоваяСтрока.Строки.Добавить();            
					ДокументСБИСЭлемент.ТекстОшибки   = СтруктураДанныхОшибки.ДокументСБИС;
					
					ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();
					
					Если СтруктураДанныхОшибки.СтруктураОшибки.code = 729 Тогда
						
						ОшибкаЭлемент.ТекстОшибки  = "Ошибка ФЛК. Двойной клик покажет/скроет подробный отчёт";
						ОшибкаЭлемент.ДокументСБИС = СтруктураДанныхОшибки.ДокументСБИС; 
						ОшибкаЭлемент.КодОшибки	   = СтруктураДанныхОшибки.СтруктураОшибки.code;
					Иначе
						
						ОшибкаЭлемент.ТекстОшибки = СтруктураДанныхОшибки.Сообщение;
					КонецЕсли;
					
					Если СтруктураДанныхОшибки.Свойство("ОбработанДокумент1С") И ЗначениеЗаполнено(СтруктураДанныхОшибки.ОбработанДокумент1С) Тогда
						ОшибкаЭлемент.Документы1С.Добавить(СтруктураДанныхОшибки.ОбработанДокумент1С, СтруктураДанныхОшибки.ОбработанДокумент1С);
						ОшибкаЭлемент.Документы1СНазвания	= СтруктураДанныхОшибки.ОбработанДокумент1С; 
						ОшибкаЭлемент.Документ1С			= СтруктураДанныхОшибки.ОбработанДокумент1С;   
						ОшибкаЭлемент.ДокументСБИС			= СтруктураДанныхОшибки.ДокументСБИС;  
						ОшибкаЭлемент.КодОшибки				= СтруктураДанныхОшибки.СтруктураОшибки.code;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;	
		Иначе
			
			ДокументСБИСЭлемент = ТипыОшибокПереопределяемый.Строки.Добавить();
			ДокументСБИСЭлемент.ДокументСБИС = "Документ для ошибки не определён";
			ДокументСБИСЭлемент.КодОшибки	  = СтруктураДанныхОшибки.СтруктураОшибки.code;
			
			ОшибкаЭлемент = ДокументСБИСЭлемент.Строки.Добавить();            
			
			ОшибкаЭлемент.ТекстОшибки = Элемент.Значение;
			ОшибкаЭлемент.Количество  = Элемент.Представление;
			
		КонецЕсли;
	КонецЦикла;
	
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда	
		ЗначениеВРеквизитФормы(ТипыОшибокПереопределяемый, "ТипыОшибок");
	#КонецЕсли
	
КонецПроцедуры

// Процедура - Обновить настройки элементов формы
//
// Параметры:
//  СписокЭлементов		 - Массив - Содержит строки с именами элементов формы, которые нужно настроить 
//  ПараметрыНастройки	 - Структура - Параметры, которые будут установлены элементу (доступность, видимость и т.п.)
//
//			Настройка 	 -	Строка	  	 - Имя настройки элемента 
//			Значение 	 -	Произвольный - Устанавливаемое значение. Проверок на установку недопустимого значения нет, остаётся на совести программиста
//
&НаКлиенте
Процедура ОбновитьНастройкиЭлементовФормы(СписокЭлементов, ПараметрыНастройки)
	
	ЭлементыДляИзменения = Новый Массив;
	
	Для Каждого ИмяЭлемента Из СписокЭлементов Цикл   
		
		ЭлементФормы = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ЭтаФорма, ИмяЭлемента);
		
		Если НЕ ЭлементФормы = Неопределено Тогда
			ЭлементыДляИзменения.Добавить(ЭлементФормы);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Элемент Из ЭлементыДляИзменения Цикл
		
		Для Каждого Параметр Из ПараметрыНастройки Цикл
			
			Элемент[Параметр.Ключ] = Параметр.Значение;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

