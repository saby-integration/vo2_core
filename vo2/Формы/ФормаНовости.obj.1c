
&НаСервере
Процедура СформироватьТекстНовостиПоУмолчанию()
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Макет = ЭтотОбъект.ПолучитьМакет("Новости");
	#Иначе
		Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Новости");	
	#КонецЕсли
	НовостьHTML = Макет.ПолучитьТекст();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
		ЭтаФорма.ВладелецФормы.сбисПослеПросмотраНовости(Показывать);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Кэш = ЭтаФорма.ВладелецФормы.Кэш;
	
	Показывать = Кэш.ГлавноеОкно.Версия <> Кэш.Парам.ПрочитаннаяНовость;
 	
	СформироватьТекстНовостиПоУмолчанию();
	
	СформироватьТекстНовости(Кэш);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьТекстНовости(Кэш)
	Отказ = Ложь;
	
	СбисПараметрыФайла = Кэш.ОбщиеФункции.сбисПараметрыСервисаОбновления(Кэш);
	СбисПараметрыФайла.Вставить("Таймаут", 3);
	
	СформироватьНовостьПоОдномуФайлу(Кэш, СбисПараметрыФайла, Отказ);
	
	Если Отказ Тогда
		Отказ = Ложь;
		СформироватьНовостьПоДвумФайлам(Кэш, СбисПараметрыФайла, Отказ);
		Если Отказ Тогда
			ЭтаФорма.Закрыть(Показывать);
		КонецЕсли;
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			ЭлементыФормы.НовостьHTML.УстановитьТекст(НовостьHTML);
		#КонецЕсли
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНовостьПоОдномуФайлу(Кэш, СбисПараметрыФайла, Отказ)
	// Получаем заранее сгененированную новость
	СбисПараметрыФайла.Вставить("ИмяФайла", КаталогВременныхФайлов() + "1c_vo2_news.tmp");
	СбисПараметрыФайла.URL = СбисПараметрыФайла.URL_General + "1c_vo2_news.html";
	
	РезультатПолученияФайла = Кэш.Интеграция.СбисСохранитьВФайлПоСсылке(Кэш, СбисПараметрыФайла, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекстНовости = Новый ЧтениеТекста(СбисПараметрыФайла.ИмяФайла, "UTF-8");
	ТекстНовости = ТекстНовости.Прочитать();
	Если Не ЗначениеЗаполнено(ТекстНовости) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НовостьHTML = ТекстНовости;
КонецПроцедуры 

&НаКлиенте
Процедура СформироватьНовостьПоДвумФайлам(Кэш, СбисПараметрыФайла, Отказ)
	// Получаем changelog актуальных версий
	СбисПараметрыФайла.Вставить("ИмяФайла", КаталогВременныхФайлов() + "new_versions_changelog.tmp");
	СбисПараметрыФайла.URL = СбисПараметрыФайла.URL_General + "new_versions_changelog.html";
	
	РезультатПолученияФайла = Кэш.Интеграция.СбисСохранитьВФайлПоСсылке(Кэш, СбисПараметрыФайла, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекстНовостиАктуальныхВерсий = Новый ЧтениеТекста(СбисПараметрыФайла.ИмяФайла, "UTF-8");
	ТекстНовостиАктуальныхВерсий = ТекстНовостиАктуальныхВерсий.Прочитать();
	Если Не ЗначениеЗаполнено(ТекстНовостиАктуальныхВерсий) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НовостьHTML = СтрЗаменить(НовостьHTML, "%NEW_VERSIONCHANGELOG%", ТекстНовостиАктуальныхВерсий);
	
	// Получаем полезные ссылки
	СбисПараметрыФайла.Вставить("ИмяФайла", КаталогВременныхФайлов() + "useful_links.tmp");
	СбисПараметрыФайла.URL = СбисПараметрыФайла.URL_General + "useful_links.html";
	
	РезультатПолученияФайла = Кэш.Интеграция.СбисСохранитьВФайлПоСсылке(Кэш, СбисПараметрыФайла, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекстПолезныеСсылки = Новый ЧтениеТекста(СбисПараметрыФайла.ИмяФайла, "UTF-8");
	ТекстПолезныеСсылки = ТекстПолезныеСсылки.Прочитать();
	Если Не ЗначениеЗаполнено(ТекстПолезныеСсылки) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	НовостьHTML = СтрЗаменить(НовостьHTML, "%USEFUL_LINKS%", ТекстПолезныеСсылки);
КонецПроцедуры
