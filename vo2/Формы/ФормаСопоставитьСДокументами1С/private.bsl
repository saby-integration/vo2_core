
// Функция - Обработать дельту структуры документов для вывода на форме
//
// Параметры:
//  ПараметрыОбработкиВходящие	 - 	 - 
//  ДопПараметры				 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ОбработатьДельтуСтруктурыДокументов(ПараметрыОбработкиВходящие, ДопПараметры) Экспорт
	Перем Ини;

	ОписаниеОбработкиДельты	= ПараметрыОбработкиВходящие.ОписаниеПроверки.Значение;
	РасхожденияОбъектов		= ПараметрыОбработкиВходящие.Дельта;
	ИнформацияОДокументах	= ОписаниеОбработкиДельты.ИнформацияОДокументах;
	
	ПараметрыПоискаИниРасхождения = Новый Структура("ТипДокумента, ВерсияДокумента, НастройкаПроверкаРасхождения", ИнформацияОДокументах.Формат, ИнформацияОДокументах.Версия);
	ОписаниеОбработкиДельты.Свойство("ИмяИниДельты", ПараметрыПоискаИниРасхождения.НастройкаПроверкаРасхождения);
	
	ИниПоискаРасхождения = МодульОбъектаКлиент().НайтиИниПроверкиРасхождения(ПараметрыПоискаИниРасхождения);
	Если ИниПоискаРасхождения = Неопределено Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение(, "Документ_Шаблон.ОбработатьДельтуСтруктурыДокументов",,,"Отсутствует файл настройки расхождения");
	КонецЕсли;
	
	КонтекстЗаполнения	= Новый Структура("Ини, ДанныеИсточник", ИниПоискаРасхождения, РасхожденияОбъектов);
	ОписаниеОбъекта		= Новый Структура("Ключ, Значение, Ини", "СравнениеДокументов", Новый Структура, ИниПоискаРасхождения);
	
	ДопПараметры.Вставить("Контекст", КонтекстЗаполнения);
	ДопПараметры.Вставить("ДополнительныеПараметры");
	
	ФормаШаблон = МодульОбъектаКлиент().ПолучитьФормуОбработки("Документ_Шаблон");
	ПараметрыОбработкиВходящие.Результат = ФормаШаблон.СбисЗаполнитьСтруктуруОбъекта(ОписаниеОбъекта, ДопПараметры);

КонецФункции

&НаКлиенте
Процедура ВыполнитьСравнениеДокументов(СписокОтмеченныхДокументов, ДопПараметры)
	Перем ВладелецСравнения;
	
	СписокРасхожденийПолучить = Новый СписокЗначений;
	Для Каждого СтрокаСпискаОтметить Из СписокОтмеченныхДокументов Цикл
		СтрокаСравнениеПолучить = Новый Структура("Документ1С, ДокументСБИСНазвание, ИдВложения, СоставПакета");
		ЗаполнитьЗначенияСвойств(СтрокаСравнениеПолучить, СтрокаСпискаОтметить);
		СтрокаСравнениеПолучить.Вставить("КлючДетализации", СтрокаСпискаОтметить.ИдВложения + "_" + СтрокаСпискаОтметить.Документ1С);
		СписокРасхожденийПолучить.Добавить(СтрокаСравнениеПолучить);
	КонецЦикла;
	Если Не ДопПараметры.Свойство("Владелец", ВладелецСравнения) Тогда
		ВладелецСравнения = ЭтаФорма;
	КонецЕсли;

	ФормаШаблон = МодульОбъектаКлиент().ПолучитьФормуОбработки("Документ_Шаблон");
	лОбработчики = Новый Структура("мСравнениеДокументов, мТаблДокРасхождения",
		Новый Структура("Метод, Модуль", "Обработчик_мРасхожденияОбъектов",		ФормаШаблон),
		Новый Структура("Метод, Модуль", "Обработчик_мТаблДокДляРасхождений",	ФормаШаблон));
	
	ПараметрыЗаполнения	= Новый Структура("Кэш, Обработчики", Кэш, лОбработчики);
	лОбработчикДельты	= МодульОбъектаКлиент().НовыйСбисОписаниеОповещения("ОбработатьДельтуСтруктурыДокументов", ЭтаФорма, ПараметрыЗаполнения);
	
	ДопПараметрыСравнения			= Новый Структура("ОбработчикДельты, Владелец", лОбработчикДельты, ВладелецСравнения);
	ДопПараметрыСравнения.Вставить("ДетализацияСДаннымиДокументов",Истина);
	ПараметрыСравненияИсходящие		= Новый Структура("СписокСопоставлений, МодульПодготовкиРасхождений", СписокРасхожденийПолучить, Кэш.Текущий.Форма);
	РезультатСопоставленияДокументов= МодульОбъектаКлиент().СравнитьВыбранныеДокументы(ПараметрыСравненияИсходящие, ДопПараметрыСравнения);
	
	ПараметрыЗаписиИтогов = Новый Массив;
	Для Каждого СтрокаТабл Из СписокОтмеченныхДокументов Цикл
		КлючДетализации		= СтрокаТабл.ИдВложения + "_" + СтрокаТабл.Документ1С;
		ОписаниеРасхождения = РезультатСопоставленияДокументов.Действие.ДетализацияВыполнено.Получить(КлючДетализации);
		Если СтрокаТабл.ДанныеСравнения = Неопределено Тогда
			СтрокаТабл.ДанныеСравнения = Новый СписокЗначений;
		КонецЕсли;
		
		СтруктураСвойств	= Новый Структура("ДокументСБИС_СравнениеЗначение, ДокументСБИС_СравнениеСтатус");
		СтрокаЗаписьСтатусы	= Новый Структура("Регламент, СтруктураСвойств, Документ1С, ИдАккаунта","", СтруктураСвойств, СтрокаТабл.Документ1С);
		ПараметрыЗаписиИтогов.Добавить(СтрокаЗаписьСтатусы);
		//Успешно выполнено, оценка результата расхождения
		Если Не ОписаниеРасхождения = Неопределено Тогда
			СтрокаТабл.СостояниеСопоставления = 1;
			ОписаниеКратко = "";
			ДанныеРасхождения	= ОписаниеРасхождения.Данные;
			РасхождениеВЗапись	= Новый Структура;
			Для Каждого КлючИЗначение Из ДанныеРасхождения Цикл
				Если			КлючИЗначение.Ключ = "Таблица" Тогда
					РасхождениеВЗапись.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
					Продолжить;
				ИначеЕсли (	Не	КлючИЗначение.Значение.Свойство("ОписаниеКратко")
						Или		КлючИЗначение.Значение.ОписаниеКратко = "") Тогда
					Продолжить;
				КонецЕсли;
				СтрокаТабл.СостояниеСопоставления = 5;
				ОписаниеКратко = ОписаниеКратко + "
					|" + КлючИЗначение.Значение.ОписаниеКратко;
				РасхождениеВЗапись.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЦикла;
			
			Если ОписаниеКратко = "" Тогда
				ОписаниеКратко = "Успешно";
			Иначе
				ОписаниеКратко = Сред(ОписаниеКратко, 2);
			КонецЕсли;
			
			СтрокаТабл.СостояниеСопоставленияТекст = ОписаниеКратко;
			СтрокаТабл.ДанныеСравнения.Очистить();
			СтрокаТабл.ДанныеСравнения.Добавить(РасхождениеВЗапись);
			Если ОписаниеРасхождения.Данные.Свойство("ДанныеДокументов") Тогда
				СтрокаТабл.ДанныеДокументов.Очистить();
				СтрокаТабл.ДанныеДокументов.Добавить(ОписаниеРасхождения.Данные.ДанныеДокументов);
			КонецЕсли;

			РассчитатьДельтуИСуммуДокумента1С(СтрокаТабл);

			СтруктураСвойств.ДокументСБИС_СравнениеСтатус	= СтрокаТабл.СостояниеСопоставления;
			СтруктураСвойств.ДокументСБИС_СравнениеЗначение	= ОписаниеКратко;
			Продолжить;
		КонецЕсли;
		ОписаниеРасхождения = РезультатСопоставленияДокументов.Действие.ДетализацияНеВыполнено.Получить(КлючДетализации);
		
		//Невыполнено, установить статус
		Если Не ОписаниеРасхождения = Неопределено Тогда
			СтрокаТабл.СостояниеСопоставления = 4;
			СтрокаТабл.ДанныеСравнения.Очистить();
			СтрокаТабл.ДанныеСравнения.Добавить(ОписаниеРасхождения.Данные);
			СтрокаТабл.СостояниеСопоставленияТекст = "Невозможно сравнить";

			СтруктураСвойств.ДокументСБИС_СравнениеСтатус	= СтрокаТабл.СостояниеСопоставления;
			СтруктураСвойств.ДокументСБИС_СравнениеЗначение	= ОписаниеРасхождения.Данные.details;
			Продолжить;
		КонецЕсли;
		
		ОписаниеРасхождения = РезультатСопоставленияДокументов.Ошибки.ДетализацияОшибок.Получить(КлючДетализации);
		//Завершено с ошибкой
		Если Не ОписаниеРасхождения = Неопределено Тогда
			СтрокаТабл.СостояниеСопоставления = 3;
			СтрокаТабл.СостояниеСопоставленияТекст = "Ошибка при сравнении";
			СтрокаТабл.ДанныеСравнения.Очистить();
			СтрокаТабл.ДанныеСравнения.Добавить(ОписаниеРасхождения[0].Данные);
			
			СтруктураСвойств.ДокументСБИС_СравнениеСтатус	= СтрокаТабл.СостояниеСопоставления;
			СтруктураСвойств.ДокументСБИС_СравнениеЗначение	= ОписаниеРасхождения[0].Данные.details;
			Продолжить;
		КонецЕсли;

	КонецЦикла;
	Если МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("СохранятьРасхождения") Тогда
		МодульЗаписиРасхождений	= МодульОбъектаКлиент().НайтиФункциюСеансаОбработки("ЗаписатьПараметрыДокументовСБИС", Кэш.ФормаРаботыСоСтатусами);
		КаталогНастроек = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("КаталогНастроек");
		МодульЗаписиРасхождений.ЗаписатьПараметрыДокументовСБИС(ПараметрыЗаписиИтогов, МодульОбъектаКлиент().ИниПоПараметрам("Конфигурация"), КаталогНастроек);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьСравнениеДокументов(СписокОтмеченныхДокументов)

	МассивСвойствПрочитать	= Новый Массив;

	СвойствоПрочитать	= Новый Структура("Имя, Регламент", "ДокументСБИС_СравнениеЗначение");
	МассивСвойствПрочитать.Добавить(СвойствоПрочитать);
	СвойствоПрочитать	= Новый Структура("Имя, Регламент", "ДокументСБИС_СравнениеСтатус");
	МассивСвойствПрочитать.Добавить(СвойствоПрочитать);

	ПараметрыПрочитать = Новый Структура("СписокДокументов, Свойства, ПолныйСписок", Новый Массив, МассивСвойствПрочитать, Истина);
	
	Для Каждого СтрокаСпискаОтметить Из СписокОтмеченныхДокументов Цикл
		ПараметрыПрочитать.СписокДокументов.Добавить(СтрокаСпискаОтметить.Документ1С);
	КонецЦикла;
	ИмяФормыСтатусов			= МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("ИмяМодуляРаботыСоСтатусами");
	МодульЗаписатьПараметрыСБИС = МодульОбъектаКлиент().ПолучитьФормуОбработки(ИмяФормыСтатусов);
	СтатусыСравнения			= МодульЗаписатьПараметрыСБИС.СбисПрочитатьЗначенияСвойствДокументов(ПараметрыПрочитать, Кэш);
	Для Каждого СтрокаТаблицы Из ТаблицаСопоставленияДокументов Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Документ1С) Тогда

			Продолжить;
			
		КонецЕсли;
		
		СтатусСравнения = СтатусыСравнения.Получить(СтрокаТаблицы.Документ1С);
		
		Если СтатусСравнения = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли; 
		
		СтрокаТаблицы.Статус						= СтатусСравнения.Получить("ДокументСБИС_СравнениеСтатус");
		СтрокаТаблицы.СостояниеСопоставленияТекст	= СтатусСравнения.Получить("ДокументСБИС_СравнениеЗначение");
		
	КонецЦикла;
	
КонецПроцедуры
	
