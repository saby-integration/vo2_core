
//Функция возвращает данные вложения для заполнения своств в ТЧ
&НаКлиенте
Функция ПолучитьДанныеСделкиEDI(Кэш, Контекст, Отказ=Ложь)
	Перем Вложение;
	//Если указана сделка по документу, то получим данные СБИС и ТЧ для дозаполнения
	СделкаEDI = Кэш.ОбщиеФункции.РассчитатьЗначение("EDIСделкаДляДозаполнения", Контекст.ФайлДанные);
	Если Не ЗначениеЗаполнено(СделкаEDI) Тогда
		Возврат Неопределено;
	КонецЕсли;
	ПараметрыПакетаСБИС	= Кэш.ОбщиеФункции.ИдентификаторСБИСПоДокументу(Кэш, СделкаEDI);
	ИДПакетаСделки		= ПараметрыПакетаСБИС.ИдДокумента;
	Если Не ЗначениеЗаполнено(ИДПакетаСделки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	СоставПакета = Кэш.Интеграция.ПрочитатьДокумент(Кэш, ИДПакетаСделки);
	Для Каждого ВложениеСделки Из СоставПакета.Вложение Цикл
		Если	Не ВложениеСделки.Свойство("Тип")
			Или Не ВложениеСделки.Тип = "ПодтверждениеЗаказа" Тогда
			Продолжить;
		КонецЕсли;
		Вложение = ВложениеСделки;
		Прервать;
	КонецЦикла;
	Если Вложение = Неопределено Тогда
		//Нет вложения Сделки
		Возврат Неопределено;
	КонецЕсли;
	РазобранныеДанныеВложения = Кэш.ОбщиеФункции.ПолучитьРазобранныеДанныеВложенияСбис(Кэш, СоставПакета, Вложение, Новый Структура, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.СбисИсключение(РазобранныеДанныеВложения, "ПолучитьДанныеСделкиEDI");
	КонецЕсли;
	ТаблДокДанные = РазобранныеДанныеВложения;
	Если	Не ТаблДокДанные.Свойство("СтруктураФайла", ТаблДокДанные)
		Или	Не ТаблДокДанные.Свойство("Файл",			ТаблДокДанные)
		Или	Не ТаблДокДанные.Свойство("Документ",		ТаблДокДанные)
		Или	Не ТаблДокДанные.Свойство("ТаблДок",		ТаблДокДанные) Тогда
		Возврат Неопределено;
	КонецЕсли;	
	Возврат ТаблДокДанные;
КонецФункции	

&НаКлиенте
Процедура ПересчитатьТабличнуюЧастьВВалютеУчетаПоИтоговойСумме(Кэш, Контекст, ИтогСумма)
	Перем СбисНДСИсчисляетсяАгентом;
	Если Не Контекст.Свойство("НДСИсчисляетсяАгентом", СбисНДСИсчисляетсяАгентом) Тогда
		СбисНДСИсчисляетсяАгентом = Кэш.ОбщиеФункции.РассчитатьЗначение("НДСИсчисляетсяАгентом", Контекст.ФайлДанные) = Истина;
	КонецЕсли;	
	Попытка 
		Контекст.ИтогСумма	= 0; 
		Контекст.ИтогСуммаБезНалога = 0;
		Контекст.ИтогСуммаНДС = 0;
		
		ИтогСуммаБезНалога	= 0;
		ИтогСуммаНДС		= 0;
		КлючРаспределения	= "Сумма";
		Если СбисНДСИсчисляетсяАгентом Тогда
			КлючРаспределения	= "СуммаБезНал";
			Контекст.ИтогСумма	= 0; 
		КонецЕсли;
		
		МассивРаспределения	= Новый Массив;
		Для Каждого СтрокаДокумента Из Контекст.ТаблДок.СтрТабл Цикл 
			Если СтрокаДокумента.Свойство("Рассчитано") и СтрокаДокумента.Рассчитано Тогда
				Контекст.ИтогСумма = Контекст.ИтогСумма + СтрокаДокумента.Сумма; 
				Контекст.ИтогСуммаБезНалога = Контекст.ИтогСуммаБезНалога + СтрокаДокумента.СуммаБезНал;
				Контекст.ИтогСуммаНДС = Контекст.ИтогСуммаНДС + СтрокаДокумента.НДС.Сумма;
				МассивРаспределения.Добавить("0");
			Иначе	
				МассивРаспределения.Добавить(СтрокаДокумента[КлючРаспределения]); 
			КонецЕсли;	
		КонецЦикла;
		Кэш.ОбщиеФункции.сбисРаспределитьСуммуПоСтолбцу(МассивРаспределения, ИтогСумма, Контекст.ТаблДок.СтрТабл, КлючРаспределения);
		РасчетСуммыНДСПоСтавке = Кэш.ОбщиеФункции.РассчитатьЗначение("РасчетСуммыНДСПоСтавке", Контекст.ФайлДанные,Кэш);
		Для Каждого СтрокаДокумента Из Контекст.ТаблДок.СтрТабл Цикл
			Если СтрокаДокумента.Свойство("Рассчитано") и СтрокаДокумента.Рассчитано Тогда 
				Продолжить;
			ИначеЕсли РасчетСуммыНДСПоСтавке = Истина Тогда
				//Выделение суммы НДС, Расчет суммы без НДС
				Если Не СбисНДСИсчисляетсяАгентом Тогда
					ЗначениеСтавкиНДС = Кэш.ОбщиеФункции.сбисПолучитьСтавкуНДСЧисло(СтрокаДокумента.НДС.Ставка);
					СтрокаДокумента.НДС.Сумма = Формат(?(ЗначениеСтавкиНДС = 0, 0, Окр(СтрокаДокумента.Сумма * ЗначениеСтавкиНДС/(100+ЗначениеСтавкиНДС),2)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					СтрокаДокумента.СуммаБезНал = Формат(Число(СтрокаДокумента.Сумма) - Число(СтрокаДокумента.НДС.Сумма), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
				Если СтрокаДокумента.Цена <> 0 Тогда
					СтрокаДокумента.Цена = формат(Число(СтрокаДокумента.СуммаБезНал)/?(Число(СтрокаДокумента.Кол_во)=0,1,Число(СтрокаДокумента.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
				КонецЕсли;
			Иначе
				МассивРаспределения.Очистить();
				МассивРаспределения.Добавить(СтрокаДокумента.СуммаБезНал);
				МассивРаспределения.Добавить(СтрокаДокумента.НДС.Сумма);
				ОписаниеЧисло = Новый ОписаниеТипов("Число");
				СтрокаДокументаСумма = ОписаниеЧисло.ПривестиЗначение(СтрокаДокумента[КлючРаспределения]); 
				МассивРаспределенныхСумм = Кэш.ОбщиеФункции.сбисРаспределитьПропорционально(СтрокаДокументаСумма, МассивРаспределения);
				Если МассивРаспределенныхСумм <> Неопределено Тогда
					СтрокаДокумента.СуммаБезНал = Формат(МассивРаспределенныхСумм[0], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					СтрокаДокумента.НДС.Сумма = Формат(МассивРаспределенныхСумм[1], "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					Если СтрокаДокумента.Цена <> 0 Тогда
						СтрокаДокумента.Цена = формат(Число(СтрокаДокумента.СуммаБезНал)/?(Число(СтрокаДокумента.Кол_во)=0,1,Число(СтрокаДокумента.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
					КонецЕсли;
					Если СтрокаДокумента.Свойство("Параметр") Тогда
						Для каждого мПараметр Из СтрокаДокумента.Параметр Цикл
							Если мПараметр.Имя = "Цена1С" Тогда
								мПараметр.Значение = формат(Число(СтрокаДокумента.Сумма)/?(Число(СтрокаДокумента.Кол_во)=0,1,Число(СтрокаДокумента.Кол_во)), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");	
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			ИтогСуммаБезНалога = ИтогСуммаБезНалога + Число(СтрокаДокумента.СуммаБезНал);
			ИтогСуммаНДС = ИтогСуммаНДС + Число(СтрокаДокумента.НДС.Сумма);
			Если СтрокаДокумента.Свойство("Рассчитано") Тогда    // для документов с двумя табл. частями (товары, услуги) для корректного расчета итогов
				СтрокаДокумента.Рассчитано = Истина;
			Иначе
				СтрокаДокумента.Вставить("Рассчитано", Истина);  
			КонецЕсли;	
		КонецЦикла;	
		
		Если СбисНДСИсчисляетсяАгентом Тогда
			Контекст.ИтогСумма	= 0;   
		Иначе
			Контекст.ИтогСумма	= Контекст.ИтогСумма + ИтогСумма;
		КонецЕсли;
		
		Контекст.ИтогСуммаБезНалога = Контекст.ИтогСуммаБезНалога + ИтогСуммаБезНалога;
		Контекст.ИтогСуммаНДС = Контекст.ИтогСуммаНДС + ИтогСуммаНДС;
	Исключение
	КонецПопытки;
КонецПроцедуры

//Фукнция перносит параметры по строкам из подтверждения заказа.
&НаКлиенте
Процедура ДополнитьТабличнуюЧастьПараметрамиПоДаннымИсходногоЗаказа(Кэш, Контекст, ИнфоОТаблДок)
	Перем СтрокиФормируемый, СтрокиИсходный;
	ТаблДокИсходный		= ИнфоОТаблДок.Исходный;
	ТаблДокФормируемый	= ИнфоОТаблДок.Формируемый; 
	Если	Не ЗначениеЗаполнено(ТаблДокФормируемый)
		Или	Не ТаблДокФормируемый.Свойство("СтрТабл", СтрокиФормируемый)
		Или	Не ТипЗнч(СтрокиФормируемый) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	Если	Не ЗначениеЗаполнено(ТаблДокИсходный)
		Или	Не ТаблДокИсходный.Свойство("СтрТабл", СтрокиИсходный)
		Или	Не ТипЗнч(СтрокиИсходный) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	ПоляПоиска = Кэш.ОбщиеФункции.РассчитатьЗначение("EDIПараметрыОтбораДляДозаполнения", Контекст.ФайлДанные);
	Для Каждого СтрокаТаблДокИсходный Из СтрокиИсходный Цикл
		ПараметрОбогатить = Неопределено;
		Если Не СтрокаТаблДокИсходный.Свойство("Параметр", ПараметрОбогатить) Тогда
			Продолжить;
		КонецЕсли;
		Фильтр = Кэш.ОбщиеФункции.СбисПараметрыОтбора(Кэш, СтрокаТаблДокИсходный, ПоляПоиска);
		ОтобранныеСтроки = Кэш.ОбщиеФункции.СбисНайтиСтроки(Кэш, СтрокиФормируемый, Фильтр);
		Для Каждого СтрокаОтобрана Из ОтобранныеСтроки Цикл
			Если Не СтрокаОтобрана.Свойство("Параметр") Тогда
				СтрокаОтобрана.Вставить("Параметр", Новый Массив);
			КонецЕсли;
			//Переносим параметры
			Для Каждого КлючИЗначениеПараметр Из ПараметрОбогатить Цикл
				СтруктураПараметр = Новый Структура("Имя, Значение", КлючИЗначениеПараметр.Ключ, КлючИЗначениеПараметр.Значение);
				СтрокаОтобрана.Параметр.Добавить(СтруктураПараметр);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

