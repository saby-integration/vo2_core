
//В качестве доп.Параметров может приходить либо ключ для поиска в источнике, либо структура с описанием, что делать с источником
&НаКлиенте
Процедура УстановитьЗначениеПоКлючу(ДанныеСоответствия, Ключ, ИсточникДанных, ДопПараметры=Неопределено) Экспорт
	Перем КлючПоиска, КлючПриведенияТипа;
	
	ИскатьВИсточнике = Истина;
	Попытка
		ДанныеГенератор = ИсточникДанных;
		Если	Не ТипЗнч(ИсточникДанных) = Тип("Структура")
			И	Не ТипЗнч(ИсточникДанных) = Тип("Массив") Тогда
			ДанныеГенератор = ИсточникДанных;
			ИскатьВИсточнике = Ложь;
		ИначеЕсли ДопПараметры = Неопределено Тогда
			КлючПоиска = Ключ;
		ИначеЕсли ТипЗнч(ДопПараметры) = Тип("Строка") Тогда
			КлючПоиска = ДопПараметры;
		Иначе
			Если ДопПараметры.Свойство("ИскатьВИсточнике") Тогда
				ИскатьВИсточнике = ДопПараметры.ИскатьВИсточнике;
			КонецЕсли;
			Если Не ДопПараметры.Свойство("КлючПоиска", КлючПоиска) Тогда
				КлючПоиска = "";//Нет ключа для поиска
			КонецЕсли;
			ДопПараметры.Свойство("КлючПриведения", КлючПриведенияТипа);
		КонецЕсли;
		
		Если ИскатьВИсточнике Тогда
			ПутьПоиска = СтрЗаменить(КлючПоиска, ".", Символы.ПС);
			Для НомерСтрокиПути = 1 По СтрЧислоСтрок(ПутьПоиска) Цикл
				ДанныеГенератор = ДанныеГенератор[СтрПолучитьСтроку(ПутьПоиска, НомерСтрокиПути)];
			КонецЦикла;
		КонецЕсли;
		Если	ДанныеГенератор = Null
			Или	ДанныеГенератор = Неопределено Тогда//Пустые значения не заполняем. 
			Возврат;
		КонецЕсли;
		
		ДанныеСоответствия.Вставить(Ключ, ГенераторПривестиТип(КлючПриведенияТипа, ДанныеГенератор));
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьСтруктуруАдреса(Кэш, СтруктураАдреса)
	
	Если НЕ СтруктураАдреса.Свойство("АдрРФ") Тогда 
		Если СтруктураАдреса.Свойство("Юридический") Тогда 
			Возврат СтруктураАдреса.Юридический;		
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ СтруктураАдреса.Свойство("АдрИно") Тогда 
		Если СтруктураАдреса.Свойство("Юридический") Тогда 
			Возврат СтруктураАдреса.Юридический;		
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураАдреса;
	
КонецФункции

// Функция приводит значение генератора к формату
//
// Параметры:
//  КлючПриведения		 - Строка	 - Описание для получения форматной строки по логическому смыслу: Количество/Сумма/...
//  ЗначениеПриведения	 - Произв	 - Значение, которое будет вставлено в подстановку
// 
// Возвращаемое значение:
//  Произв - отформатированное значение.
//
&НаКлиенте
Функция ГенераторПривестиТип(КлючПриведения, ЗначениеПриведения)
	
	Если ПараметрыФормы = Неопределено Тогда
		ПараметрыПриведенияТипов = Новый Соответствие; 
		ПараметрыФормы = Новый Структура("ПараметрыПриведения", ПараметрыПриведенияТипов);
		//Описание приведения для количественных параметров
		СоответствиеВставить = Новый Соответствие;
		СоответствиеВставить.Вставить(Тип("Число"), "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧН=0.000; ЧГ=0");
		ПараметрыПриведенияТипов.Вставить("Количество", СоответствиеВставить);
		//Описание приведения для суммовых параметров
		СоответствиеВставить = Новый Соответствие;
		СоответствиеВставить.Вставить(Тип("Число"), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		ПараметрыПриведенияТипов.Вставить("Сумма", СоответствиеВставить);
	КонецЕсли;
	Если ТипЗнч(ЗначениеПриведения) = Тип("Строка") Тогда
		Возврат СокрЛП(ЗначениеПриведения);//Для строки просто обрезать пробелы.
    КонецЕсли;
	ПараметрПоКлючу = ПараметрыФормы.ПараметрыПриведения.Получить(КлючПриведения);
	Если ПараметрПоКлючу = Неопределено Тогда
		Возврат ЗначениеПриведения;
	КонецЕсли;
	ПараметрПривести = ПараметрПоКлючу.Получить(ТипЗнч(ЗначениеПриведения));
	Если ПараметрПривести = Неопределено Тогда
		Возврат ЗначениеПриведения;
	КонецЕсли;
	//Привести к формату
	Возврат Формат(ЗначениеПриведения, ПараметрПривести);
	
КонецФункции

