
&НаКлиенте
Функция СформироватьРазностнуюТабличнуюЧастьТабличнаяЧастьДокумента(ТабличныеДанные)
	
	РазностнаяТабличнаяЧасть = Новый Массив;
	
	Для Каждого ТекСтрока ИЗ ТабличныеДанные Цикл
		Если ТекСтрока.Свойство("ПредСтрТабл") Тогда
			Если НЕ СтрокиТабличнойЧастиРавны(ТекСтрока, ТекСтрока.ПредСтрТабл) Тогда
				РазностнаяТабличнаяЧасть.Добавить(ТекСтрока);	
			КонецЕсли;
		Иначе
			РазностнаяТабличнаяЧасть.Добавить(ТекСтрока);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РазностнаяТабличнаяЧасть;
	
КонецФункции

&НаКлиенте
Функция СтрокиТабличнойЧастиРавны(Строка1, Строка2)
	
	СтрокиРавны = Истина;
	
	Для Каждого ТекПоказатель ИЗ ПолучитьПоказателиСравнения() Цикл
		
		Попытка
			Если ПоказателиРавны(Строка1[ТекПоказатель], Строка2[ТекПоказатель]) Тогда
				Продолжить;	
			Иначе
				СтрокиРавны = Ложь;
				Прервать;
			КонецЕслИ;
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат СтрокиРавны;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПоказателиСравнения()
	
	ПоказателиСравнения = Новый Массив;
	ПоказателиСравнения.Добавить("Акциз");
	ПоказателиСравнения.Добавить("НДС");
	ПоказателиСравнения.Добавить("Сумма");
	ПоказателиСравнения.Добавить("СуммаБезНал");
	
	Возврат ПоказателиСравнения;
	
КонецФункции

&НаКлиенте
Функция ПоказателиРавны(Показатель1, Показатель2)
	
	Если ТипЗнч(Показатель1) <> ТипЗнч(Показатель2) Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	Если ТипЗнч(Показатель1) = Тип("Структура") Тогда
    	Возврат СтруктурыРавны(Показатель1, Показатель2);
	Иначе
		Возврат (Показатель1 = Показатель2);
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция СтруктурыРавны (Структура1, Структура2)
	
	//без рекурсии
	//считаем состав полей одинаковым
	
	Для Каждого ТекПоле из Структура1 Цикл
		Если ТекПоле.Значение <> Структура2[ТекПоле.Ключ] Тогда
			Возврат Ложь;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;	
	
КонецФункции

&НаКлиенте
Процедура СформироватьУвеличениеУменьшение(ТекСтрока, ТекСтрокаДо, ИтогиСоответствие)
	
	Если ТекСтрока.Свойство("Акциз") Тогда
		РасчитатьУвеличениеУменьшениеПоИмени(ТекСтрока.Акциз.Сумма,	ТекСтрокаДо.Акциз.Сумма,	ТекСтрока, "Акциз",		ИтогиСоответствие);
	КонецЕсли;
	Если ТекСтрока.Свойство("НДС") Тогда
		РасчитатьУвеличениеУменьшениеПоИмени(ТекСтрока.НДС.Сумма,	ТекСтрокаДо.НДС.Сумма,		ТекСтрока, "СуммаНДС",	ИтогиСоответствие);
	КонецЕсли;
	РасчитатьУвеличениеУменьшениеПоИмени(ТекСтрока.Сумма,			ТекСтрокаДо.Сумма,			ТекСтрока, "СуммаЦен",	ИтогиСоответствие);
	РасчитатьУвеличениеУменьшениеПоИмени(ТекСтрока.СуммаБезНал,		ТекСтрокаДо.СуммаБезНал,	ТекСтрока, "Стоим",		ИтогиСоответствие);
	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьУвеличениеУменьшениеПоИмени(Знач Значение, Знач ЗначениеДо, ТекСтрока, ИмяРеквизита, ИтогиСоответствие)
	
	Попытка
		ЗначениеЧисло = Число(Значение);
	Исключение
		ЗначениеЧисло = 0;
	КонецПопытки;
	
	Попытка
		ЗначениеДоЧисло = Число(ЗначениеДо);
	Исключение
		ЗначениеДоЧисло = 0;
	КонецПопытки;
	
	УстановитьУвеличениеУменьшение(ЗначениеЧисло, ЗначениеДоЧисло, ТекСтрока, ИмяРеквизита, ИтогиСоответствие);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУвеличениеУменьшение(Значение, ЗначениеДо, ТекСтрока, ИмяРеквизита, ИтогиСоответствие)
	
	Увеличение = 0;
	Уменьшение = 0;
	
	Изменение = ЗначениеДо - Значение;
	
	Если Изменение > 0 Тогда
		Уменьшение = Изменение;	
	ИначеЕсли Изменение < 0 Тогда
		Увеличение = -Изменение;	
	КонецЕсли;
	
	//ФЛК требует заполнения одного из полей
	Если Увеличение <> 0 Тогда
		СумароватьУвеличенияУменьшения( ИмяРеквизита + "Увел", Увеличение, ИтогиСоответствие);
	КонецЕсли;
	
	Если Уменьшение <> 0 Тогда
		ТекСтрока.Вставить(ИмяРеквизита + "Ум", Формат(Уменьшение, "ЧРД=.; ЧН=0.00; ЧГ="));
		СумароватьУвеличенияУменьшения( ИмяРеквизита + "Ум", Уменьшение, ИтогиСоответствие);
	Иначе
		ТекСтрока.Вставить(ИмяРеквизита + "Увел", Формат(Увеличение, "ЧРД=.; ЧН=0.00; ЧГ="));
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СумароватьУвеличенияУменьшения(ИмяРеквизита, Значение, ИтогиСоответствие)
	
	Сумма = ИтогиСоответствие.Получить(ИмяРеквизита);
	
	Если Сумма = Неопределено Тогда
		Сумма = Значение;		
	Иначе		
		Сумма = Сумма + Значение;
	КонецЕсли;
	
	ИтогиСоответствие.Вставить(ИмяРеквизита, Сумма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьУвеличениеУменьшениеИтоги(ТекСтрока, ИтогиСоответствие)
	
	Значение = ИтогиСоответствие.Получить("СтоимУвел");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаБезНДСУвел", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
	КонецЕсли;

	Значение = ИтогиСоответствие.Получить("СтоимУм");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаБезНДСУм", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
	КонецЕсли;
	
	Значение = ИтогиСоответствие.Получить("СуммаЦенУвел");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаУвел", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
	КонецЕсли;

	Значение = ИтогиСоответствие.Получить("СуммаЦенУм");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаУм", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
	КонецЕсли;
	
	Значение = ИтогиСоответствие.Получить("СуммаНДСУвел");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаНДСУвел", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
		ТекСтрока.Вставить("БезНДСУвел", "");
	ИначеЕсли ТекСтрока.Свойство("СуммаУвел") Тогда
		ТекСтрока.Вставить("БезНДСУвел", "без НДС");
	КонецЕсли;

	Значение = ИтогиСоответствие.Получить("СуммаНДСУм");
	Если Не Значение = Неопределено Тогда
		ТекСтрока.Вставить("СуммаНДСУм", Формат(Значение, "ЧРД=.; ЧН=0.00; ЧГ="));
		ТекСтрока.Вставить("БезНДСУм", "");
	ИначеЕсли ТекСтрока.Свойство("СуммаУм") Тогда
		ТекСтрока.Вставить("БезНДСУм", "без НДС");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрослежТоварРасхождение(СведПрослеж, ПредСведПрослеж)
	Перем СтрокаРеализации, РНПТРеализации;
	
	ТаблПрослеж = Новый Массив;
	IndexRnpt = Новый Соответствие;
		
	Для Каждого ТекСтрока ИЗ СведПрослеж Цикл
		
		Марка = Новый Структура("ЕдИзмПрослеж, НаимЕдИзмПрослеж, НомТовПрослеж, КолВЕдПрослеж",
			ТекСтрока.ЕдИзмПрослеж,
			ТекСтрока.НаимЕдИзмПрослеж,
			ТекСтрока.НомТовПрослеж,
			ТекСтрока.КолВЕдПрослеж);
			
		ТаблПрослеж.Добавить(Марка);
			
		IndexRnpt.Вставить(СокрЛП(ТекСтрока.ЕдИзмПрослеж) + "_" + ТекСтрока.НаимЕдИзмПрослеж + "_" + СокрЛП(ТекСтрока.НомТовПрослеж), ТаблПрослеж.ВГраница());
		
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ПредСведПрослеж Цикл
		
		КодЕдИзм = СокрЛП(ТекСтрока.ЕдИзмПрослеж);
		НаименованиеЕдИзм = ТекСтрока.НаимЕдИзмПрослеж;
		НомерПрослежТов = СокрЛП(ТекСтрока.НомТовПрослеж);
		
		ИндексСтроки = IndexRnpt.Получить(КодЕдИзм + "_" + НаименованиеЕдИзм + "_" + НомерПрослежТов);
		
		Если ИндексСтроки <> Неопределено Тогда
			
			Дельта = Число(ТаблПрослеж[ИндексСтроки].КолВЕдПрослеж) - Число(ТекСтрока.КолВЕдПрослеж);
			Если Дельта > 0 Тогда
				ТаблПрослеж[ИндексСтроки].Вставить("УвелКолВЕдПрослеж", Формат(Дельта, "ЧЦ=26; ЧДЦ=11; ЧГ="));
			Иначе
				ТаблПрослеж[ИндексСтроки].Вставить("УмКолВЕдПрослеж", Формат(-Дельта, "ЧЦ=26; ЧДЦ=11; ЧГ="));
			КонецЕсли;
			
			ТаблПрослеж[ИндексСтроки].Вставить("ПредКолВЕдПрослеж", ТекСтрока.КолВЕдПрослеж);
		Иначе   
			Марка = Новый Структура("ЕдИзмПрослеж, НаимЕдИзмПрослеж, НомТовПрослеж, КолВЕдПрослеж, УмКолВЕдПрослеж, ПредКолВЕдПрослеж",
				ТекСтрока.ЕдИзмПрослеж,
				ТекСтрока.НаимЕдИзмПрослеж,
				ТекСтрока.НомТовПрослеж,
				0,
				ТекСтрока.КолВЕдПрослеж,
				ТекСтрока.КолВЕдПрослеж);
			
			ТаблПрослеж.Добавить(Марка);
		КонецЕсли;
		
	КонецЦикла;
	
	СведПрослеж = ТаблПрослеж;
КонецПроцедуры

