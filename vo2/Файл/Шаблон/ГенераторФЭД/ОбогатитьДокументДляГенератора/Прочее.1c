
&НаКлиенте
Функция ОтправительГрузоотправительОнЖе(Кэш, Отправитель, Грузоотправитель) Экспорт
	Перем ГрузоотправительАдрес, ОтправительАдрес;
	
	ГрузоотправительИНН = ПолучитьРеквизитПоИмениСтороны(Кэш, Грузоотправитель, "Грузоотправитель", "ИНН");
	ГрузоотправительКПП = ПолучитьРеквизитПоИмениСтороны(Кэш, Грузоотправитель, "Грузоотправитель", "КПП");
	ОтправительИНН = ПолучитьРеквизитПоИмениСтороны(Кэш, Отправитель, "Отправитель", "ИНН");
	ОтправительКПП = ПолучитьРеквизитПоИмениСтороны(Кэш, Отправитель, "Отправитель", "КПП");
	
	ПроверятьАдреса = 	Грузоотправитель.Свойство("Адрес", ГрузоотправительАдрес) 
					И 	ГрузоотправительАдрес.Количество() 
					И 	Отправитель.Свойство("Адрес", ОтправительАдрес)
					И 	ОтправительАдрес.Количество();

	Если ТипЗнч(ГрузоотправительАдрес) = Тип("Массив") Тогда
		//Считаем первый адрес актуальным
		ГрузоотправительАдрес = ГрузоотправительАдрес[0]
	КонецЕсли;
	СтруктураАдрГрузоотп = ОпределитьСтруктуруАдреса(Кэш, ГрузоотправительАдрес);

	Если ТипЗнч(ОтправительАдрес) = Тип("Массив") Тогда 
		//Считаем первый адрес актуальным
		ОтправительАдрес = ОтправительАдрес[0]
	КонецЕсли;
	СтруктураАдрОтп = ОпределитьСтруктуруАдреса(Кэш, ОтправительАдрес);

	Если (ГрузоотправительИНН = ОтправительИНН) И (ГрузоотправительКПП = ОтправительКПП) Тогда
		Если ПроверятьАдреса Тогда 
			Если СтруктураАдрГрузоотп.Свойство("АдрТекст") И СтруктураАдрОтп.Свойство("АдрТекст") Тогда
				Возврат СтруктураАдрГрузоотп.АдрТекст = СтруктураАдрОтп.АдрТекст; 
			КонецЕсли;
		Иначе
			Возврат Истина
		КонецЕсли;
	КонецЕсли;

	Возврат Ложь;	
КонецФункции

&НаКлиенте
Функция ПолучитьРеквизитПоИмениСтороны(Кэш, Сторона, ИмяСтороны, ИмяРеквизита)
	
	Попытка
		Если Сторона.Свойство("СвЮл") Тогда
			Значение = Сторона.СвЮл[ИмяРеквизита];	
		ИначеЕсли Сторона.Свойство("СвФл") Тогда
			Значение = Сторона.СвФл[ИмяРеквизита];	
		ИначеЕсли Сторона.Свойство("СвИп") Тогда
			Значение = Сторона.СвИп[ИмяРеквизита];	
		Иначе
			Значение = Неопределено;	
		КонецЕсли;
	Исключение
		Значение = Неопределено;	
	КонецПопытки;
	
	Возврат Значение; 
	
КонецФункции

&НаКлиенте
Процедура СформироватьИнфПол(Кэш, ТекСтрока) Экспорт 
	
	мИнфПол = Новый Массив;
	
	Для Каждого Текущий ИЗ ТекСтрока Цикл
		Если Текущий.Ключ = "GTIN" Тогда
			мИнфПол.Добавить(Новый Структура("Имя, Значение", "GTIN", Текущий.Значение));
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ТекСтрока.Свойство("Параметр") Тогда
		Исключения = ПолучитьИсключенияИнфПол();
		Для Каждого ТекПараметр ИЗ ТекСтрока.Параметр Цикл
			
			Если Исключения.Получить(ТекПараметр.Имя) = Истина Тогда
				Продолжить;	
			КонецЕсли;
			
			мИнфПол.Добавить(Новый Структура("Имя, Значение", ТекПараметр.Имя, ТекПараметр.Значение));
			
		КонецЦикла;
	КонецЕсли;
	
	мИнфПол = ПолучитьПараметрыБезПустыхЗаписей(Кэш, мИнфПол);
	
	Если мИнфПол.Количество() <> 0 Тогда
		ТекСтрока.Вставить("ИнфПол", мИнфПол);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыБезПустыхЗаписей(Кэш, МассивПараметров)
	
	МассивПараметровИсходящий = Новый Массив;
	
	Для Каждого ТекСтрока ИЗ МассивПараметров Цикл
		
		Если НЕ ТекСтрока.Свойство("Имя") ИЛИ НЕ ТекСтрока.Свойство("Значение") Тогда
			Продолжить;	
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Значение) Тогда
			Продолжить;	
		КонецЕсли;
		
		МассивПараметровИсходящий.Добавить(Новый Структура("Имя, Значение", ТекСтрока.Имя, ТекСтрока.Значение));
		
	КонецЦикла;
	
	Возврат МассивПараметровИсходящий;
	
КонецФункции

&НаКлиенте
Функция ПолучитьИсключенияИнфПол() Экспорт 
	
	ИсключенияИнфПол = Новый Соответствие;
	ИсключенияИнфПол.Вставить("ИдГосКон", Истина);
	ИсключенияИнфПол.Вставить("СвТранГруз", Истина);
	ИсключенияИнфПол.Вставить("ДатаПер", Истина);
	ИсключенияИнфПол.Вставить("РабОргПрод_Должность", Истина);
	ИсключенияИнфПол.Вставить("РабОргПрод_ФИО", Истина);
	ИсключенияИнфПол.Вставить("ИнЛицо_Должность", Истина);
	ИсключенияИнфПол.Вставить("ИнЛицо_ФИО", Истина);
	ИсключенияИнфПол.Вставить("ИнЛицо_НаимОргПер", Истина);
	ИсключенияИнфПол.Вставить("СвПерВещ", Истина);
	ИсключенияИнфПол.Вставить("НомерГТД", Истина);
	
	Возврат ИсключенияИнфПол;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьСведенияGLNПоИмениСтороны(Кэш, ТекДокумент, ИмяСтороны, МассивПараметров, Ключ)
    Перем Данные;
	
	Если	Не ТекДокумент.Свойство(ИмяСтороны, Данные)
		Или	Не Данные.Свойство("GLN") Тогда
		Возврат;	
	КонецЕсли;
	
	МассивПараметров.Добавить(Новый Структура("Имя, Значение", Ключ, Данные.GLN));
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьПараметрДокументаПоПути(ТекДокумент, МассивПараметров, ПутьПараметра, ИмяПараметра, Кэш)
    Перем Данные;
	
	лПутьПараметра	= СтрЗаменить(ПутьПараметра, ".", Символы.ПС);
	Данные			= ТекДокумент;
	Для Стр = 1 По СтрЧислоСтрок(лПутьПараметра) Цикл
		Если Не Данные.Свойство(СтрПолучитьСтроку(лПутьПараметра, Стр), Данные) Тогда
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	МассивПараметров.Добавить(Новый Структура("Имя, Значение", ИмяПараметра, Данные));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСтрТаблПараметр(Кэш, ТекСтрока) Экспорт 
	
	Если НЕ ТекСтрока.Свойство("Параметр") тогда
		Возврат;	
	КонецЕсли;
	
	Для Каждого ТекПараметр ИЗ ТекСтрока.Параметр Цикл
		
		Если ТекПараметр.Имя = "НомерГТД" Тогда
			ТекСтрока.Вставить("ГТД", СокрЛП(ТекПараметр.Значение));
			Прервать;
		КонецЕсли;
		
	КонецЦикла
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИсключенияОснование() Экспорт 
	
	ИсключенияИнфПол = Новый Соответствие;
	ИсключенияИнфПол.Вставить("ПРД", Истина);
	ИсключенияИнфПол.Вставить("СчФ", Истина);
	ИсключенияИнфПол.Вставить("КСчФ", Истина);
	ИсключенияИнфПол.Вставить("ИспрСчФ", Истина);
	ИсключенияИнфПол.Вставить("ИсхСчФ", Истина);
	ИсключенияИнфПол.Вставить("ИспрИсхСчФ", Истина);
	ИсключенияИнфПол.Вставить("ДокПодтвОтгр", Истина);
	
	Возврат ИсключенияИнфПол;
	
КонецФункции

