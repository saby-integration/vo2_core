
&НаСервере
Функция НовыйНаборЗаписейДБФ(СоединениеСДБФ)
	
	Возврат Новый Структура("СоединениеСДБФ, Номенклатура1С, НоменклатураСБИС, Единицы", СоединениеСДБФ, Новый Массив, Новый Массив, Новый Массив);
	
КонецФункции

&НаСервере
Процедура НаборЗаписейДБФ_Добавить(НаборЗаписейДБФ, Ключ, Значение);
	
	НаборЗаписейДБФ[Ключ].Добавить(Значение);
	
КонецПроцедуры

&НаСервере
Процедура НаборЗаписейДБФ_Записать(НаборЗаписейДБФ);
	
	Для Каждого СтруктураЗаписи Из НаборЗаписейДБФ.Номенклатура1С Цикл
		ЗаписьДБФ_ОписаниеНоменклатура1С_Записать(НаборЗаписейДБФ.СоединениеСДБФ, СтруктураЗаписи);
	КонецЦикла;
	Для Каждого СтруктураЗаписи Из НаборЗаписейДБФ.НоменклатураСБИС Цикл
		ЗаписьДБФ_ОписаниеНоменклатураСБИС_Записать(НаборЗаписейДБФ.СоединениеСДБФ, СтруктураЗаписи);
	КонецЦикла;
	Для Каждого СтруктураЗаписи Из НаборЗаписейДБФ.Единицы Цикл
		ЗаписьДБФ_ОписаниеЕдиница1С_Записать(НаборЗаписейДБФ.СоединениеСДБФ, СтруктураЗаписи);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НовыйЗаписьДБФ_ОписаниеНоменклатураСБИС(ИдЗаписи)
	
	Возврат Новый Структура("ID, NAME", ИдЗаписи);
	
КонецФункции

&НаСервере
Процедура ЗаписьДБФ_ОписаниеНоменклатураСБИС_Установить(СтруктураЗаписиСБИС, Ключ, Значение)
	Перем ЗначениеВЗапись;
	
	Если	Значение = Неопределено
		Или	Значение = Null Тогда
		ЗначениеВЗапись = "";
	Иначе
		ЗначениеВЗапись = Значение;
	КонецЕсли;
	
	Если	Ключ = "Имя" Тогда
		СтруктураЗаписиСБИС.NAME	= ЗначениеВЗапись;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьДБФ_ОписаниеНоменклатураСБИС_Записать(СоединениеСДБФ, СтруктураЗаписи)
	
	СоединениеБД = МодульОбъектаСервер().РаботаСДБФ_ПолучитьСоединениеБД(ПараметрыСоединения.РаботаСДБФ, СоединениеСДБФ);

	ШаблонПоиска = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонПоискаЗаписиСБИС");
	ШаблонПоиска = СтрЗаменить(ШаблонПоиска, "{ID}", СтруктураЗаписи.ID);

	//Проверить наличие корневой записи
	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;
	RecordSet.Open(ШаблонПоиска, СоединениеБД, 2, 3);
	
	Если Recordset.EOF Тогда
		ШаблонДобавить = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонДобавленияКорневойЗаписи");
		Для Каждого КлючИЗначениеЗаписи Из СтруктураЗаписи Цикл
			ШаблонДобавить = СтрЗаменить(ШаблонДобавить, "{" + КлючИЗначениеЗаписи.Ключ + "}", КлючИЗначениеЗаписи.Значение);
		КонецЦикла;
		СоединениеБД.Execute(ШаблонДобавить);
	КонецЕсли;
	RecordSet.Close();

КонецПроцедуры

&НаСервере
Функция НовыйЗаписьДБФ_ОписаниеНоменклатура1С(ИдЗаписи)
	
	Возврат Новый Структура("KEY_ID, N1C_ID, N1C_TY, C1C_ID, C1C_TY, GTIN", ИдЗаписи, "", "", "", "", "");
	
КонецФункции

&НаСервере
Процедура ЗаписьДБФ_ОписаниеНоменклатура1С_Установить(СтруктураЗаписиСБИС, КлючЗаписать, ЗначениеВходящее)
	Перем ЗначениеВЗапись;
	
	ЗначениеВЗапись = ЗначениеВходящее;
	Если Не ЗначениеЗаполнено(ЗначениеВЗапись) Тогда
		ЗначениеВЗапись = "";
	КонецЕсли;
	
	Если	КлючЗаписать = "Номенклатура" Тогда
		Попытка
			СтруктураЗаписиСБИС.N1C_ID	= Строка(ЗначениеВЗапись.УникальныйИдентификатор());
			СтруктураЗаписиСБИС.N1C_TY	= ПредставлениеТипаПоСсылке(ЗначениеВЗапись, "Номенклатура");
		Исключение
			//Не ссылка
			СтруктураЗаписиСБИС.N1C_ID	= "";
			СтруктураЗаписиСБИС.N1C_TY	= "";
		КонецПопытки;
	ИначеЕсли	КлючЗаписать = "Характеристика" Тогда
		Попытка
			СтруктураЗаписиСБИС.C1C_ID	= Строка(ЗначениеВЗапись.УникальныйИдентификатор());
			СтруктураЗаписиСБИС.C1C_TY	= ПредставлениеТипаПоСсылке(ЗначениеВЗапись, "ХарактеристикиНоменклатуры");
		Исключение
			//Не ссылка
			СтруктураЗаписиСБИС.C1C_ID	= "";
			СтруктураЗаписиСБИС.C1C_TY	= "";
		КонецПопытки;
	ИначеЕсли	СтруктураЗаписиСБИС.Свойство(КлючЗаписать) Тогда
		СтруктураЗаписиСБИС[КлючЗаписать] = ЗначениеВЗапись;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьДБФ_ОписаниеНоменклатура1С_Записать(СоединениеСДБФ, СтруктураЗаписи)
	
	СоединениеБД = МодульОбъектаСервер().РаботаСДБФ_ПолучитьСоединениеБД(ПараметрыСоединения.РаботаСДБФ, СоединениеСДБФ);

	ШаблонПоиска = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонПоискаЗаписи1С");
	Для Каждого КлючИЗначениеЗаписи Из СтруктураЗаписи Цикл
		ШаблонПоиска = СтрЗаменить(ШаблонПоиска, "{" + КлючИЗначениеЗаписи.Ключ + "}", КлючИЗначениеЗаписи.Значение);
	КонецЦикла;
	
	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;
	RecordSet.Open(ШаблонПоиска, СоединениеБД, 2, 3);
	Если Recordset.EOF Тогда
		ШаблонДобавить = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонДобавленияЗаписи1С");
		Для Каждого КлючИЗначениеЗаписи Из СтруктураЗаписи Цикл
			ШаблонДобавить = СтрЗаменить(ШаблонДобавить, "{" + КлючИЗначениеЗаписи.Ключ + "}", КлючИЗначениеЗаписи.Значение);
		КонецЦикла;
		СоединениеБД.Execute(ШаблонДобавить);
	Иначе
		Recordset.Fields("C1C_TY").value	= СтруктураЗаписи.C1C_TY;
		Recordset.Fields("N1C_TY").value	= СтруктураЗаписи.N1C_TY;
		Recordset.Fields("GTIN").value		= СтруктураЗаписи.GTIN;
		RecordSet.Update();
	КонецЕсли;
	RecordSet.Close();

КонецПроцедуры

&НаСервере
Функция НовыйЗаписьДБФ_ОписаниеЕдиница1С(ИдЗаписи)
	
	Возврат Новый Структура("KEY_ID, USBIS_ID, USBIS_NM, U1C_ID, U1C_TY, RATIO", ИдЗаписи, "", "", "", "", "1");
	
КонецФункции

&НаСервере
Процедура ЗаписьДБФ_ОписаниеЕдиница1С_Установить(СтруктураЗаписиЕдиница, КлючЗаписать, ЗначениеВходящее)
	Перем ЗначениеВЗапись;
	
	ЗначениеВЗапись = ЗначениеВходящее;
	Если Не ЗначениеЗаполнено(ЗначениеВЗапись) Тогда
		ЗначениеВЗапись = "";
	КонецЕсли;
	
	Если 		КлючЗаписать = "ИдСБИС" Тогда
		СтруктураЗаписиЕдиница.USBIS_ID	= ЗначениеВЗапись;
	ИначеЕсли	КлючЗаписать = "ИмяСБИС" Тогда
		СтруктураЗаписиЕдиница.USBIS_NM	= ЗначениеВЗапись;
	ИначеЕсли	КлючЗаписать = "Единица" Тогда
		Попытка
			СтруктураЗаписиЕдиница.U1C_ID	= Строка(ЗначениеВЗапись.УникальныйИдентификатор());
			СтруктураЗаписиЕдиница.U1C_TY	= ПредставлениеТипаПоСсылке(ЗначениеВЗапись, "Единицы");
		Исключение
			//Не ссылка
			СтруктураЗаписиЕдиница.U1C_ID	= "";
			СтруктураЗаписиЕдиница.U1C_TY	= "";
		КонецПопытки;
	ИначеЕсли	КлючЗаписать = "Коэффициент" Тогда
		Если ЗначениеВЗапись = "" Тогда
			ЗначениеВЗапись = "1";
		КонецЕсли;
		СтруктураЗаписиЕдиница.RATIO = ЗначениеВЗапись;
	ИначеЕсли	СтруктураЗаписиЕдиница.Свойство(КлючЗаписать) Тогда
		СтруктураЗаписиЕдиница[КлючЗаписать] = ЗначениеВЗапись;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписьДБФ_ОписаниеЕдиница1С_Записать(СоединениеСДБФ, СтруктураЗаписи)
	
	СоединениеБД = МодульОбъектаСервер().РаботаСДБФ_ПолучитьСоединениеБД(ПараметрыСоединения.РаботаСДБФ, СоединениеСДБФ);

	ШаблонПоиска = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонПоискаЕдиницы");
	Для Каждого КлючИЗначениеЗаписи Из СтруктураЗаписи Цикл
		ШаблонПоиска = СтрЗаменить(ШаблонПоиска, "{" + КлючИЗначениеЗаписи.Ключ + "}", КлючИЗначениеЗаписи.Значение);
	КонецЦикла;
	
	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;
	RecordSet.Open(ШаблонПоиска, СоединениеБД, 2, 3);
	Если Recordset.EOF Тогда
		ШаблонДобавить = СоединениеСДБФ.ШаблоныЗапросов.Получить("ШаблонДобавленияЕдиницы");
		Для Каждого КлючИЗначениеЗаписи Из СтруктураЗаписи Цикл
			ШаблонДобавить = СтрЗаменить(ШаблонДобавить, "{" + КлючИЗначениеЗаписи.Ключ + "}", КлючИЗначениеЗаписи.Значение);
		КонецЦикла;
		СоединениеБД.Execute(ШаблонДобавить);
	Иначе
		Recordset.Fields("USBIS_NM").value	= СтруктураЗаписи.USBIS_NM;
		Recordset.Fields("RATIO").value		= СтруктураЗаписи.RATIO;
		RecordSet.Update();
	КонецЕсли;
	RecordSet.Close();

КонецПроцедуры

