
&НаСервере
Функция ВосстановитьСсылкуИзСтрокиДБФ(RecordSetDBF, КлючТипа, КлючЗначения)
	
	Попытка
		ЗначениеСсылки	= ПолучитьЗначениеИзРекордСет(RecordSetDBF, КлючЗначения);
		ТипСсылки		= ПолучитьЗначениеИзРекордСет(RecordSetDBF, КлючТипа);
	Исключение
		МодульОбъектаСервер().ВызватьСбисИсключениеСервер(ИнформацияОбОшибке(), "СопоставлениеНоменклатуры_ДБФ.ВосстановитьСсылкуИзСтрокиДБФ");
	КонецПопытки;
	Если	Не	(	ЗначениеЗаполнено(ЗначениеСсылки)
				И	ЗначениеЗаполнено(ТипСсылки)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	УИДНоменклатуры = Новый УникальныйИдентификатор(СокрЛП(ЗначениеСсылки));
	Возврат Справочники[СокрЛП(ТипСсылки)].ПолучитьСсылку(УИДНоменклатуры);	
	
КонецФункции

&НаСервере
Функция ПредставлениеТипаПоСсылке(СправочникДокументСсылка, КлючТипа)
	
	ТипЗнчСсылки		= ТипЗнч(СправочникДокументСсылка);
	ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить(КлючТипа + "_" + ТипЗнчСсылки);
	Если ПредставлениеТипа = Неопределено Тогда
		Если ТипЗнчСсылки = Тип("Строка") Тогда
			ПредставлениеТипа = "Строка";
		ИначеЕсли Метаданные.НайтиПоТипу(ТипЗнчСсылки) = Неопределено Тогда
			ПредставлениеТипа = ПараметрыСоединения.Типы[КлючТипа];
		Иначе
			ПредставлениеТипа = СправочникДокументСсылка.Метаданные().Имя;
		КонецЕсли;
		ПараметрыСоединения.СоответствиеТипов.Вставить(КлючТипа + "_" + ТипЗнчСсылки, ПредставлениеТипа);
	КонецЕсли;
	Возврат ПредставлениеТипа;

КонецФункции

&НаСервере
Функция ПолучитьЗначениеИзРекордСет(RecordSet, Ключ, ЗначениеПоУмолчанию = "")
	
	Попытка
		ЗначениеВРекорд = RecordSet.Fields(Ключ).value;
	Исключение
		МодульОбъектаСервер().ВызватьСбисИсключениеСервер(ИнформацияОбОшибке(), "СопоставлениеНоменклатуры_ДБФ.ПолучитьЗначениеИзРекордСет",,,"В рекордсет отсутствует поле " + Ключ);
	КонецПопытки;
	Если ЗначениеВРекорд = Null Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	Возврат ЗначениеВРекорд;
	
КонецФункции

// Метод приводит старый формат строк номенклатуры к новому
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		СписокНоменклатураПреобразовать - Массив структур со строками сопоставления
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция ПривестиФорматПоискаСопоставления(СписокНоменклатураПреобразовать, Кэш)
	
	НоменклатураНайти = Новый Массив;
	Для Каждого СтрНоменклатураПоставщика Из СписокНоменклатураПреобразовать Цикл
		НоменклатураНайти.Добавить(ПривестиФорматПоискаСопоставленияПоСтроке(СтрНоменклатураПоставщика, Кэш));
	КонецЦикла;
	ПараметрыОбработкиНоменклатурыНовые = Новый Структура;
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Найти", НоменклатураНайти);
	Возврат ПараметрыОбработкиНоменклатурыНовые;

КонецФункции

&НаКлиенте
Функция ПривестиФорматПоискаСопоставленияПоСтроке(СтрНоменклатураПоставщика, Кэш)
	Перем НоменклатураНазвание, НоменклатураСсылка, ID;
	
	Если СтрНоменклатураПоставщика.Свойство("Название", НоменклатураНазвание) Тогда
		НоменклатураНазвание = Лев(СокрЛП(НоменклатураНазвание), 240);
	Иначе
		НоменклатураНазвание = "";
	КонецЕсли;
	Если	Не	(	(	СтрНоменклатураПоставщика.Свойство("КодПокупателя", ID)
					Или	СтрНоменклатураПоставщика.Свойство("Идентификатор", ID))
				И	ЗначениеЗаполнено(ID)
				И	Не	ID = "-") Тогда
		ID = НоменклатураНазвание;
	КонецЕсли;
	
	ID = СбисИдентификатор(Лев(ID, 240));	
	
	//НоменклатураСопоставление
	НоменклатураСопоставление = Новый Структура("ИдСБИС, ИмяСБИС, ИС", ID, НоменклатураНазвание, Новый Соответствие);
	Если	стрНоменклатураПоставщика.Свойство("Номенклатура", НоменклатураСсылка)
			И	ЗначениеЗаполнено(НоменклатураСсылка) Тогда
		СтрНоменклатура = Новый Структура("Характеристики, GTIN", Новый Массив);	
		Если СтрНоменклатураПоставщика.Свойство("GTIN", СтрНоменклатура.GTIN) Тогда
			СтрНоменклатура.GTIN = СокрЛП(СтрНоменклатура.GTIN);
		КонецЕсли;
		//Если	СтрНоменклатураПоставщика.Свойство("Характеристика")
		//	И	ЗначениеЗаполнено(ХарактеристикаСопоставление.Ссылка) Тогда
		//	СтрНоменклатура.Характеристики.Добавить(ХарактеристикаСопоставление.Ссылка);
		//КонецЕсли;
		НоменклатураСопоставление.ИС.Вставить(НоменклатураСсылка, СтрНоменклатура);
	КонецЕсли;
	
	////ХарактеристикаСопоставление
	//ХарактеристикаСопоставление	= Новый Структура("ИдСБИС, Ссылка");
	//Если	СтрНоменклатураПоставщика.Свойство("Характеристика")
	//	И	ЗначениеЗаполнено(СтрНоменклатураПоставщика.Характеристика) Тогда
	//	ХарактеристикаСопоставление.Ссылка = СтрНоменклатураПоставщика.Характеристика;
	//КонецЕсли;
	
	//ЕдиницаСопоставление
	ЕдиницаСопоставление = Новый Структура("СБИС, ИС", Новый Соответствие, Новый Соответствие);
	
	Если	СтрНоменклатураПоставщика.Свойство("ЕдИзмОрг")
		И	ЗначениеЗаполнено(СтрНоменклатураПоставщика.ЕдИзмОрг) Тогда
		ЕдиницаСопоставление = Новый Структура("ИдСБИС, Коэффициент", "", "");
		Если	(	СтрНоменклатураПоставщика.Свойство("ЕдИзмОКЕИ", ЕдиницаСопоставление.ИдСБИС)
				И	ЗначениеЗаполнено(ЕдиницаСопоставление.ИдСБИС))
			Или	(	СтрНоменклатураПоставщика.Свойство("ЕдИзмНаименование", ЕдиницаСопоставление.ИдСБИС)
				И	ЗначениеЗаполнено(ЕдиницаСопоставление.ИдСБИС)) Тогда
			ЕдиницаСопоставление.ИдСБИС	= СокрЛП(ЕдиницаСопоставление.ИдСБИС);
		Иначе
			ЕдиницаСопоставление.ИдСБИС	= СокрЛП(СтрНоменклатураПоставщика.ОКЕИ);
		КонецЕсли;
		ЕдиницаСопоставление.ИС.Вставить(СтрНоменклатураПоставщика.ЕдИзмОрг, ЕдиницаСопоставление);
	КонецЕсли;
 			
	Возврат Новый Структура("Номенклатура, Единицы", НоменклатураСопоставление, ЕдиницаСопоставление);

КонецФункции

// Метод приводит старый формат строк номенклатуры к новому
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		СписокНоменклатураПреобразовать - Массив структур со строками сопоставления
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция ПривестиФорматЗаписиСопоставления(СписокНоменклатураПреобразовать, Кэш)
	Перем НоменклатураНазвание, НоменклатураСсылка;
	НоменклатураОбновить= Новый Массив;
	НоменклатураУдалить = Новый Массив;
	Для Каждого СтрНоменклатураПоставщика Из СписокНоменклатураПреобразовать Цикл
		Если СтрНоменклатураПоставщика.Свойство("Название", НоменклатураНазвание) Тогда
			НоменклатураНазвание = Лев(СокрЛП(НоменклатураНазвание), 240);
		Иначе
			НоменклатураНазвание = "";
		КонецЕсли;
		Если			СтрНоменклатураПоставщика.Свойство("КодПокупателя")		
				И		ЗначениеЗаполнено(Лев(СтрНоменклатураПоставщика.КодПокупателя, 240))
				И	Не	СтрНоменклатураПоставщика.КодПокупателя = "-" Тогда
			ID = Лев(СтрНоменклатураПоставщика.КодПокупателя, 240);	
		ИначеЕсли		ЗначениеЗаполнено(Лев(СтрНоменклатураПоставщика.Идентификатор, 240))
				И	Не	СтрНоменклатураПоставщика.Идентификатор = "-" Тогда
			ID = Лев(СтрНоменклатураПоставщика.Идентификатор, 240);
		Иначе
			ID = НоменклатураНазвание;
		КонецЕсли;
		
		ID = СбисИдентификатор(ID);
		
		Если ID = "" Тогда
			Продолжить;
		ИначеЕсли	Не стрНоменклатураПоставщика.Свойство("Номенклатура", НоменклатураСсылка)
				Или	Не ЗначениеЗаполнено(НоменклатураСсылка) Тогда
			//Не выбрали номенклатуру для сопоставления
			НоменклатураУдалить.Добавить(Новый Структура("ID", ID));
			Продолжить;
		КонецЕсли;
		
		//НоменклатураСопоставление
		НоменклатураСопоставление = НовыйОписаниеСопоставленияНоменклатуры(ID, НоменклатураНазвание);
		Если ЗначениеЗаполнено(НоменклатураСсылка) Тогда
			
			ДопПараметрыЗаполнить = Новый Структура;
			СопоставлениеДляНоменклатуры = НовыйСопоставлениеДляНоменклатуры();
			
			СопоставлениеДляНоменклатуры_Заполнить(СопоставлениеДляНоменклатуры, СтрНоменклатураПоставщика, "GTIN",				ДопПараметрыЗаполнить);
			СопоставлениеДляНоменклатуры_Заполнить(СопоставлениеДляНоменклатуры, СтрНоменклатураПоставщика, "Характеристика",	ДопПараметрыЗаполнить);
			ОписаниеСопоставленияНоменклатуры_Вставить(НоменклатураСопоставление, НоменклатураСсылка, СопоставлениеДляНоменклатуры);
		КонецЕсли;
		
		//ЕдиницаСопоставление
		ЕдиницаСопоставление = НовыйОписаниеСопоставленияЕдиниц();
		Если	СтрНоменклатураПоставщика.Свойство("ЕдИзмОрг")
			И	ЗначениеЗаполнено(СтрНоменклатураПоставщика.ЕдИзмОрг) Тогда
			ЗаписьСопоставлениеЕдиница = НовыйСопоставлениеДляЕдиницы();
			СопоставлениеДляЕдиницы_Заполнить(ЗаписьСопоставлениеЕдиница, СтрНоменклатураПоставщика, "ЕдИзмОКЕИ",	Новый Структура("Ключ", "ИдСБИС"));
			СопоставлениеДляЕдиницы_Заполнить(ЗаписьСопоставлениеЕдиница, СтрНоменклатураПоставщика, "ЕдИзм",		Новый Структура("Ключ", "ИмяСБИС"));
			СопоставлениеДляЕдиницы_Заполнить(ЗаписьСопоставлениеЕдиница, СтрНоменклатураПоставщика, "Коэффициент",	Новый Структура);
			ОписаниеСопоставленияЕдиниц_Вставить(ЕдиницаСопоставление, СтрНоменклатураПоставщика.ЕдИзмОрг, ЗаписьСопоставлениеЕдиница);
		КонецЕсли;
				
		НоменклатураОбновить.Добавить(Новый Структура("Номенклатура, Единица", НоменклатураСопоставление, ЕдиницаСопоставление));
	КонецЦикла;
	ПараметрыОбработкиНоменклатурыНовые = Новый Структура;
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Обновить",НоменклатураОбновить);
	Возврат ПараметрыОбработкиНоменклатурыНовые;

КонецФункции

//Функция вырезает всё лишнее от ИД для ДБФ
&НаКлиентеНаСервереБезКонтекста
Функция СбисИдентификатор(СыраяСтрокаИд)
	Возврат СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(
					СыраяСтрокаИд	,"«","<")
									,"»",">")
									,"""","")
									,"'","")
									,"[","")
									,"]","")
									,"—","-")
									,"’","")
									,"“","")
									,"”","")
									,"®",""));
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючКонтрагентаСопоставления(СтруктураКонтрагент)
	Перем СвЮлФл, КлючДляСопоставления;
	Если СтруктураКонтрагент = Неопределено Тогда
		ВызватьИсключение("Неопределен контрагент. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не	СтруктураКонтрагент.Свойство("СвЮЛ", СвЮлФл)
			И	Не	СтруктураКонтрагент.Свойство("СвФЛ", СвЮлФл) Тогда
		ВызватьИсключение("Нет сведений о контрагенте. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не СвЮлФл.Свойство("ИНН", КлючДляСопоставления)
			Или	Не ЗначениеЗаполнено(КлючДляСопоставления) Тогда
		ВызватьИсключение("Не заполнен ИНН контрагента. Сопоставление номенклатуры невозможно.");
	КонецЕсли;
	Возврат КлючДляСопоставления;
КонецФункции

