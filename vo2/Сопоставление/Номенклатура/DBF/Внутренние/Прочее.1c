
// Метод приводит старый формат строк номенклатуры к новому
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		СписокНоменклатураПреобразовать - Массив структур со строками сопоставления
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция ПривестиФорматПоискаСопоставления(СписокНоменклатураПреобразовать, Кэш)
	
	НоменклатураНайти = Новый Массив;
	Для Каждого СтрНоменклатураПоставщика Из СписокНоменклатураПреобразовать Цикл
		НоменклатураНайти.Добавить(ПривестиФорматПоискаСопоставленияПоСтроке(СтрНоменклатураПоставщика, Кэш));
	КонецЦикла;
	ПараметрыОбработкиНоменклатурыНовые = Новый Структура;
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Найти", НоменклатураНайти);
	Возврат ПараметрыОбработкиНоменклатурыНовые;

КонецФункции

&НаКлиенте
Функция ПривестиФорматПоискаСопоставленияПоСтроке(СтрНоменклатураПоставщика, Кэш)
	Перем НоменклатураНазвание, НоменклатураСсылка, ID;
	
	Если СтрНоменклатураПоставщика.Свойство("Название", НоменклатураНазвание) Тогда
		НоменклатураНазвание = Лев(СокрЛП(НоменклатураНазвание), 240);
	Иначе
		НоменклатураНазвание = "";
	КонецЕсли;
	Если	Не	(	(	СтрНоменклатураПоставщика.Свойство("КодПокупателя", ID)
					Или	СтрНоменклатураПоставщика.Свойство("Идентификатор", ID))
				И	ЗначениеЗаполнено(ID)
				И	Не	ID = "-") Тогда
		ID = НоменклатураНазвание;
	КонецЕсли;
	
	ID = СбисИдентификатор(Лев(ID, 240));	
	
	//НоменклатураСопоставление
	НоменклатураСопоставление = Новый Структура("ИдСБИС, ИмяСБИС, Ссылка, GTIN", ID, НоменклатураНазвание);
	Если	стрНоменклатураПоставщика.Свойство("Номенклатура", НоменклатураСсылка)
			И	ЗначениеЗаполнено(НоменклатураСсылка) Тогда
		НоменклатураСопоставление.Ссылка = НоменклатураСсылка;
		Если стрНоменклатураПоставщика.Свойство("GTIN", НоменклатураСопоставление.GTIN) Тогда
			НоменклатураСопоставление.GTIN = СокрЛП(НоменклатураСопоставление.GTIN);
		КонецЕсли;
	КонецЕсли;
	
	//ХарактеристикаСопоставление
	ХарактеристикаСопоставление	= Новый Структура("ИдСБИС, Ссылка");
	стрНоменклатураПоставщика.Свойство("Характеристика", ХарактеристикаСопоставление.Ссылка);
	
	//ЕдиницаСопоставление
	ЕдиницаСопоставление = Новый Структура("ИдСБИС, ИмяСБИС, Ссылка, Коэффициент", "", "");
	стрНоменклатураПоставщика.Свойство("ЕдИзмОрг", ЕдиницаСопоставление.Ссылка);
	Если стрНоменклатураПоставщика.Свойство("ЕдИзм", ЕдиницаСопоставление.ИмяСБИС) Тогда
		ЕдиницаСопоставление.ИмяСБИС = СокрЛП(ЕдиницаСопоставление.ИмяСБИС);
	КонецЕсли;
	Если	стрНоменклатураПоставщика.Свойство("ЕдИзмОКЕИ", ЕдиницаСопоставление.ИдСБИС)
		И	ЗначениеЗаполнено(ЕдиницаСопоставление.ИдСБИС) Тогда
		ЕдиницаСопоставление.ИдСБИС	= СокрЛП(ЕдиницаСопоставление.ИдСБИС);
	КонецЕсли;
			
	Возврат Новый Структура("Номенклатура, Характеристика, Единица", НоменклатураСопоставление, ХарактеристикаСопоставление, ЕдиницаСопоставление);

КонецФункции

// Метод приводит старый формат строк номенклатуры к новому
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		СписокНоменклатураПреобразовать - Массив структур со строками сопоставления
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция ПривестиФорматЗаписиСопоставления(СписокНоменклатураПреобразовать, Кэш)
	Перем НоменклатураНазвание, НоменклатураСсылка;
	НоменклатураОбновить= Новый Массив;
	НоменклатураУдалить = Новый Массив;
	Для Каждого стрНоменклатураПоставщика Из СписокНоменклатураПреобразовать Цикл
		Если стрНоменклатураПоставщика.Свойство("Название", НоменклатураНазвание) Тогда
			НоменклатураНазвание = Лев(СокрЛП(НоменклатураНазвание), 240);
		Иначе
			НоменклатураНазвание = "";
		КонецЕсли;
		Если			стрНоменклатураПоставщика.Свойство("КодПокупателя")		
				И		ЗначениеЗаполнено(Лев(стрНоменклатураПоставщика.КодПокупателя, 240))
				И	Не	стрНоменклатураПоставщика.КодПокупателя = "-" Тогда
			ID = Лев(стрНоменклатураПоставщика.КодПокупателя, 240);	
		ИначеЕсли		ЗначениеЗаполнено(Лев(стрНоменклатураПоставщика.Идентификатор, 240))
				И	Не	стрНоменклатураПоставщика.Идентификатор = "-" Тогда
			ID = Лев(стрНоменклатураПоставщика.Идентификатор, 240);
		Иначе
			ID = НоменклатураНазвание;
		КонецЕсли;
		
		ID = СбисИдентификатор(ID);
		
		Если ID = "" Тогда
			Продолжить;
		ИначеЕсли	Не стрНоменклатураПоставщика.Свойство("Номенклатура", НоменклатураСсылка)
				Или	Не ЗначениеЗаполнено(НоменклатураСсылка) Тогда
			//Не выбрали номенклатуру для сопоставления
			НоменклатураУдалить.Добавить(Новый Структура("ID", ID));
			Продолжить;
		КонецЕсли;
		
		//НоменклатураСопоставление
		НоменклатураСопоставление	= Новый Структура("ИдСБИС, ИмяСБИС, Ссылка, GTIN", ID, НоменклатураНазвание, НоменклатураСсылка);
		Если стрНоменклатураПоставщика.Свойство("GTIN", НоменклатураСопоставление.GTIN) Тогда
			НоменклатураСопоставление.GTIN = СокрЛП(НоменклатураСопоставление.GTIN);
		КонецЕсли;
		
		//ХарактеристикаСопоставление
		ХарактеристикаСопоставление	= Новый Структура("Ссылка", стрНоменклатураПоставщика.Характеристика);	
		
		//ЕдиницаСопоставление
		ЕдиницаСопоставление = Новый Структура("ИдСБИС, ИмяСБИС, Ссылка, Коэффициент", "", "");
		стрНоменклатураПоставщика.Свойство("ЕдИзмОрг", ЕдиницаСопоставление.Ссылка);
		Если стрНоменклатураПоставщика.Свойство("ЕдИзм", ЕдиницаСопоставление.ИмяСБИС) Тогда
			ЕдиницаСопоставление.ИмяСБИС = СокрЛП(ЕдиницаСопоставление.ИмяСБИС);
		КонецЕсли;
		Если	стрНоменклатураПоставщика.Свойство("ЕдИзмОКЕИ", ЕдиницаСопоставление.ИдСБИС)
			И	ЗначениеЗаполнено(ЕдиницаСопоставление.ИдСБИС) Тогда
			ЕдиницаСопоставление.ИдСБИС	= СокрЛП(ЕдиницаСопоставление.ИдСБИС);
		Иначе
			ЕдиницаСопоставление.ИдСБИС	= ЕдиницаСопоставление.ИмяСБИС;
		КонецЕсли;
		Если	стрНоменклатураПоставщика.Свойство("Коэффициент", ЕдиницаСопоставление.Коэффициент)
			И	ЗначениеЗаполнено(ЕдиницаСопоставление.Коэффициент) Тогда
			ЕдиницаСопоставление.Коэффициент = Лев(ЕдиницаСопоставление.Коэффициент, 240);
		Иначе
			ЕдиницаСопоставление.Коэффициент = "1";
		КонецЕсли;
				
		НоменклатураОбновить.Добавить(Новый Структура("Номенклатура, Характеристика, Единица", НоменклатураСопоставление, ХарактеристикаСопоставление, ЕдиницаСопоставление));
	КонецЦикла;
	ПараметрыОбработкиНоменклатурыНовые = Новый Структура;
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Обновить",НоменклатураОбновить);
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Удалить",	НоменклатураУдалить);
	Возврат ПараметрыОбработкиНоменклатурыНовые;

КонецФункции

//Функция вырезает всё лишнее от ИД для ДБФ
&НаКлиентеНаСервереБезКонтекста
Функция СбисИдентификатор(СыраяСтрокаИд)
	Возврат СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(
					СыраяСтрокаИд	,"«","<")
									,"»",">")
									,"""","")
									,"'","")
									,"[","")
									,"]","")
									,"—","-")
									,"’","")
									,"“","")
									,"”","")
									,"®",""));
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючКонтрагентаСопоставления(СтруктураКонтрагент)
	Перем СвЮлФл, КлючДляСопоставления;
	Если СтруктураКонтрагент = Неопределено Тогда
		ВызватьИсключение("Неопределен контрагент. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не	СтруктураКонтрагент.Свойство("СвЮЛ", СвЮлФл)
			И	Не	СтруктураКонтрагент.Свойство("СвФЛ", СвЮлФл) Тогда
		ВызватьИсключение("Нет сведений о контрагенте. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не СвЮлФл.Свойство("ИНН", КлючДляСопоставления)
			Или	Не ЗначениеЗаполнено(КлючДляСопоставления) Тогда
		ВызватьИсключение("Не заполнен ИНН контрагента. Сопоставление номенклатуры невозможно.");
	КонецЕсли;
	Возврат КлючДляСопоставления;
КонецФункции

