
&НаСервере
Функция ВосстановитьСсылкуИзСтрокиДБФ(RecordSetDBF, КлючТипа, КлючЗначения)
	
	Попытка
		ЗначениеСсылки	= ПолучитьЗначениеИзРекордСет(RecordSetDBF, КлючЗначения);
		ТипСсылки		= ПолучитьЗначениеИзРекордСет(RecordSetDBF, КлючТипа);
	Исключение
		МодульОбъектаСервер().ВызватьСбисИсключениеСервер(ИнформацияОбОшибке(), "СопоставлениеНоменклатуры_ДБФ.ВосстановитьСсылкуИзСтрокиДБФ");
	КонецПопытки;
	Если	Не	(	ЗначениеЗаполнено(ЗначениеСсылки)
				И	ЗначениеЗаполнено(ТипСсылки)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	УИДНоменклатуры = Новый УникальныйИдентификатор(СокрЛП(ЗначениеСсылки));
	Возврат Справочники[СокрЛП(ТипСсылки)].ПолучитьСсылку(УИДНоменклатуры);	
	
КонецФункции

&НаСервере
Функция ПредставлениеТипаПоСсылке(СправочникДокументСсылка, КлючТипа)
	
	ТипЗнчСсылки		= ТипЗнч(СправочникДокументСсылка);
	ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить(КлючТипа + "_" + ТипЗнчСсылки);
	Если ПредставлениеТипа = Неопределено Тогда
		Если ТипЗнчСсылки = Тип("Строка") Тогда
			ПредставлениеТипа = "Строка";
		ИначеЕсли Метаданные.НайтиПоТипу(ТипЗнчСсылки) = Неопределено Тогда
			ПредставлениеТипа = ПараметрыСоединения.Типы[КлючТипа];
		Иначе
			ПредставлениеТипа = СправочникДокументСсылка.Метаданные().Имя;
		КонецЕсли;
		ПараметрыСоединения.СоответствиеТипов.Вставить(КлючТипа + "_" + ТипЗнчСсылки, ПредставлениеТипа);
	КонецЕсли;
	Возврат ПредставлениеТипа;

КонецФункции

&НаСервере
Функция ПолучитьЗначениеИзРекордСет(RecordSet, Ключ, ЗначениеПоУмолчанию = "")
	
	Попытка
		ЗначениеВРекорд = RecordSet.Fields(Ключ).value;
	Исключение
		МодульОбъектаСервер().ВызватьСбисИсключениеСервер(ИнформацияОбОшибке(), "СопоставлениеНоменклатуры_ДБФ.ПолучитьЗначениеИзРекордСет",,,"В рекордсет отсутствует поле " + Ключ);
	КонецПопытки;
	Если ЗначениеВРекорд = Null Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	Возврат ЗначениеВРекорд;
	
КонецФункции

&НаКлиенте
Функция ПривестиФорматПоискаСопоставленияПоСтроке(СтрНоменклатураПоставщика, Кэш)
	Перем НоменклатураНазвание, НоменклатураСсылка, ID;
	
	//Номенклатура СБИС
	НоменклатураСопоставление = МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИСКлиент(СтрНоменклатураПоставщика);
	
	Возврат НоменклатураСопоставление;

КонецФункции

// Метод приводит старый формат строк номенклатуры к новому
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		СписокНоменклатураПреобразовать - Массив структур со строками сопоставления
//  Кэш							 - Структура	 - Кэш обработки
//
&НаСервере
Функция ПривестиФорматЗаписиСопоставления(СписокНоменклатураПреобразовать)
	Перем НоменклатураНазвание, НоменклатураСсылка, ХарактеристикаПоставщика;
	
	МодульОбъектаСервер = МодульОбъектаСервер();
	
	НоменклатураОбновить= Новый Массив;
	НоменклатураУдалить = Новый Массив;
	Для Каждого СтрНоменклатураПоставщика Из СписокНоменклатураПреобразовать Цикл
		
		НоменклатураСопоставление = МодульОбъектаСервер.НовыйСтрокаСопоставленияСБИССервер(СтрНоменклатураПоставщика);
		
		//Для корректной записи в старом формате, удаляем все строки и пишем заново, т.к. неизвестно - были ли ещё записи, или нет.
		НоменклатураУдалить.Добавить(НоменклатураСопоставление);
		НоменклатураОбновить.Добавить(НоменклатураСопоставление);
		
	КонецЦикла;
	
	ПараметрыОбработкиНоменклатурыНовые = Новый Структура;
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Обновить",НоменклатураОбновить);
	ПараметрыОбработкиНоменклатурыНовые.Вставить("Удалить",	НоменклатураУдалить);
	
	Возврат ПараметрыОбработкиНоменклатурыНовые;

КонецФункции

//Функция вырезает всё лишнее от ИД для ДБФ
&НаКлиентеНаСервереБезКонтекста
Функция СбисИдентификатор(СыраяСтрокаИд)
	Возврат СокрЛП(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(
					СыраяСтрокаИд	,"«","<")
									,"»",">")
									,"""","")
									,"'","")
									,"[","")
									,"]","")
									,"—","-")
									,"’","")
									,"“","")
									,"”","")
									,"®",""));
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КлючКонтрагентаСопоставления(СтруктураКонтрагент)
	Перем СвЮлФл, КлючДляСопоставления;
	Если СтруктураКонтрагент = Неопределено Тогда
		ВызватьИсключение("Неопределен контрагент. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не	СтруктураКонтрагент.Свойство("СвЮЛ", СвЮлФл)
			И	Не	СтруктураКонтрагент.Свойство("СвФЛ", СвЮлФл) Тогда
		ВызватьИсключение("Нет сведений о контрагенте. Сопоставление номенклатуры невозможно.");
	ИначеЕсли	Не СвЮлФл.Свойство("ИНН", КлючДляСопоставления)
			Или	Не ЗначениеЗаполнено(КлючДляСопоставления) Тогда
		ВызватьИсключение("Не заполнен ИНН контрагента. Сопоставление номенклатуры невозможно.");
	КонецЕсли;
	Возврат КлючДляСопоставления;
КонецФункции

