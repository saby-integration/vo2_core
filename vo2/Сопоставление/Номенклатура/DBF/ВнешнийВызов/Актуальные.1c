
// ContractorNomenclatureCollation.MassUpdate/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Номенклатура- Структура
//			Обновить	- Массив структур с полями Номенклатура, Единица, Характеристика
//			Удалить		- Массив структура с полями для удаления по фильтру
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеОбновление(ПараметрыОбновитьВходящие, Кэш) Экспорт
	Перем НоменклатураНазвание, НоменклатураСсылка;
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	ПараметрыОбновитьВходящие.Номенклатура.Обновить);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеОбновлениеСервер(ПараметрыЗаписиСервер);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_ДБФ.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция НоменклатураПоставщика_МассовоеОбновлениеСервер(ПараметрыОбновитьВходящие)
	
	СоединениеБД = ПолучитьСоединениеDBF(Новый Структура("Ключ", ПараметрыОбновитьВходящие.Ключ));

	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;

	//Номенклатура и характеристика
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		ТипНоменклатуры		= ТипЗнч(СтрНоменклатураПоставщика.Номенклатура.Ссылка);
		ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить("Номенклатура_" + ТипНоменклатуры);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипНоменклатуры) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.Номенклатура;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Номенклатура.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Номенклатура_" + ТипНоменклатуры, ПредставлениеТипа);
		КонецЕсли;
		СтруктураЗаписи = Новый Структура("ID, NAME, IDNOM, SPRNOM, IDCHAR, SPRCHAR, GTIN", "", "", "", "", "", "", "");
		СтруктураЗаписи.ID		= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС;
		СтруктураЗаписи.NAME	= СтрНоменклатураПоставщика.Номенклатура.ИмяСБИС;
		СтруктураЗаписи.IDNOM	= Строка(СтрНоменклатураПоставщика.Номенклатура.Ссылка.УникальныйИдентификатор());
		СтруктураЗаписи.GTIN	= СтрНоменклатураПоставщика.Номенклатура.GTIN;
		СтруктураЗаписи.SPRNOM	= ПредставлениеТипа;
		
		Если Не СтрНоменклатураПоставщика.Характеристика.Ссылка = Неопределено Тогда
			ТипХарактеристики = ТипЗнч(СтрНоменклатураПоставщика.Характеристика.Ссылка);
			ПредставлениеТипа = ПараметрыСоединения.СоответствиеТипов.Получить("Характеристики_" + ТипХарактеристики);
			Если ПредставлениеТипа = Неопределено Тогда
				Если Метаданные.НайтиПоТипу(ТипХарактеристики) = Неопределено Тогда
					ПредставлениеТипа = ПараметрыСоединения.Типы.ХарактеристикиНоменклатуры;
				Иначе
					ПредставлениеТипа = СтрНоменклатураПоставщика.Характеристика.Ссылка.Метаданные().Имя;
				КонецЕсли;
				ПараметрыСоединения.СоответствиеТипов.Вставить("Характеристики_" + ТипНоменклатуры, ПредставлениеТипа);
			КонецЕсли;
			СтруктураЗаписи.IDCHAR	= Строка(стрНоменклатураПоставщика.Характеристика.УникальныйИдентификатор());
			СтруктураЗаписи.SPRCHAR	= ПредставлениеТипа;
		КонецЕсли;
		
		RecordSet.Open("Select * from NomPost where NomPost.ID = '" + СтрНоменклатураПоставщика.Номенклатура.ИдСБИС + "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			СоединениеБД.Execute(
				"Insert into NomPost Values('" + СтруктураЗаписи.ID + "',
											|'" + СтруктураЗаписи.NAME + "',
											|'" + СтруктураЗаписи.IDNOM + "',
											|'" + СтруктураЗаписи.SPRNOM + "',
											|'" + СтруктураЗаписи.IDCHAR + "',
											|'" + СтруктураЗаписи.SPRCHAR + "',
											|'" + СтруктураЗаписи.GTIN + "')");
		Иначе
			Recordset.Fields("NAME").value		= СтруктураЗаписи.NAME;
			Recordset.Fields("IDNOM").value		= СтруктураЗаписи.IDNOM;
			Recordset.Fields("SPRNOM").value	= СтруктураЗаписи.SPRNOM;
			Recordset.Fields("IDCHAR").value	= СтруктураЗаписи.IDCHAR;
			Recordset.Fields("SPRCHAR").value	= СтруктураЗаписи.SPRCHAR;
			Recordset.Fields("GTIN").value		= СтруктураЗаписи.GTIN;
			RecordSet.Update();
		КонецЕсли;
		RecordSet.Close();
	КонецЦикла;
	//Единица
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Если	Не	СтрНоменклатураПоставщика.Свойство("Единица")
			Или		СтрНоменклатураПоставщика.Единица.Ссылка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТипЕдиницы = ТипЗнч(СтрНоменклатураПоставщика.Единица.Ссылка);
		ПредставлениеТипа = ПараметрыСоединения.СоответствиеТипов.Получить("Единицы_" + ТипЕдиницы);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипЕдиницы) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.Единицы;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Единица.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Единицы_" + ТипЕдиницы, ПредставлениеТипа);
		КонецЕсли;
		Recordset.Open("Select * from NOMUNIT
						|Where NOMUNIT.ID_NMKEY ='"		+ СтрНоменклатураПоставщика.Номенклатура.ИдСБИС	+ "'
						|	And NOMUNIT.ID_POSTU = '"	+ СтрНоменклатураПоставщика.Единица.ИдСБИС		+ "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			RecordSet.AddNew();
		    RecordSet.Fields("ID_NMKEY").value	= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС;
		    RecordSet.Fields("ID_POSTU").value	= СтрНоменклатураПоставщика.Единица.ИдСБИС;
		КонецЕсли;
	    RecordSet.Fields("NM_POSTU").value	= СтрНоменклатураПоставщика.Единица.ИмяСБИС;
	    RecordSet.Fields("ID_TORGU").value	= Строка(СтрНоменклатураПоставщика.Единица.Ссылка.УникальныйИдентификатор());
	    RecordSet.Fields("SP_TORGU").value	= ПредставлениеТипа;
	    RecordSet.Fields("RATIO").value		= СтрНоменклатураПоставщика.Единица.Коэффициент;
		RecordSet.Update();
		Recordset.Close();
	КонецЦикла;
	
	//Удалить номенклатуру и единицы
	Для Каждого ИдНоменклатураПОставщика Из ПараметрыОбновитьВходящие.Номенклатура.Удалить Цикл
		Если ИдНоменклатураПОставщика.Свойство("Единица") Тогда 
			Recordset.Open("Select * from NOMUNIT where NOMUNIT.ID_NMKEY = '" + ИдНоменклатураПОставщика.Единица.ИдСБИС + "'", СоединениеБД, 2, 3);
			Пока Не Recordset.EOF() Цикл
				Recordset.Delete(); 
				Recordset.MoveNext();
			КонецЦикла;
			Recordset.Close();
		КонецЕсли;
		
		Recordset.Open("Select * from NomPost where NomPost.ID ='" + ИдНоменклатураПОставщика.ID + "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			Recordset.Close();
			Продолжить; 
		КонецЕсли;
		Recordset.Delete(); 
		Recordset.Close();
	КонецЦикла;
	
КонецФункции	

// ContractorNomenclatureCollation.MassFind/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Номенклатура- Структура
//			Найти		- Массив структур с полями Номенклатура, Единица, Характеристика
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция НоменклатураПоставщика_МассовыйПоиск(ПараметрыОбновитьВходящие, Кэш) Экспорт
	
	Перем НоменклатураНазвание, НоменклатураСсылка;
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Ключ", КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовыйПоискСервер(ПараметрыОбновитьВходящие.Номенклатура.Найти, ПараметрыЗаписиСервер);
		Возврат ПараметрыОбновитьВходящие.Номенклатура.Найти;
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_ДБФ.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура	НоменклатураПоставщика_МассовыйПоискСервер(НоменклатураОбогатить, ПараметрыОбновитьВходящие)
	
	СоединениеБД = ПолучитьСоединениеDBF(Новый Структура("Ключ", ПараметрыОбновитьВходящие.Ключ));

	//Номенклатура и характеристика
	Для Каждого СтрНоменклатураПоставщика Из НоменклатураОбогатить Цикл
		Если ЗначениеЗаполнено(СтрНоменклатураПоставщика.Номенклатура.ИдСБИС) Тогда
			НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(СтрНоменклатураПоставщика, СоединениеБД);
		Иначе
			НоменклатураПоставщика_ОбогатитьПоКлючам1С(СтрНоменклатураПоставщика, СоединениеБД);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура	НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(СтрНоменклатураПоставщика, СоединениеБД)
	
	RecordSet = Новый ComОбъект("ADODB.Recordset");
 	Recordset.CursorLocation = 3;
	Recordset.Open("Select * from NomPost where NomPost.ID ='" + СтрНоменклатураПоставщика.Номенклатура.ИдСБИС + "'", СоединениеБД, 2, 3);
	
	Если Recordset.EOF = Истина Тогда
		Recordset.Close();
		Возврат;
	КонецЕсли;
	//Восстановление ссылки номенклатуры
	Если	ЗначениеЗаполнено(RecordSet.Fields("IDNOM").value)
		И	ЗначениеЗаполнено(RecordSet.Fields("SPRNOM").value) Тогда
		УИДНоменклатуры = Новый УникальныйИдентификатор(СокрЛП(RecordSet.Fields("IDNOM").value));
		СтрНоменклатураПоставщика.Номенклатура.Ссылка = Справочники[СокрЛП(RecordSet.Fields("SPRNOM").value)].ПолучитьСсылку(УИДНоменклатуры);	
	КонецЕсли;		
	//Восстановление ссылки характеристики
	Если	ЗначениеЗаполнено(RecordSet.Fields("IDCHAR").value)
		И	ЗначениеЗаполнено(RecordSet.Fields("SPRCHAR").value) Тогда
		УИДХарактеристики = Новый УникальныйИдентификатор(СокрЛП(RecordSet.Fields("IDCHAR").value));
		СтрНоменклатураПоставщика.Характеристика.Ссылка = Справочники[СокрЛП(RecordSet.Fields("SPRCHAR").value)].ПолучитьСсылку(УИДХарактеристики);	
	КонецЕсли;
	Recordset.Close();
	
	Recordset.Open(
		"Select * from NomUnit where NomUnit.ID_NMKEY = '" + СтрНоменклатураПоставщика.Номенклатура.ИдСБИС + "'
		|AND NomUnit.ID_POSTU = '" + СтрНоменклатураПоставщика.Единица.ИдСБИС + "'"
			, СоединениеБД, 2, 3);
	Если Recordset.EOF = Истина Тогда
		Recordset.Close();
		Возврат;
	КонецЕсли;
	
	//Восстановление ссылки единицы
	УИДЕдиницыИзмерения = СокрЛП(RecordSet.Fields("ID_TORGU").value);
	Если	ЗначениеЗаполнено(УИДЕдиницыИзмерения)
		И	ЗначениеЗаполнено(RecordSet.Fields("SP_TORGU").value) Тогда
		УИДЕдиницыИзмерения = Новый УникальныйИдентификатор(УИДЕдиницыИзмерения);
		СтрНоменклатураПоставщика.Единица.Ссылка = Справочники[СокрЛП(RecordSet.Fields("SP_TORGU").value)].ПолучитьСсылку(УИДЕдиницыИзмерения);
	КонецЕсли;
	//Восстановление коэффициента
	Если ЗначениеЗаполнено(RecordSet.Fields("RATIO").value) Тогда
		СтрНоменклатураПоставщика.Единица.Коэффициент = СокрЛП(RecordSet.Fields("RATIO").value);
	Иначе
		СтрНоменклатураПоставщика.Единица.Коэффициент = "1";
	КонецЕсли;
	Recordset.Close();
		
КонецПроцедуры

&НаСервере
Процедура	НоменклатураПоставщика_ОбогатитьПоКлючам1С(СтрНоменклатураПоставщика, СоединениеБД)
			
	Если СтрНоменклатураПоставщика.Номенклатура.Ссылка = Неопределено Тогда
		//Всё вертится только в разрезе номенклатуры. Нет номенклатуры - нет номенклатуры.
		Возврат;
	КонецЕсли;
	RecordSet = Новый ComОбъект("ADODB.Recordset");
 	Recordset.CursorLocation = 3;
	
	IDNOM = Строка(СтрНоменклатураПоставщика.Номенклатура.Ссылка.УникальныйИдентификатор());
	
	ТипНоменклатуры		= ТипЗнч(СтрНоменклатураПоставщика.Номенклатура.Ссылка);
	ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить("Номенклатура_" + ТипНоменклатуры);
	Если ПредставлениеТипа = Неопределено Тогда
		Если Метаданные.НайтиПоТипу(ТипНоменклатуры) = Неопределено Тогда
			ПредставлениеТипа = ПараметрыСоединения.Типы.Номенклатура;
		Иначе
			ПредставлениеТипа = СтрНоменклатураПоставщика.Номенклатура.Ссылка.Метаданные().Имя;
		КонецЕсли;
		ПараметрыСоединения.СоответствиеТипов.Вставить("Номенклатура_" + ТипНоменклатуры, ПредставлениеТипа);
	КонецЕсли;
	ТекстЗапроса = "Select top 1 * from NomPost where NomPost.IDNOM='" + IDNOM + "' and NomPost.SPRNOM='" + ПредставлениеТипа + "'";
		
	Если ЗначениеЗаполнено(СтрНоменклатураПоставщика.Характеристика.Ссылка) Тогда
		IDCHAR = Строка(СтрНоменклатураПоставщика.Характеристика.Ссылка.УникальныйИдентификатор());
		ТипХарактеристики = ТипЗнч(СтрНоменклатураПоставщика.Характеристика.Ссылка);
		ПредставлениеТипа = ПараметрыСоединения.СоответствиеТипов.Получить("Характеристики_" + ТипХарактеристики);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипХарактеристики) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.ХарактеристикиНоменклатуры;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Характеристика.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Характеристики_" + ТипНоменклатуры, ПредставлениеТипа);
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + " and NomPost.IDCHAR='" + IDCHAR + "' and NomPost.SPRCHAR='" + ПредставлениеТипа + "'";
	Иначе
		ТекстЗапроса = ТекстЗапроса + " and NomPost.IDCHAR=''";
	КонецЕсли;		
	
    Recordset.Open(ТекстЗапроса, СоединениеБД, 2, 3);

	Если Recordset.EOF Тогда
		Возврат;
	КонецЕсли;
	Попытка
		СтрНоменклатураПоставщика.Номенклатура.ИдСБИС	= Recordset.Fields.ID.value;
		СтрНоменклатураПоставщика.Номенклатура.ИмяСБИС	= Recordset.Fields.NAME.value;
		СтрНоменклатураПоставщика.Номенклатура.GTIN		= Recordset.Fields.GTIN.value;
		СтрНоменклатураПоставщика.Характеристика.ИдСБИС	= Recordset.Fields.IDCHAR.value;
		Recordset.Close();	
	Исключение
		Recordset.Close();
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаСервер().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_ДБФ.НоменклатураПоставщика_ОбогатитьПоКлючам1С")
	КонецПопытки;
	
	//Выборка единицы
	Если	ЗначениеЗаполнено(СтрНоменклатураПоставщика.Единица.Ссылка)
		И	ЗначениеЗаполнено(СтрНоменклатураПоставщика.Номенклатура.ИдСБИС) Тогда
		ID_TORGU			= Строка(СтрНоменклатураПоставщика.Единица.Ссылка.УникальныйИдентификатор());
		ТипЕдиницы			= ТипЗнч(СтрНоменклатураПоставщика.Единица.Ссылка);
		ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить("Единицы_" + ТипЕдиницы);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипЕдиницы) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.Единицы;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Единица.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Единицы_" + ТипНоменклатуры, ПредставлениеТипа);
		КонецЕсли;
		Recordset.Open("Select top 1 * from NOMUNIT
						|Where NOMUNIT.ID_NMKEY ='"		+ СтрНоменклатураПоставщика.Номенклатура.ИдСБИС	+ "'
						|	And NOMUNIT.ID_POSTU = '"	+ ID_TORGU										+ "'
						|	And NOMUNIT.SP_TORGU = '"	+ ПредставлениеТипа								+ "'", СоединениеБД, 2, 3);
		Если Не Recordset.EOF Тогда
			СтрНоменклатураПоставщика.Единица.ИдСБИС		= Recordset.Fields.ID_POSTU.value;
			СтрНоменклатураПоставщика.Единица.ИмяСБИС		= Recordset.Fields.NM_POSTU.value;
			СтрНоменклатураПоставщика.Единица.Коэффициент	= Recordset.Fields.RATIO.value
		КонецЕсли;
		Recordset.Close();
	КонецЕсли;
			
КонецПроцедуры

&НаСервере
Процедура	НоменклатураПоставщика_МассовоОбновитьСервер(ПараметрыОбновитьВходящие)
	
	СоединениеБД = ПолучитьСоединениеDBF(Новый Структура("Ключ", ПараметрыОбновитьВходящие.Ключ));

	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;

	//Номенклатура и характеристика
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Обновить Цикл
		ТипНоменклатуры		= ТипЗнч(СтрНоменклатураПоставщика.Номенклатура.Ссылка);
		ПредставлениеТипа	= ПараметрыСоединения.СоответствиеТипов.Получить("Номенклатура_" + ТипНоменклатуры);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипНоменклатуры) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.Номенклатура;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Номенклатура.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Номенклатура_" + ТипНоменклатуры, ПредставлениеТипа);
		КонецЕсли;
		СтруктураЗаписи = Новый Структура("ID, NAME, IDNOM, SPRNOM, IDCHAR, SPRCHAR, GTIN", "", "", "", "", "", "", "");
		СтруктураЗаписи.ID		= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС;
		СтруктураЗаписи.NAME	= СтрНоменклатураПоставщика.Номенклатура.ИмяСБИС;
		СтруктураЗаписи.IDNOM	= Строка(СтрНоменклатураПоставщика.Номенклатура.Ссылка.УникальныйИдентификатор());
		СтруктураЗаписи.GTIN	= СтрНоменклатураПоставщика.Номенклатура.GTIN;
		СтруктураЗаписи.SPRNOM	= ПредставлениеТипа;
		
		Если Не СтрНоменклатураПоставщика.Характеристика.Ссылка = Неопределено Тогда
			ТипХарактеристики = ТипЗнч(СтрНоменклатураПоставщика.Характеристика.Ссылка);
			ПредставлениеТипа = ПараметрыСоединения.СоответствиеТипов.Получить("Характеристики_" + ТипХарактеристики);
			Если ПредставлениеТипа = Неопределено Тогда
				Если Метаданные.НайтиПоТипу(ТипХарактеристики) = Неопределено Тогда
					ПредставлениеТипа = ПараметрыСоединения.Типы.ХарактеристикиНоменклатуры;
				Иначе
					ПредставлениеТипа = СтрНоменклатураПоставщика.Характеристика.Ссылка.Метаданные().Имя;
				КонецЕсли;
				ПараметрыСоединения.СоответствиеТипов.Вставить("Характеристики_" + ТипНоменклатуры, ПредставлениеТипа);
			КонецЕсли;
			СтруктураЗаписи.IDCHAR	= Строка(стрНоменклатураПоставщика.Характеристика.УникальныйИдентификатор());
			СтруктураЗаписи.SPRCHAR	= ПредставлениеТипа;
		КонецЕсли;
		
		RecordSet.Open("Select * from NomPost where NomPost.ID ='" + СтрНоменклатураПоставщика.Номенклатура.ИдСБИС + "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			СоединениеБД.Execute(
				"Insert into NomPost Values('" + СтруктураЗаписи.ID + "',
											|'" + СтруктураЗаписи.NAME + "',
											|'" + СтруктураЗаписи.IDNOM + "',
											|'" + СтруктураЗаписи.SPRNOM + "',
											|'" + СтруктураЗаписи.IDCHAR + "',
											|'" + СтруктураЗаписи.SPRCHAR + "',
											|'" + СтруктураЗаписи.GTIN + "')");
		Иначе
			Recordset.Fields("NAME").value		= СтруктураЗаписи.NAME;
			Recordset.Fields("IDNOM").value		= СтруктураЗаписи.IDNOM;
			Recordset.Fields("SPRNOM").value	= СтруктураЗаписи.SPRNOM;
			Recordset.Fields("IDCHAR").value	= СтруктураЗаписи.IDCHAR;
			Recordset.Fields("SPRCHAR").value	= СтруктураЗаписи.SPRCHAR;
			Recordset.Fields("GTIN").value		= СтруктураЗаписи.GTIN;
			RecordSet.Update();
		КонецЕсли;
		RecordSet.Close();
	КонецЦикла;
	//Единица
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Обновить Цикл
		Если	СтрНоменклатураПоставщика.Единица.Ссылка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТипЕдиницы = ТипЗнч(СтрНоменклатураПоставщика.Единица.Ссылка);
		ПредставлениеТипа = ПараметрыСоединения.СоответствиеТипов.Получить("Единицы_" + ТипЕдиницы);
		Если ПредставлениеТипа = Неопределено Тогда
			Если Метаданные.НайтиПоТипу(ТипЕдиницы) = Неопределено Тогда
				ПредставлениеТипа = ПараметрыСоединения.Типы.Единицы;
			Иначе
				ПредставлениеТипа = СтрНоменклатураПоставщика.Единица.Ссылка.Метаданные().Имя;
			КонецЕсли;
			ПараметрыСоединения.СоответствиеТипов.Вставить("Единицы_" + ТипЕдиницы, ПредставлениеТипа);
		КонецЕсли;
		Recordset.Open("Select * from NOMUNIT
						|Where NOMUNIT.ID_NMKEY ='"		+ СтрНоменклатураПоставщика.Номенклатура.ИдСБИС	+ "'
						|	And NOMUNIT.ID_POSTU = '"	+ СтрНоменклатураПоставщика.Единица.ИдСБИС		+ "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			RecordSet.AddNew();
		    RecordSet.Fields("ID_NMKEY").value	= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС;
		    RecordSet.Fields("ID_POSTU").value	= СтрНоменклатураПоставщика.Единица.ИдСБИС;
		КонецЕсли;
	    RecordSet.Fields("NM_POSTU").value	= СтрНоменклатураПоставщика.Единица.ИмяСБИС;
	    RecordSet.Fields("ID_TORGU").value	= Строка(СтрНоменклатураПоставщика.Единица.Ссылка.УникальныйИдентификатор());
	    RecordSet.Fields("SP_TORGU").value	= ПредставлениеТипа;
	    RecordSet.Fields("RATIO").value		= СтрНоменклатураПоставщика.Единица.Коэффициент;
		RecordSet.Update();
		Recordset.Close();
	КонецЦикла;
	
	//Удалить номенклатуру и единицы
	Для Каждого ИдНоменклатураПОставщика Из ПараметрыОбновитьВходящие.Удалить Цикл
			//RecordSet = Новый ComОбъект("ADODB.Recordset");
			//Recordset.CursorLocation = 3;
			//Recordset.Open("Select top 1 * from NomPost", СоединениеБД, 2, 3);
			
		Recordset.Open("Select * from NomPost where NOMUNIT.ID_NMKEY ='" + ИдНоменклатураПОставщика + "'", СоединениеБД, 2, 3);
		Recordset.MoveFirst();
		Пока Не Recordset.EOF() Цикл
			Recordset.Delete(); 
			Recordset.MoveNext();
		КонецЦикла;
		
		Recordset.Open("Select * from NomPost where NomPost.ID ='" + ИдНоменклатураПОставщика + "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			Продолжить; 
		КонецЕсли;
		Recordset.Delete(); 
		Recordset.Close();
	КонецЦикла;
	
КонецПроцедуры	

// ContractorNomenclatureCollation.MassDelete/2
//  - метод для удаления сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Номенклатура- Массив структур с полями для удаления по фильтру
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеУдаление(ПараметрыОбновитьВходящие, Кэш) Экспорт
	Перем НоменклатураНазвание, НоменклатураСсылка;
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	ПараметрыОбновитьВходящие.Номенклатура.Удалить);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеОбновлениеСервер(ПараметрыЗаписиСервер);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_ДБФ.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция НоменклатураПоставщика_МассовоеУдалениеСервер(ПараметрыОбновитьВходящие)
	
	СоединениеБД = ПолучитьСоединениеDBF(Новый Структура("Ключ", ПараметрыОбновитьВходящие.Ключ));

	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;

	//Удалить номенклатуру и единицы
	Для Каждого ИдНоменклатураПОставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Если ИдНоменклатураПОставщика.Свойство("Единица") Тогда 
			Recordset.Open("Select * from NOMUNIT where NOMUNIT.ID_NMKEY = '" + ИдНоменклатураПОставщика.Единица.ИдСБИС + "'", СоединениеБД, 2, 3);
			Пока Не Recordset.EOF() Цикл
				Recordset.Delete(); 
				Recordset.MoveNext();
			КонецЦикла;
			Recordset.Close();
		КонецЕсли;
		
		Recordset.Open("Select * from NomPost where NomPost.ID ='" + ИдНоменклатураПОставщика.ID + "'", СоединениеБД, 2, 3);
		Если Recordset.EOF Тогда 
			Recordset.Close();
			Продолжить; 
		КонецЕсли;
		Recordset.Delete(); 
		Recordset.Close();
	КонецЦикла;
	
КонецФункции

