
&НаКлиенте
Функция УстановитьПараметрыМодуля(ПараметрыУстановки=Неопределено, Кэш) Экспорт
	Перем СбисКаталогСопоставления;

	ЛокальныйКэш = Кэш;
	
	Если		ПараметрыУстановки = Неопределено
		Или Не	ПараметрыУстановки.Свойство("Каталог", СбисКаталогСопоставления)
		Или	Не	ЗначениеЗаполнено(СбисКаталогСопоставления) Тогда
		СбисКаталогСопоставления = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("КаталогПоУмолчанию_Сервер") + "НоменклатураПоставщика";
	КонецЕсли;
	СбисКаталогСопоставления	= Кэш.ОбщиеФункции.СбисФорматКаталога(СбисКаталогСопоставления, Кэш.ПараметрыСистемы.Сервер);
	ПараметрыУстановкиИсходящие = МодульОбъектаКлиент().СформироватьПараметрыУстановкиДБФ(Новый Структура("Тип, Каталог", "СопоставлениеНоменклатуры", СбисКаталогСопоставления));
	
	СформироватьПодключениеДБФ(ПараметрыУстановкиИсходящие);
	ИниКонфигурация = Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация");
	
	ТипСправочникаНоменклатура = Кэш.ОбщиеФункции.РассчитатьЗначение("Номенклатура", ИниКонфигурация);
	Если ТипСправочникаНоменклатура = Неопределено Тогда
		ТипСправочникаНоменклатура = "Номенклатура";
	Иначе
		ТипСправочникаНоменклатура = СокрЛП(Сред(ТипСправочникаНоменклатура, Найти(ТипСправочникаНоменклатура, ".") + 1));
	КонецЕсли;
	ТипСправочникаХарактеристики = Кэш.ОбщиеФункции.РассчитатьЗначение("ХарактеристикиНоменклатуры", ИниКонфигурация);
	Если ТипСправочникаХарактеристики = Неопределено Тогда
		ТипСправочникаХарактеристики = "ХарактеристикиНоменклатуры";
	Иначе
		ТипСправочникаХарактеристики = СокрЛП(Сред(ТипСправочникаХарактеристики, Найти(ТипСправочникаХарактеристики, ".") + 1));
	КонецЕсли;
	ТипСправочникаЕдиницы = Кэш.ОбщиеФункции.РассчитатьЗначение("ЕдиницыИзмерения", ИниКонфигурация);
	Если ТипСправочникаЕдиницы = Неопределено Тогда
		ТипСправочникаЕдиницы = "КлассификаторЕдиницИзмерения";
	Иначе
		ТипСправочникаЕдиницы = СокрЛП(Сред(ТипСправочникаЕдиницы, Найти(ТипСправочникаЕдиницы, ".") + 1));
	КонецЕсли;
	//Для XBase
	ИспользоватьXBaseДляКонвертацииDBF = Кэш.ОбщиеФункции.РассчитатьЗначение("ИспользоватьXBaseДляКонвертацииDBF", ИниКонфигурация) = Истина;
	ПараметрыСоединения.Вставить("ИспользоватьXBaseДляКонвертацииDBF", ИспользоватьXBaseДляКонвертацииDBF);
	
	ПараметрыСоединений = Новый Структура("Путь");
	ПараметрыСоединений.Вставить("Файлы",								Новый Соответствие);
	ПараметрыСоединений.Вставить("Каталог",								ПараметрыУстановкиИсходящие.Путь);
	ПараметрыСоединений.Вставить("Тип",									ПараметрыУстановкиИсходящие.Тип);
	ПараметрыСоединений.Файлы.Вставить("НоменклатураСБИС",		"Nom_SBIS.dbf");
	ПараметрыСоединений.Файлы.Вставить("Номенклатура1С",		"Nom_1С.dbf");
	ПараметрыСоединений.Файлы.Вставить("СтароеСопоставление",	"NOMPOST.dbf");
	ПараметрыСоединений.Файлы.Вставить("Единицы",				"Nom_UNIT.dbf");
	
	ПараметрыСоединения.Вставить("ПараметрыСоединений", 				ПараметрыСоединений);
	ПараметрыСоединения.Вставить("НовоеСопоставление",					МодульОбъектаКлиент().ПолучитьЗначениеФичи("РасширенныйФункционалСопоставленияНоменклатуры") = Истина);
	ПараметрыСоединения.Вставить("Типы", 								Новый Структура);
	ПараметрыСоединения.Вставить("ПереключениеДляСтарогоСопоставления",	Новый Соответствие);
	ПараметрыСоединения.Типы.Вставить("Номенклатура",				ТипСправочникаНоменклатура);
	ПараметрыСоединения.Типы.Вставить("ХарактеристикиНоменклатуры",	ТипСправочникаХарактеристики);
	ПараметрыСоединения.Типы.Вставить("Единицы",					ТипСправочникаЕдиницы);
	
КонецФункции

#Область include_core2_vo2_Сопоставление_Номенклатура_DBF_ВнешнийВызов
#КонецОбласти

#Область include_core2_vo2_Сопоставление_Номенклатура_DBF_Внутренние
#КонецОбласти

