
// ContractorNomenclatureCollation.MassUpdate/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Обновить - Массив структур с полями Номенклатура, Единица, Характеристика
//
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеОбновление(ПараметрыОбновитьВходящие, Кэш) Экспорт

	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Обновить",	ПараметрыОбновитьВходящие.Обновить);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеОбновлениеОтправитьКоманду(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПоставщика_ЕдиничноеОбновление(ПараметрыОбновитьВходящие, Кэш) Экспорт

	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Обновить);
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	МассивНоменклатуры);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеОбновлениеОтправитьКоманду(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничноеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция НоменклатураПоставщика_МассовоеОбновлениеОтправитьКоманду(ПараметрыОбновитьВходящие, Кэш)
	
	МассивНоменклатуры = Новый Массив;
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Обновить Цикл
		СтруктураЗаписи = Новый Структура("ID, NAME, IDNOM, BaseMeasureUnitCode, CharacteristicId, MeasureUnitName,
		|MeasureUnitCode, ContrCode, ContrName, ContrCharacteristic, ContrGTIN, ContrMeasureUnitCode, ContrMeasureUnitName, ContrMeasureUnitQty");
		
		СтруктураЗаписи.ID						= КлючНоменклатурыСопоставления(СтрНоменклатураПоставщика.Номенклатура.Ссылка);
		СтруктураЗаписи.NAME					= СтрНоменклатураПоставщика.Номенклатура.Наименование; //?
		СтруктураЗаписи.ContrCode				= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС; //код номенклатуры контрагента
		СтруктураЗаписи.ContrName				= СтрНоменклатураПоставщика.Номенклатура.ИмяСБИС;
		//СтруктураЗаписи.BaseMeasureUnitCode		= СтрНоменклатураПоставщика.Номенклатура.ИмяСБИС;

		//Необязательные
		Если СтрНоменклатураПоставщика.Свойство("GTIN") Тогда
			СтруктураЗаписи.Вставить("ContrGTIN",СтрНоменклатураПоставщика.GTIN);	
		КонецЕсли;
				
		//CharacteristicId - Всегда УИД? нужны типы?
		Если СтрНоменклатураПоставщика.Свойство("Характеристика") Тогда 
			Если Не (СтрНоменклатураПоставщика.Характеристика.Ссылка = Неопределено) И СтрНоменклатураПоставщика.Свойство("ХарактеристикаСБИС") Тогда //?
				СтруктураЗаписи.CharacteristicId  = Строка(стрНоменклатураПоставщика.Характеристика.УникальныйИдентификатор());	
				СтруктураЗаписи.ContrCharacteristic = СтрНоменклатураПоставщика.ХарактеристикаСБИС 	
				
			КонецЕсли;
		КонецЕсли;	
		//Единица
		Если	СтрНоменклатураПоставщика.Свойство("Единица") Тогда
			//1С
			Если СтрНоменклатураПоставщика.Единица.Свойство("Наименование") Тогда
				СтруктураЗаписи.MeasureUnitName			= СтрНоменклатураПоставщика.Единица.Наименование; //(Text) - (необязательный) наименование единицы измерения, которую указал пользователь для сопоставления во внешней системе (1с)
			КонецЕсли;		
			Если СтрНоменклатураПоставщика.Единица.Свойство("ОКЕИ") Тогда
				СтруктураЗаписи.BaseMeasureUnitCode		= СтрНоменклатураПоставщика.Единица.ОКЕИ; //(Text) - ОКЕИ базовой единицы измерения во внешней системе (1с) 
			КонецЕсли;
			Если СтрНоменклатураПоставщика.Единица.Свойство("Коэффициент") Тогда 
				СтруктураЗаписи.MeasureUnitQty			= СтрНоменклатураПоставщика.Единица.Коэффициент; //(Text) - (необязательный) коэффициент пересчета единицы измерения, которую указал пользователь для сопоставления к базовой единице измерения пользователя во внешней системе (1с)
			КонецЕсли;
			//Контрагент	
			Если СтрНоменклатураПоставщика.Единица.Свойство("ОКЕИСБИС") Тогда 
				СтруктураЗаписи.ContrMeasureUnitCode	= СтрНоменклатураПоставщика.Единица.ОКЕИСБИС; 
			КонецЕсли;
			Если СтрНоменклатураПоставщика.Единица.Свойство("НаименованиеСБИС") Тогда 
				СтруктураЗаписи.ContrMeasureUnitName	= СтрНоменклатураПоставщика.Единица.НаименованиеСБИС; 
			КонецЕсли;		
			Если СтрНоменклатураПоставщика.Единица.Свойство("КоэффициентСБИС") Тогда 
				СтруктураЗаписи.ContrMeasureUnitQty		= СтрНоменклатураПоставщика.Единица.КоэффициентСбис; 
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ЭлемСтруктуры Из СтруктураЗаписи Цикл
			Если ЭлемСтруктуры.Значение = Неопределено Тогда
				СтруктураЗаписи.Удалить(ЭлемСтруктуры.Ключ);
			КонецЕсли;
		КонецЦикла;
		МассивНоменклатуры.Добавить(СтруктураЗаписи);
	КонецЦикла;
	
	Метод = "ContractorNomenclatureCollation.MassUpdate";
	ПараметрыМетода = Новый Структура;
	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	ОтправитьКоманду(Кэш,Метод,ПараметрыМетода);
		
КонецФункции

// ContractorNomenclatureCollation.MassDelete/2
//  - метод для удаления сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Удалить - Массив структур с полями для удаления по фильтру
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеУдаление(ПараметрыОбновитьВходящие, Кэш) Экспорт 
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	ПараметрыОбновитьВходящие.Номенклатура); //?
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеУдалениеОтправитьКоманду(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПоставщика_ЕдиничноеУдаление(ПараметрыОбновитьВходящие, Кэш) Экспорт 
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Удалить);
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	МассивНоменклатуры);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеУдалениеОтправитьКоманду(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничноеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция НоменклатураПоставщика_МассовоеУдалениеОтправитьКоманду(ПараметрыОбновитьВходящие, Кэш)
	
	МассивНоменклатуры = Новый Массив; 
	
	Для Каждого ИдНоменклатураПОставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		
		СтруктураЗаписи				= Новый Структура("ID, ContrCode, ContrCharacteristic");		
		СтруктураЗаписи.ID			= КлючНоменклатурыСопоставления(ИдНоменклатураПОставщика.Номенклатура.Ссылка);
		СтруктураЗаписи.ContrCode	= ИдНоменклатураПОставщика.Номенклатура.ИдСБИС;
		
		Если ИдНоменклатураПОставщика.Свойство("ХарактеристикаСБИС") Тогда
			СтруктураЗаписи.ContrCharacteristic = ИдНоменклатураПОставщика.ХарактеристикаСБИС;
		КонецЕсли;
		
	КонецЦикла;	
	
	Метод			= "ContractorNomenclatureCollation.MassDelete";
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	ОтправитьКоманду(Кэш,Метод,ПараметрыМетода);
	
	
КонецФункции

// ContractorNomenclatureCollation.MassFind/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Найти		- Массив структур с полями Номенклатура, Единица, Характеристика
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция НоменклатураПоставщика_МассовыйПоиск(ПараметрыОбновитьВходящие, Кэш) Экспорт

	НоменклатураКлючи1С = Новый Массив;
	НоменклатураКлючиСБИС = Новый Массив;
	
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Найти.Номенклатура Цикл
		Если ЗначениеЗаполнено(СтрНоменклатураПоставщика.Номенклатура.ИдСБИС) Тогда
			НоменклатураКлючиСБИС.Добавить(СтрНоменклатураПоставщика);
		Иначе
			НоменклатураКлючи1С.Добавить(СтрНоменклатураПоставщика);
		КонецЕсли;
	КонецЦикла;
	
	Если НоменклатураКлючиСБИС.Количество() > 0 Тогда
		Попытка
			ПараметрыЗаписиСервер = Новый Структура;
			ПараметрыЗаписиСервер.Вставить("Номенклатура",	НоменклатураКлючиСБИС);
			ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));
			НоменклатураКлючиСБИС = НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(ПараметрыЗаписиСервер, Кэш);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовыйПоиск");
		КонецПопытки;
	КонецЕсли;
	
	Если НоменклатураКлючиСБИС.Количество() > 0 Тогда
		Попытка
			ПараметрыЗаписиСервер = Новый Структура;
			ПараметрыЗаписиСервер.Вставить("Номенклатура",	НоменклатураКлючи1С);
			ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));
			НоменклатураКлючиСБИС = НоменклатураПоставщика_ОбогатитьПоКлючам1С(ПараметрыЗаписиСервер, Кэш);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовыйПоиск");
		КонецПопытки;
	КонецЕсли; 	
	//Склеить ответы
	
КонецФункции

&НаКлиенте
Процедура НоменклатураПоставщика_ЕдиничныйПоиск(ПараметрыОбновитьВходящие, Кэш) Экспорт 
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Найти);
		ПараметрыЗаписиСервер.Вставить("Найти",	МассивНоменклатуры);
		ПараметрыЗаписиСервер.Вставить("Контрагент",			ПараметрыОбновитьВходящие.Контрагент);		
		НоменклатураПоставщика_МассовыйПоиск(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничныйПоиск");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция	НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(ПараметрыОбновитьВходящие, Кэш)
	МассивНоменклатуры = Новый Массив; 
	
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		СтруктураЗаписи = Новый Структура("ContrCode, ContrMeasureUnitCode, ContrMeasureUnitName");		
		СтруктураЗаписи.ContrCode				= СтрНоменклатураПоставщика.Номенклатура.ИдСБИС;
		СтруктураЗаписи.ContrMeasureUnitCode	= СтрНоменклатураПоставщика.Единица.ОКЕИСБИС; 
		СтруктураЗаписи.ContrMeasureUnitName	= СтрНоменклатураПоставщика.Единица.НаименованиеСБИС; 
	КонецЦикла;	
	
	Метод = "ContractorNomenclatureCollation.SearchByContractorData";
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);	
	Возврат ОтправитьКоманду(Кэш,Метод,ПараметрыМетода);	
КонецФункции

&НаКлиенте
Функция	НоменклатураПоставщика_ОбогатитьПоКлючам1С(ПараметрыОбновитьВходящие, Кэш)
	МассивНоменклатуры = Новый Массив; 
	
	Для Каждого СтрНоменклатураПоставщика Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		СтруктураЗаписи = Новый Структура("ID, MeasureUnitName, MeasureUnitCode");	
		СтруктураЗаписи.ID				= КлючНоменклатурыСопоставления(СтрНоменклатураПоставщика.Номенклатура.Ссылка); 
		СтруктураЗаписи.MeasureUnitCode	= СтрНоменклатураПоставщика.Единица.ОКЕИ; 
		СтруктураЗаписи.MeasureUnitName	= СтрНоменклатураПоставщика.Единица.Наименование; 
	КонецЦикла;	
	
	Метод = "ContractorNomenclatureCollation.SearchByOwnerData";
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	Возврат ОтправитьКоманду(Кэш,Метод,ПараметрыМетода);
КонецФункции

//ContractorNomenclatureCollation.List/3
//метод для массовой вычитки сопоставлений номенклатурных позиций контрагентов со своей номенклатурой и данных внешней системы.
//Метод возвращает список с данными о сопоставленных позициях, отсортированных в порядке возрастания по ContrName
//Параметры списка структура с полями Контрагент, Навигация, Фильтр
&НаКлиенте
Функция НоменклатураПоставщика_ПолучитьСписок(ПараметрыСписка, Кэш) Экспорт
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("Contractor",КлючКонтрагентаСопоставления(ПараметрыСписка.Контрагент));
	ПараметрыМетода.Вставить("PageSize, PageNumber",ПараметрыСписка.Навигация.РазмерСтраницы,ПараметрыСписка.Навигация.НомерСтраницы);
	
	стрФильтр = Новый Структура;
	Если ПараметрыСписка.Фильтр.Свойство("") Тогда
		стрФильтр.Вставить("Id",КлючНоменклатурыСопоставления(ПараметрыСписка.Фильтр.Номенклатура))
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("") Тогда
		стрФильтр.Вставить("ContrName",ПараметрыСписка.Фильтр.НаименованиеСбис)
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("GTIN") Тогда
		стрФильтр.Вставить("ContrGTIN",ПараметрыСписка.Фильтр.GTIN)
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("ИдСБИС") Тогда
		стрФильтр.Вставить("ContrCode",ПараметрыСписка.Фильтр.ИдСБИС)
	КонецЕсли;

	ПараметрыМетода.Вставить("Filter",стрФильтр);
	Метод = "ContractorNomenclatureCollation.List";
	
	Возврат ОтправитьКоманду(Кэш,Метод,ПараметрыМетода);

КонецФункции

&НаКлиенте
Функция ОтправитьКоманду(Кэш, Метод, ПараметрыМетода)
	
	Отказ = Ложь;
	ДопПараметры = Новый Структура;
	Рез = Кэш.ГлавноеОкно.сбисПолучитьФорму("API").СбисОтправитьИОбработатьКоманду(Кэш, Метод, ПараметрыМетода, ДопПараметры, Отказ);
	
КонецФункции
