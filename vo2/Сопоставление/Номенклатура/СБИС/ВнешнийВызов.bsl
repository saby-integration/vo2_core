&НаКлиенте
Функция ПереносНоменклатурыИзСправочниковИРегистров() Экспорт
	
	Кэш = ВладелецФормы.Кэш;
	
	ИниКонфигурация		= Кэш.ини.Конфигурация;
	ДанныеСопоставлений = ПереносСправочниковРегистров(ИниКонфигурация);
	РазмерПакета		= 100;

	
	
	Для Каждого КонтрагентНоменклатура Из ДанныеСопоставлений Цикл //Контрагент ключ, значение массив структур
		стрКонтрагент		= Новый Структура("СвФЛ", Новый Структура("ИНН",КонтрагентНоменклатура.Ключ));
		ПакетСопоставлений	= Новый Массив;	
			
		Для Каждого Сопоставление Из КонтрагентНоменклатура.Значение Цикл
			
			Если ПакетСопоставлений.Количество() = РазмерПакета Тогда

				фрм = ВладелецФормы.Кэш.ГлавноеОкно.сбисНайтиФормуФункции("КлючНоменклатурыСопоставления",Кэш.ФормаРаботыСНоменклатурой); //Отправим пакет	
				фрм.НоменклатураПоставщика_МассовоеОбновление(Новый Структура("Обновить, Контрагент", ПакетСопоставлений, стрКонтрагент), Новый Структура("Кэш",Кэш));
               		
			КонецЕсли;
			
			ДанныеЗаполнения					= Новый Структура("НазваниеСБИС, КодСБИС,АртикулСБИС, ИдентификаторСБИС, БазоваяЕдиницаОКЕИ, GTIN_СБИС, ЕдИзмСБИС, Номенклатура");
			ДанныеЗаполнения.Номенклатура		= Новый Массив;
			ДанныеЗаполнения.НазваниеСБИС		= Сопоставление.НаименованиеСБИС;
			ДанныеЗаполнения.КодСБИС			= Сопоставление.ИдентификаторСБИС;
			ДанныеЗаполнения.GTIN_СБИС			= Сопоставление.GTIN; 
			ДанныеЗаполнения.Номенклатура.Добавить(Новый Структура("Номенклатура, Идентификатор, Характеристика",
													Сопоставление.Номенклатура, Сопоставление.Идентификатор1С, Сопоставление.Характеристика));
	        	
			СтрокаСопоставленияСБИС = МодульОбъектаКлиент().НовыйСтрокаСопоставленияСБИСКлиент(ДанныеЗаполнения);
			ПакетСопоставлений.Добавить(СтрокаСопоставленияСБИС);
           					
		КонецЦикла;
		
		Если ПакетСопоставлений.Количество() Тогда  //Отправим остаток
					
			фрм = ВладелецФормы.Кэш.ГлавноеОкно.сбисНайтиФормуФункции("КлючНоменклатурыСопоставления",Кэш.ФормаРаботыСНоменклатурой);	
			фрм.НоменклатураПоставщика_МассовоеОбновление(Новый Структура("Обновить, Контрагент", ПакетСопоставлений, стрКонтрагент), Новый Структура("Кэш",Кэш));
          			
		КонецЕсли;

		
	КонецЦикла;
	
КонецФункции

Функция ПереносСправочниковРегистров(ИниКонфигурация)

	ИмяРеквизитаХарактеристики	= "";
	ИмяРеквизитаGTIN			= "";
	
	Если ИниКонфигурация.Свойство("НоменклатураПоставщиков_Характеристика") и ИниКонфигурация.НоменклатураПоставщиков_Характеристика.Значение<>"''" Тогда
		ИмяРеквизитаХарактеристики = сред(ИниКонфигурация.НоменклатураПоставщиков_Характеристика.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_Характеристика.Значение,".")+1);
	КонецЕсли;
	
	Если ИниКонфигурация.Свойство("НоменклатураПоставщиков_GTIN") и ИниКонфигурация.НоменклатураПоставщиков_GTIN.Значение<>"''" Тогда
		ИмяРеквизитаGTIN = сред(ИниКонфигурация.НоменклатураПоставщиков_GTIN.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_GTIN.Значение,".")+1);
	КонецЕсли;
	
	ИмяРеквизитаНаименование	= сред(ИниКонфигурация.НоменклатураПоставщиков_Наименование.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_Наименование.Значение,".")+1);
	ИмяРеквизитаИдентификатор	= сред(ИниКонфигурация.НоменклатураПоставщиков_Идентификатор.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_Идентификатор.Значение,".")+1); 
	ИмяРеквизитаНоменклатура	= сред(ИниКонфигурация.НоменклатураПоставщиков_Номенклатура.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_Номенклатура.Значение,".")+1);
	ИмяРеквизитаКонтрагент		= сред(ИниКонфигурация.НоменклатураПоставщиков_Контрагент.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков_Контрагент.Значение,".")+1);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сопоставления."+ИмяРеквизитаКонтрагент		+".ИНН КАК ИНН,
		|	Сопоставления."+ИмяРеквизитаИдентификатор	+" КАК ИдентификаторСБИС,
		|	Сопоставления."+ИмяРеквизитаНоменклатура	+" КАК Номенклатура,
		|	Сопоставления."+ИмяРеквизитаНаименование	+" КАК НаименованиеСБИС";
		
	Если ЗначениеЗаполнено(ИмяРеквизитаХарактеристики) Тогда
		Запрос.Текст = Запрос.Текст+",
		|	Сопоставления."+ИмяРеквизитаХарактеристики	+" КАК Характеристика";	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяРеквизитаGTIN) Тогда
		Запрос.Текст = Запрос.Текст+",
		|	Сопоставления."+ИмяРеквизитаGTIN	+" КАК GTIN";	
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"	
		|ИЗ
		|	"+ИниКонфигурация.НоменклатураПоставщиков.Значение+" КАК Сопоставления";
	
	Если Лев(ИниКонфигурация.НоменклатураПоставщиков.Значение,Найти(ИниКонфигурация.НоменклатураПоставщиков.Значение,".")) = "Справочник." Тогда
		Запрос.Текст = Запрос.Текст+ " ГДЕ НЕ Сопоставления.ПометкаУдаления";	
	КонецЕсли;
	
	РезультатЗапроса			= Запрос.Выполнить();
	ВыборкаДетальныеЗаписи		= РезультатЗапроса.Выбрать();
	ДанныеДляПереноса			= Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ИНН = СокрЛП(ВыборкаДетальныеЗаписи.ИНН);

		Если НЕ ЗначениеЗаполнено(ИНН) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураСопоставления		= Новый Структура("Идентификатор1С, Номенклатура, ИдентификаторСБИС, НаименованиеСБИС, Характеристика, GTIN");
		СопоставленияКонтрагента	= ДанныеДляПереноса.Получить(ИНН);
		
		ЗаполнитьЗначенияСвойств(СтруктураСопоставления, ВыборкаДетальныеЗаписи);
		СтруктураСопоставления.Идентификатор1С = Строка(ВыборкаДетальныеЗаписи.Номенклатура.УникальныйИдентификатор());
		
		Если СопоставленияКонтрагента  = Неопределено Тогда
			
			НаборСопоставлений = Новый Массив;
			НаборСопоставлений.Добавить(СтруктураСопоставления);
			ДанныеДляПереноса.Вставить(ИНН, Новый Массив);
			
		Иначе
			
			СопоставленияКонтрагента.Добавить(СтруктураСопоставления);			
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеДляПереноса;
	
КонецФункции

// ContractorNomenclatureCollation.MassUpdate/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Обновить - Массив структур с полями Номенклатура, Единица, Характеристика
//
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеОбновление(ПараметрыОбновитьВходящие, ДопПараметры) Экспорт

	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	ПараметрыОбновитьВходящие.Номенклатура);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));
		НоменклатураПоставщика_МассовоеОбновлениеВызовМетода(ПараметрыЗаписиСервер, ДопПараметры);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПоставщика_ЕдиничноеОбновление(ПараметрыОбновитьВходящие, ДопПараметры) Экспорт

	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Номенклатура);
		ПараметрыЗаписиСервер.Вставить("Номенклатура",	МассивНоменклатуры);
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеОбновлениеВызовМетода(ПараметрыЗаписиСервер, ДопПараметры);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничноеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция НоменклатураПоставщика_МассовоеОбновлениеВызовМетода(ПараметрыОбновитьВходящие, ДопПараметры)	
	Перем ИсходноеСопоставление;
	
	ДопПараметры.Свойство("ИсходноеСопоставление", ИсходноеСопоставление);
	
	МассивНоменклатуры	= Новый Массив;
	Основное			= Истина;
	
	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		
		Для Каждого Номенклатура Из КлассСопоставления.Номенклатура1С Цикл
				
			Если Номенклатура.Значение.Единицы.Количество() Тогда   //Для каждой единицы пишем отдельную строку сопоставления
					
				Для Каждого Единица Из Номенклатура.Значение.Единицы Цикл 
					
					Если НЕ СопоставлениеИзменено(ИсходноеСопоставление, Единица) Тогда //ИсходноеСопоставление заполненяется только для единичного обновления, в массиве 1 элем
						Продолжить;
					КонецЕсли;
					
					СтруктураЗаписи =	Новый Структура("DocumentId, Main,Id,CatalogType, Name, BaseMeasureUnitCode, MeasureUnitId, MeasureUnitName, MeasureUnitCode, MeasureUnitQty
					|, ContrName, ContrCode, ContrGTIN, ContrCharacteristic, ContrMeasureUnitCode, ContrMeasureUnitName, ContrMeasureUnitQty");
					
					Если КлассСопоставления.Свойство("ИдентификаторДокумента") Тогда		
						СтруктураЗаписи.DocumentId			= КлассСопоставления.ИдентификаторДокумента;
					КонецЕсли;
					
					СтруктураЗаписи.Main					= Основное;
					СтруктураЗаписи.Id						= Номенклатура.Значение.Идентификатор;
					СтруктураЗаписи.CatalogType				= Строка(ТипЗнч(Номенклатура.Ключ));
					СтруктураЗаписи.Name					= Строка(Номенклатура.Ключ);
					СтруктураЗаписи.BaseMeasureUnitCode		= КлассСопоставления.БазоваяЕдиницаОКЕИ;
					СтруктураЗаписи.MeasureUnitId			= КлючЕдиницыСопоставления(Единица.Ключ);		
					СтруктураЗаписи.MeasureUnitName			= Единица.Значение.Название;		
					СтруктураЗаписи.MeasureUnitCode			= Единица.Значение.ОКЕИ;
					СтруктураЗаписи.MeasureUnitQty			= Единица.Значение.Коэффициент; 
					
					СтруктураЗаписи.ContrName				= КлассСопоставления.НоменклатураСБИС.Наименование;
					СтруктураЗаписи.ContrCode				= КлассСопоставления.НоменклатураСБИС.Код;
					СтруктураЗаписи.ContrGTIN				= КлассСопоставления.НоменклатураСБИС.GTIN;
					//СтруктураЗаписи.ContrCharacteristic		= "";
					Для Каждого ЕдиницаПоставщика Из КлассСопоставления.НоменклатураСБИС.Единицы Цикл //Единица одна, но ключ неизвестен, поэтому цикл
						СтруктураЗаписи.ContrMeasureUnitCode	= ЕдиницаПоставщика.Значение.ОКЕИ;
						СтруктураЗаписи.ContrMeasureUnitName	= ЕдиницаПоставщика.Значение.Название;
						СтруктураЗаписи.ContrMeasureUnitQty		= ЕдиницаПоставщика.Значение.Коэффициент;
					КонецЦикла;
					МассивНоменклатуры.Добавить(СтруктураЗаписи);
				КонецЦикла;	
				
			Иначе 
				
				Если НЕ СопоставлениеИзменено(ИсходноеСопоставление, Номенклатура) Тогда //ИсходноеСопоставление заполненяется только для единичного обновления, в массиве 1 элем
					Продолжить;
				КонецЕсли;

				
				СтруктураЗаписи =	Новый Структура("DocumentId, Main,Id,CatalogType, Name, BaseMeasureUnitCode, MeasureUnitId, MeasureUnitName, MeasureUnitCode, MeasureUnitQty
				|, ContrName, ContrCode, ContrGTIN, ContrCharacteristic, ContrMeasureUnitCode, ContrMeasureUnitName, ContrMeasureUnitQty");
				
				Если КлассСопоставления.Свойство("ИдентификаторДокумента") Тогда		
					СтруктураЗаписи.DocumentId			= КлассСопоставления.ИдентификаторДокумента;
				КонецЕсли;
				
				СтруктураЗаписи.Main					= Основное;
				СтруктураЗаписи.Id						= Номенклатура.Значение.Идентификатор;
				СтруктураЗаписи.CatalogType				= Строка(ТипЗнч(Номенклатура.Ключ));
				СтруктураЗаписи.Name					= Строка(Номенклатура.Ключ);
				СтруктураЗаписи.BaseMeasureUnitCode		= КлассСопоставления.БазоваяЕдиницаОКЕИ;					
				СтруктураЗаписи.ContrName				= КлассСопоставления.НоменклатураСБИС.Наименование;
				СтруктураЗаписи.ContrCode				= КлассСопоставления.НоменклатураСБИС.Код;
				СтруктураЗаписи.ContrGTIN				= КлассСопоставления.НоменклатураСБИС.GTIN;
				//СтруктураЗаписи.ContrCharacteristic		= "";
				Для Каждого ЕдиницаПоставщика Из КлассСопоставления.НоменклатураСБИС.Единицы Цикл //Единица одна, но ключ неизвестен, поэтому цикл
					СтруктураЗаписи.ContrMeasureUnitCode	= ЕдиницаПоставщика.Значение.ОКЕИ;
					СтруктураЗаписи.ContrMeasureUnitName	= ЕдиницаПоставщика.Значение.Название;
					СтруктураЗаписи.ContrMeasureUnitQty		= ЕдиницаПоставщика.Значение.Коэффициент;
				КонецЦикла;
				МассивНоменклатуры.Добавить(СтруктураЗаписи);
				
			КонецЕсли;			
			
			Основное = Ложь;
			
		КонецЦикла;	
	КонецЦикла;
	
	Для Каждого СтруктураЗаписи Из МассивНоменклатуры Цикл
		
		Для Каждого ЭлемСтруктуры Из СтруктураЗаписи Цикл
			
			Если ЭлемСтруктуры.Значение = Неопределено Тогда
				СтруктураЗаписи.Удалить(ЭлемСтруктуры.Ключ); //По требованиям онлайна значения должны быть заполнены
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	Отказ				= Ложь;
	РезультатЗаписи = ДопПараметры.Кэш.Интеграция.ContractorNomenclatureCollation_MassUpdate(ДопПараметры.Кэш, ПараметрыМетода, Новый Структура("СообщатьПриОшибке",Истина),Отказ);
	                                                
	Если Отказ Тогда
		
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при записи сопоставлений: " + РезультатЗаписи,
													ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_МассовоеОбновлениеВызовМетода");
													
	ИначеЕсли РезультатЗаписи.Свойство("contragent_found") И НЕ РезультатЗаписи.contragent_found Тогда
													
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при записи сопоставлений: не найден контрагент с ИНН"+ПараметрыОбновитьВходящие.Ключ,
													ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_МассовоеОбновлениеВызовМетода");
		
	ИначеЕсли РезультатЗаписи.Свойство("errors") И РезультатЗаписи.errors.Количество() Тогда
		
		ТекстОшибки = "Ошибка при записи сопоставлений:";
		
		Для Каждого Ошибка Из РезультатЗаписи.errors Цикл			
			ТекстОшибки = ТекстОшибки + Символы.ПС + Ошибка.Error;
		КонецЦикла;	
		
		МодульОбъектаКлиент().ВызватьСбисИсключение(ТекстОшибки, ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_МассовоеОбновлениеВызовМетода");

	КонецЕсли;											

КонецФункции

// ContractorNomenclatureCollation.MassDelete/2
//  - метод для удаления сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Удалить - Массив структур с полями для удаления по фильтру
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Процедура НоменклатураПоставщика_МассовоеУдаление(ПараметрыОбновитьВходящие, Кэш) Экспорт 
	
	Попытка
		ПараметрыЗаписиСервер = Новый Структура;
		ПараметрыЗаписиСервер.Вставить("Номенклатура",		ПараметрыОбновитьВходящие.Номенклатура); 
		ПараметрыЗаписиСервер.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеУдалениеВызовМетода(ПараметрыЗаписиСервер, Кэш);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовоеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПоставщика_ЕдиничноеУдаление(ПараметрыОбновитьВходящие, ДопПараметры) Экспорт 
	
	Попытка
		ПараметрыЗаписи = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Номенклатура);
		ПараметрыЗаписи.Вставить("Номенклатура",	МассивНоменклатуры);
		ПараметрыЗаписи.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));		
		НоменклатураПоставщика_МассовоеУдалениеВызовМетода(ПараметрыЗаписи, ДопПараметры);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничноеОбновление");
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция НоменклатураПоставщика_МассовоеУдалениеВызовМетода(ПараметрыОбновитьВходящие, ДопПараметры)
	
	МассивНоменклатуры = Новый Массив; 
	ДопПараметрыСервер = ДопПараметрыСервер();
		
	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Для Каждого Номенклатура Из КлассСопоставления.Номенклатура1С Цикл
			
			СтруктураЗаписи				= Новый Структура("Id, ContrCode, ContrGTIN, ContrCharacteristic");		
			СтруктураЗаписи.ID			= Номенклатура.Значение.Идентификатор;
			СтруктураЗаписи.ContrCode	= КлассСопоставления.НоменклатураСБИС.Код;
			СтруктураЗаписи.ContrGTIN 	= КлассСопоставления.НоменклатураСБИС.GTIN;
			
			СтруктураЗаписи.ContrCharacteristic = КлассСопоставления.НоменклатураСБИС.Характеристика.Идентификатор;
			
			МассивНоменклатуры.Добавить(СтруктураЗаписи);
			
		КонецЦикла;
	КонецЦикла;	
	
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	Отказ = Ложь;
	РезультатУдаления = ДопПараметры.Кэш.Интеграция.ContractorNomenclatureCollation_MassDelete(ДопПараметры.Кэш, ПараметрыМетода, Новый Структура("СообщатьПриОшибке",Истина),Отказ);
	
	Если Отказ Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при удалении сопоставлений со СБИС: " + РезультатУдаления,
													ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_МассовоеУдалениеВызовМетода");		
	КонецЕсли;
												
	
КонецФункции

// ContractorNomenclatureCollation.MassFind/2
//  - метод для записи / обновления сопоставлений. Во внешней обработке вызывается при загрузке документа после ручного или автоматического указания сопоставлений на форме входящего документа и форме редактирования сопоставлений.
//
// Параметры:
//  ПараметрыОбновитьВходящие	 - Структура
//		Контрагент	- Структура с полями СвФл, либо СвЮл
//		Найти		- Массив структур с полями Номенклатура, Единица, Характеристика
//  Кэш							 - Структура	 - Кэш обработки
//
&НаКлиенте
Функция НоменклатураПоставщика_МассовыйПоиск(ПараметрыОбновитьВходящие, ДопПараметры) Экспорт

	НоменклатураКлючи1С = Новый Массив;
	НоменклатураКлючиСБИС = Новый Массив;
	
	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Если ЗначениеЗаполнено(КлассСопоставления.НоменклатураСБИС.Код) ИЛИ ЗначениеЗаполнено(КлассСопоставления.НоменклатураСБИС.GTIN) Тогда
			НоменклатураКлючиСБИС.Добавить(КлассСопоставления);
		Иначе
			НоменклатураКлючи1С.Добавить(КлассСопоставления);
		КонецЕсли;
	КонецЦикла;
	
	Если НоменклатураКлючиСБИС.Количество() Тогда
		Попытка
			ПараметрыЗаписи = Новый Структура;
			ПараметрыЗаписи.Вставить("Номенклатура",	НоменклатураКлючиСБИС);
			ПараметрыЗаписи.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));
			НоменклатураКлючиСБИС = НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(ПараметрыЗаписи, ДопПараметры);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовыйПоиск");
		КонецПопытки;
	КонецЕсли;
	
	Если НоменклатураКлючи1С.Количество() Тогда
		Попытка
			ПараметрыЗаписи = Новый Структура;
			ПараметрыЗаписи.Вставить("Номенклатура",	НоменклатураКлючи1С);
			ПараметрыЗаписи.Вставить("Ключ",			КлючКонтрагентаСопоставления(ПараметрыОбновитьВходящие.Контрагент));
			НоменклатураКлючи1С = НоменклатураПоставщика_ОбогатитьПоКлючам1С(ПараметрыЗаписи, ДопПараметры);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_МассовыйПоиск");
		КонецПопытки;
	КонецЕсли;
	
		
	//Склеить ответы
	Для Каждого Номенклатура Из НоменклатураКлючи1С Цикл
		НоменклатураКлючиСБИС.Добавить(Номенклатура);	
	КонецЦикла;
	
	Возврат НоменклатураКлючиСБИС;
	
КонецФункции

&НаКлиенте
Функция НоменклатураПоставщика_ЕдиничныйПоиск(ПараметрыОбновитьВходящие, ДопПараметры) Экспорт 
	
	Попытка
		ПараметрыЗаписи = Новый Структура;
		МассивНоменклатуры = Новый Массив;
		МассивНоменклатуры.Добавить(ПараметрыОбновитьВходящие.Номенклатура);
		ПараметрыЗаписи.Вставить("Номенклатура",	МассивНоменклатуры);
		ПараметрыЗаписи.Вставить("Контрагент",			ПараметрыОбновитьВходящие.Контрагент);		
		Возврат	НоменклатураПоставщика_МассовыйПоиск(ПараметрыЗаписи, ДопПараметры);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		МодульОбъектаКлиент().СообщитьСбисИсключение(ИнфоОбОшибке, "СопоставлениеНоменклатуры_СБИС.НоменклатураПоставщика_ЕдиничныйПоиск");
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Функция	НоменклатураПоставщика_ОбогатитьПоКлючамСБИС(ПараметрыОбновитьВходящие, ДопПараметры) 
	
	МассивНоменклатуры = Новый Массив; 
		
	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		СтруктураЗаписи = Новый Структура("DocumentId, ContrCode, ContrCharacteristic, ContrGTIN, ContrMeasureUnitCode, ContrMeasureUnitName");		
		СтруктураЗаписи.ContrCode				= КлассСопоставления.НоменклатураСБИС.Код;
		СтруктураЗаписи.ContrCharacteristic		= КлассСопоставления.НоменклатураСБИС.Характеристика.Наименование; //по ТЗ наименование
		СтруктураЗаписи.ContrGTIN				= КлассСопоставления.НоменклатураСБИС.GTIN; 
					
		Если КлассСопоставления.Свойство("ИдентификаторДокумента") Тогда		
			СтруктураЗаписи.DocumentId					= КлассСопоставления.ИдентификаторДокумента;
		КонецЕсли;
 
		Для Каждого ЕдиницаПоставщика Из КлассСопоставления.НоменклатураСБИС.Единицы Цикл //Единица одна, но ключ неизвестен, поэтому цикл
			
			СтруктураЗаписи.ContrMeasureUnitCode	= ЕдиницаПоставщика.Значение.ОКЕИ;
			СтруктураЗаписи.ContrMeasureUnitName	= ЕдиницаПоставщика.Значение.Название; 
			
		КонецЦикла;
				
		МассивНоменклатуры.Добавить(СтруктураЗаписи);
	КонецЦикла;	
	
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);	

	Отказ = Ложь;
	ДанныеСопоставлений = ДопПараметры.Кэш.Интеграция.ContractorNomenclatureCollation_SearchByContractorData(ДопПараметры.Кэш, ПараметрыМетода, Новый Структура("СообщатьПриОшибке",Истина),Отказ);
	
	Если Отказ Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при запросе сопоставлений со СБИС: " + ДанныеСопоставлений, ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_ОбогатитьПоКлючамСБИС");	
	КонецЕсли;
	
	ОбогатитьОтветСсылками(ДанныеСопоставлений, ДопПараметрыСервер());
	
	НоменклатураПоставщика_ОбогатитьДаннымиПоКлючамСБИС(ПараметрыОбновитьВходящие.Номенклатура, ДанныеСопоставлений, ДопПараметры);
	
	Возврат ПараметрыОбновитьВходящие.Номенклатура;
	
КонецФункции

&НаКлиенте
Процедура	НоменклатураПоставщика_ОбогатитьДаннымиПоКлючамСБИС(КлассыСопоставлений, ДанныеСопоставлений, ДопПараметры)

	Для Каждого СопоставлениеОнлайн Из ДанныеСопоставлений Цикл
		
		Для Каждого КлассСопоставления Из КлассыСопоставлений Цикл
			
			Если КлассСопоставления.НоменклатураСБИС.Код = СопоставлениеОнлайн.ContrCode Тогда //Добавить условие по характеристике, когда она будет 
				
				 //Заполним класс данными
				ДанныеЗаполнения = Новый Структура("Номенклатура, GTIN, Идентификатор, Характеристика1С, ЕдИзм1С");
				//ДанныеЗаполнения.GTIN		=  //Его нет в ответе
				ДанныеЗаполнения.Номенклатура			= СопоставлениеОнлайн.Ссылка;
                ДанныеЗаполнения.Идентификатор			= СопоставлениеОнлайн.Id;
				//ДанныеЗаполнения.Характеристика1С		= //Онлайн не поддерживает
				ДанныеЗаполнения.ЕдИзм1С				= ДанныеЗаполненияMeasureUnit(СопоставлениеОнлайн);
				
				МодульОбъектаКлиент().ОписаниеНоменклатуры1СКлиент_Заполнить(КлассСопоставления, ДанныеЗаполнения);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеЗаполненияMeasureUnit(Сопоставление, ДопПараметры = Неопределено)
	
	ДанныеЗаполнения = Новый Массив;
	
	Если ЗначениеЗаполнено(Сопоставление.MeasureUnit) Тогда
		Для Каждого ЕдиницаИзмерения Из Сопоставление.MeasureUnit Цикл
			
			ДанныеЗаполненияЕдиницы = Новый Структура("ЕдИзм1С, ОКЕИ_1С, Коэффициент1С, ЕдИзмНаименование1С, Номенклатура");	
			ДанныеЗаполненияЕдиницы.ЕдИзм1С				= ЕдиницаИзмерения.Ссылка;
			ДанныеЗаполненияЕдиницы.ОКЕИ_1С				= ЕдиницаИзмерения.MeasureUnitCode; 
			ДанныеЗаполненияЕдиницы.Коэффициент1С		= ЕдиницаИзмерения.MeasureUnitQty;
			ДанныеЗаполненияЕдиницы.ЕдИзмНаименование1С	= ЕдиницаИзмерения.MeasureUnitName;
			ДанныеЗаполненияЕдиницы.Номенклатура		= Сопоставление.Ссылка;
			
			ДанныеЗаполнения.Добавить(ДанныеЗаполненияЕдиницы);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеЗаполнения
	
КонецФункции

&НаКлиенте
Функция СопоставлениеИзменено(Сопоставление, Элемент)

	Если Сопоставление = Неопределено Тогда
		Возврат Истина; //Новое сопоставление созданное вручную
	КонецЕсли;
	
	Если Элемент.Значение._класс = "СопоставлениеДляЕдиницы" Тогда
		
		ОписаниеНоменклатуры1С = Сопоставление.Номенклатура1С.Получить(Элемент.Значение.Владелец);
		
		Если ОписаниеНоменклатуры1С = Неопределено Тогда
			Возврат Истина; //Единица новой номенклатуры 
		КонецЕсли;
		
		ОписаниеЕдиницы = ОписаниеНоменклатуры1С.Единицы.Получить(Элемент.Значение);
		
		Если ОписаниеЕдиницы = Неопределено Тогда
			Возврат Истина; //Новая Единица 			
		КонецЕсли;
		
		//Изменена единица. Что с этим делать непонятно, на онлайне нельзя изменить/удалить единицу. 
		//Если НЕ ОписаниеЕдиницы.Коэффициент = Элемент.Значение.Коэффициент ИЛИ
		//	 НЕ ОписаниеЕдиницы.ОКЕИ = Элемент.Значение.ОКЕИ				 ИЛИ 
		//   НЕ ОписаниеЕдиницы.Название = Элемент.Значение.Название		 Тогда
		//	Возврат Истина;  
		//КонецЕсли;
		
	ИначеЕсли Элемент.Значение._класс = "ОписаниеНоменклатуры1С" Тогда 
		ОписаниеНоменклатуры1С = Сопоставление.Номенклатура1С.Получить(Элемент.Ключ);
		
		Если ОписаниеНоменклатуры1С = Неопределено Тогда
			Возврат Истина; //Новая номенклатура
		КонецЕсли;
		
		Если НЕ ОписаниеНоменклатуры1С.GTIN = Элемент.Значение.GTIN ИЛИ НЕ ОписаниеНоменклатуры1С.Идентификатор = Элемент.Значение.Идентификатор Тогда  
			Возврат Истина;
		КонецЕсли;
		
	Иначе
		МодульОбъектаКлиент().ВызватьСбисИсключение("Недопустимое значение параметра функции Элемент", "СопоставлениеНоменклатуры_СБИС.СопоставлениеИзменено");
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции

&НаКлиенте
Функция	НоменклатураПоставщика_ОбогатитьПоКлючам1С(ПараметрыОбновитьВходящие, ДопПараметры)
	
	ДопПараметрыСервер =  ДопПараметрыСервер();	
	МассивНоменклатуры = Новый Массив; 
	
	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Для Каждого Номенклатура1С Из КлассСопоставления.Номенклатура1С Цикл
			
			Если Номенклатура1С.Значение.Единицы.Количество() Тогда
				
				Для Каждого Единица Из Номенклатура1С.Значение.Единицы Цикл 
					
					СтруктураЗаписи = Новый Структура("DocumentId, Id, MeasureUnitName, MeasureUnitCode");
					
					Если КлассСопоставления.Свойство("ИдентификаторДокумента") Тогда		
						СтруктураЗаписи.DocumentId					= КлассСопоставления.ИдентификаторДокумента;
					КонецЕсли;
							
					СтруктураЗаписи.ID				= Номенклатура1С.Значение.Идентификатор; 
					СтруктураЗаписи.MeasureUnitCode	= Единица.Значение.ОКЕИ; 
					СтруктураЗаписи.MeasureUnitName	= Единица.Значение.Название; 
					МассивНоменклатуры.Добавить(СтруктураЗаписи);
					
				КонецЦикла;
				
			Иначе
				
				СтруктураЗаписи = Новый Структура("DocumentId, Id, MeasureUnitName, MeasureUnitCode");
				
				Если КлассСопоставления.Свойство("ИдентификаторДокумента") Тогда		
					СтруктураЗаписи.DocumentId					= КлассСопоставления.ИдентификаторДокумента;
				КонецЕсли;
						
				СтруктураЗаписи.ID				= Номенклатура1С.Значение.Идентификатор; 
				МассивНоменклатуры.Добавить(СтруктураЗаписи);
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;	
	
	ПараметрыМетода = Новый Структура;	
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",ПараметрыОбновитьВходящие.Ключ));
	ПараметрыМетода.Вставить("Data",МассивНоменклатуры);
	
	Отказ				= Ложь;
	ДанныеСопоставлений = ДопПараметры.Кэш.Интеграция.ContractorNomenclatureCollation_SearchByOwnerData(ДопПараметры.Кэш, ПараметрыМетода, Новый Структура("СообщатьПриОшибке",Истина),Отказ);
	
	Если Отказ Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при чтении сопоставлений со СБИС: " + ДанныеСопоставлений,
													ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_ОбогатитьПоКлючам1С");	
	КонецЕсли;
	
	ОбогатитьОтветСсылками(ДанныеСопоставлений, ДопПараметрыСервер());

	Для Каждого КлассСопоставления Из ПараметрыОбновитьВходящие.Номенклатура Цикл
		Для Каждого СопоставлениеОнлайн Из ДанныеСопоставлений Цикл
			Если НЕ КлассСопоставления.Номенклатура1С.Получить(СопоставлениеОнлайн.Ссылка) = Неопределено Тогда
				
				КлассСопоставления.НоменклатураСБИС.Наименование	= СопоставлениеОнлайн.ContrName;
				КлассСопоставления.НоменклатураСБИС.Код				= СопоставлениеОнлайн.ContrCode;
				
				Если СопоставлениеОнлайн.Свойство("ContrMeasureUnitCode") Тогда
					ДанныеЗаполненияЕдиницы				= Новый Структура("ОКЕИ, Название, Коэффициент");
					ДанныеЗаполненияЕдиницы.ОКЕИ		= СопоставлениеОнлайн.ContrMeasureUnitCode;
					ДанныеЗаполненияЕдиницы.Название	= СопоставлениеОнлайн.ContrMeasureUnitName;
					ДанныеЗаполненияЕдиницы.Коэффициент = СопоставлениеОнлайн.ContrMeasureUnitQty;
		
					МодульОбъектаКлиент().СопоставлениеДляЕдиницыКлиент_ЗаполнитьСБИС(КлассСопоставления,ДанныеЗаполненияЕдиницы);	
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
		
	Возврат ПараметрыОбновитьВходящие.Номенклатура;

КонецФункции

//ContractorNomenclatureCollation.List/3
//метод для массовой вычитки сопоставлений номенклатурных позиций контрагентов со своей номенклатурой и данных внешней системы.
//Метод возвращает список с данными о сопоставленных позициях, отсортированных в порядке возрастания по ContrName
//Параметры списка структура с полями Контрагент, Навигация, Фильтр
&НаКлиенте
Функция НоменклатураПоставщика_Список(ПараметрыСписка, ДопПараметры) Экспорт
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("Contractor",Новый Структура("Inn",КлючКонтрагентаСопоставления(ПараметрыСписка.Контрагент)));
	ПараметрыМетода.Вставить("Navigation",Новый Структура("PageSize, PageNumber", ПараметрыСписка.Навигация.РазмерСтраницы, ПараметрыСписка.Навигация.НомерСтраницы));
	
	ДопПараметрыСервер =  ДопПараметрыСервер();

	стрФильтр = Новый Структура;
	Если ПараметрыСписка.Фильтр.Свойство("Номенклатура") И ЗначениеЗаполнено(ПараметрыСписка.Фильтр.Номенклатура) Тогда
		стрФильтр.Вставить("Id",КлючНоменклатурыСопоставления(ПараметрыСписка.Фильтр.Номенклатура, ДопПараметрыСервер));
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("НаименованиеСБИС") И ЗначениеЗаполнено(ПараметрыСписка.Фильтр.НаименованиеСБИС) Тогда
		стрФильтр.Вставить("ContrName",ПараметрыСписка.Фильтр.НаименованиеСБИС);
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("GTIN") И ЗначениеЗаполнено(ПараметрыСписка.Фильтр.GTIN) И НЕ ПараметрыСписка.Фильтр.GTIN = "Нет" Тогда
		стрФильтр.Вставить("ContrGTIN",ПараметрыСписка.Фильтр.GTIN);
	КонецЕсли;
	Если ПараметрыСписка.Фильтр.Свойство("ИдСБИС") И ЗначениеЗаполнено(ПараметрыСписка.Фильтр.ИдСБИС) Тогда
		стрФильтр.Вставить("ContrCode",ПараметрыСписка.Фильтр.ИдСБИС);
	КонецЕсли;

	ПараметрыМетода.Вставить("Filter",стрФильтр);
	Отказ				= Ложь;
	ДанныеСопоставлений = ДопПараметры.Кэш.Интеграция.ContractorNomenclatureCollation_List(ДопПараметры.Кэш, ПараметрыМетода, Новый Структура("СообщатьПриОшибке",Истина),Отказ);
	
	Если Отказ Тогда
		МодульОбъектаКлиент().ВызватьСбисИсключение("Ошибка при чтении сопоставлений со СБИС: " + ДанныеСопоставлений,
													ДопПараметры.Кэш.ФормаРаботыСНоменклатурой + ".НоменклатураПоставщика_Список");												
	КонецЕсли;

	Результат = ПреобразоватьОтветОнлайна(ДанныеСопоставлений);	
	
	Возврат Результат;
	
КонецФункции

