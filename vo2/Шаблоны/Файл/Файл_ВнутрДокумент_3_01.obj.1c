
&НаКлиенте
Функция ПолучитьДанныеИзДокумента1С(Кэш,Контекст) Экспорт
	// Функция формирует структуру выгружаемого файла и добавляет его в состав пакета
	Попытка	
		Контекст.Вставить("ТаблДок",Новый Структура());
		Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.Вставить("СтрТабл",Новый Массив);
		Контекст.Вставить("ИтогСумма",0);
		Контекст.Вставить("ИтогСуммаБезНалога",0);
		Контекст.Вставить("ИтогСуммаНДС",0);
		Контекст.Вставить("ИтогКоличество",0);
		Контекст.Вставить("ИтогБрутто",0);
		Контекст.Вставить("ИтогНетто",0);
		Контекст.Вставить("ИтогКолМест",0);
		
		Контекст.Вставить("ПредИтогСумма",0);
		Контекст.Вставить("ПредИтогСуммаБезНалога",0);
		Контекст.Вставить("ПредИтогСуммаНДС",0);
		Контекст.Вставить("НДСИсчисляетсяАгентом", Кэш.ОбщиеФункции.РассчитатьЗначение("НДСИсчисляетсяАгентом", Контекст.ФайлДанные) = Истина);
		НоменклатураКодКонтрагента = Кэш.ОбщиеФункции.РассчитатьЗначение("НоменклатураКодКонтрагента", Контекст.ФайлДанные,Кэш);  // надо сопоставить номенклатуру перед отправкой
		Если ЗначениеЗаполнено(НоменклатураКодКонтрагента) Тогда
			Контекст.Вставить("НоменклатураКодКонтрагента",НоменклатураКодКонтрагента);	
		КонецЕсли;
		
		//1182697110 {
		//ПолучитьТабличнуюЧастьДокумента1С(Кэш,Контекст);
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПолучитьТабличнуюЧастьДокумента1С","Файл_Шаблон","", Кэш);
		фрм.ПолучитьТабличнуюЧастьДокумента1С(Кэш,Контекст);
		//}
		
		Если Контекст.ТаблДок.СтрТабл.Количество() = 0 Тогда//нет такого документа
			Возврат Истина;
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("мТаблДетал") Тогда
			Контекст.Вставить("ТаблДетал",Новый Структура());                 
			Контекст.ТаблДетал.Вставить("СтрТабл",Новый Массив);
			
			//1182697110 {
			//ПолучитьДетализациюТабЧастиДокумента1С(Кэш,Контекст);
			фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПолучитьДетализациюТабЧастиДокумента1С","Файл_Шаблон","", Кэш);
			фрм.ПолучитьДетализациюТабЧастиДокумента1С(Кэш,Контекст);
			//}

		КонецЕсли;
		
		ИтогТабл=Новый Структура;
		ИтогТабл.Вставить("Кол_во", Формат(Контекст.ИтогКоличество, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		ИтогТабл.Вставить("Сумма", Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
		ИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		ИтогТабл.Вставить("НДС",Новый Структура);
		ИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
		Если Контекст.ИтогКолМест>0 Тогда
			ИтогТабл.Вставить("Упаковка",Новый Структура);
			ИтогТабл.Упаковка.Вставить("КолМест",Формат(Контекст.ИтогКолМест, "ЧЦ=17; ЧДЦ=0; ЧРД=.; ЧГ=0; ЧН=0"));	
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("ЕдиницаИзмеренияВеса") Тогда
			ЕдиницаИзмеренияВеса = Контекст.ФайлДанные.ЕдиницаИзмеренияВеса;
			Если Контекст.ИтогБрутто > 0 Тогда
				ИтогТаблБрутто = Новый Структура;
				ИтогТаблБрутто.Вставить("Кол_во", Формат(Контекст.ИтогБрутто, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.00"));
				Если Контекст.ФайлДанные.Свойство("МассаИтогПрописью") Тогда
					Контекст.ФайлДанные.Вставить("МассаИтог", Контекст.ИтогБрутто);
					ИтогТаблБрутто.Вставить("Прописью", Кэш.ОбщиеФункции.РассчитатьЗначение("МассаИтогПрописью", Контекст.ФайлДанные,Кэш));
				Иначе	
					ИтогТаблБрутто.Вставить("Прописью", ЧислоПрописью(Контекст.ИтогБрутто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".");
				КонецЕсли;	
				ИтогТабл.Вставить("Брутто", ИтогТаблБрутто);
			КонецЕсли;
			
			Если Контекст.ИтогНетто > 0 Тогда
				ИтогТаблНетто = Новый Структура;
				ИтогТаблНетто.Вставить("Кол_во", Формат(Контекст.ИтогНетто, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.00"));
				Если Контекст.ФайлДанные.Свойство("МассаИтогПрописью") Тогда
					Контекст.ФайлДанные.Вставить("МассаИтог", Контекст.ИтогНетто);
					ИтогТаблНетто.Вставить("Прописью", Кэш.ОбщиеФункции.РассчитатьЗначение("МассаИтогПрописью", Контекст.ФайлДанные,Кэш));
				Иначе	
					ИтогТаблНетто.Вставить("Прописью", ЧислоПрописью(Контекст.ИтогНетто, ,",,,,,,,,0")+ " " + СокрЛП(ЕдиницаИзмеренияВеса) + ".");
				КонецЕсли;	
				ИтогТабл.Вставить("Нетто", ИтогТаблНетто);
			КонецЕсли;
		КонецЕсли;
		
		Если Контекст.Свойство("ЕстьПредыдущиеДанные") Тогда
			ПредИтогТабл=Новый Структура;
			ПредИтогТабл.Вставить("Сумма", Формат(Контекст.ПредИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ПредИтогТабл.Вставить("СуммаБезНал", Формат(Контекст.ПредИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
			ПредИтогТабл.Вставить("НДС",Новый Структура);
			ПредИтогТабл.НДС.Вставить("Сумма",Формат(Контекст.ПредИтогСуммаНДС, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));	
			ИтогТабл.Вставить("ПредИтогТабл",ПредИтогТабл);
		КонецЕсли;
		
		//Контекст.ТаблДок.Вставить("ИтогТабл",Новый Массив);
		Контекст.ТаблДок.ИтогТабл.Добавить(ИтогТабл);
		
		
		Док  = Новый Структура;
		Док.Вставить("Файл",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Файл",Контекст.ФайлДанные,Док.Файл);
		Док.Файл.Вставить("Документ",Новый Структура);
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Документ",Контекст.ФайлДанные,Док.Файл.Документ);
		Док.Файл.Документ.Вставить("Основание",Новый Массив);
		
		//!!!
		//Валюта =  Кэш.ОбщиеФункции.РассчитатьЗначение("Валюта_КодОКВ", Контекст.ФайлДанные, Кэш);
		//Если ЗначениеЗаполнено(Валюта) Тогда
		//	Док.Файл.Документ.Вставить("Валюта",Новый Структура);
		//	Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Валюта",Контекст.ФайлДанные,Док.Файл.Документ.Валюта);
		//КонецЕсли;
		//}	
		
		Отправитель = "";
		Получатель = "";
		
		ОтправительРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Отправитель_Роль", Контекст.ФайлДанные, Кэш);
		ПолучательРоль=Кэш.ОбщиеФункции.РассчитатьЗначение("Получатель_Роль", Контекст.ФайлДанные, Кэш);
		
		Если Не ЗначениеЗаполнено(ОтправительРоль) Тогда
			ОтправительРоль = "Отправитель";
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ПолучательРоль) Тогда
			ПолучательРоль = "Получатель";
		КонецЕсли;
		
		//1182697110 {
		БезПолучателя = Ложь;
		Если НЕ Док.Файл.Документ.Свойство(ПолучательРоль)Тогда
			Док.Файл.Документ.Вставить(ПолучательРоль, Новый Структура());
			БезПолучателя = Истина;

		КонецЕсли;
		//}
		
		Если Контекст.ФайлДанные.Свойство("мСторона") Тогда
			Для Каждого Параметр Из Контекст.ФайлДанные.мСторона Цикл
				Если Параметр.Значение.Свойство("Роль") Тогда
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Роль",Параметр.Значение,Кэш);
				Иначе
					Роль = Кэш.ОбщиеФункции.РассчитатьЗначение("Сторона_Роль",Параметр.Значение,Кэш);
				КонецЕсли;
				Если Роль = ОтправительРоль Тогда
					Сертификат = Кэш.ОбщиеФункции.РассчитатьЗначение("Сертификат",Параметр.Значение,Кэш);
				КонецЕсли;
				Сторона = Кэш.ОбщиеФункции.ПолучитьСторону(Кэш,Параметр.Значение);     //?????
				Если Сторона<>Неопределено Тогда
					Док.Файл.Документ.Вставить(Роль,Сторона);
				КонецЕсли;
			КонецЦикла;
			
			Если Не Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
				Сообщить("Не удалось определить ИНН получателя документа "+строка(Контекст.Документ));
				Возврат Ложь;
			КонецЕсли;
			
			Если Не Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
				Сообщить("Не удалось определить ИНН отправителя документа "+строка(Контекст.Документ));
				Возврат Ложь;
			КонецЕсли;
			
			//!!!
			////// Если Грузоотправитель и грузополучатель нужны, но они не попали в файл, то берем их с отправителя и получателя
			////Если Не Контекст.Свойство("ЗаполнятьГрузотпрГрузполуч") или (Контекст.Свойство("ЗаполнятьГрузотпрГрузполуч") и Контекст.ЗаполнятьГрузотпрГрузполуч = Истина) Тогда
			////	Если Контекст.ФайлДанные.мСторона.Свойство("Грузоотправитель") и Не Док.Файл.Документ.Свойство("Грузоотправитель") и Док.Файл.Документ.Свойство(ОтправительРоль) Тогда
			////		Док.Файл.Документ.Вставить("Грузоотправитель",Новый Структура);		
			////		Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Док.Файл.Документ.Грузоотправитель,Док.Файл.Документ[ОтправительРоль]);
			////	КонецЕсли;
			////	Если Контекст.ФайлДанные.мСторона.Свойство("Грузополучатель") и Не Док.Файл.Документ.Свойство("Грузополучатель") и Док.Файл.Документ.Свойство(ПолучательРоль) Тогда
			////		Док.Файл.Документ.Вставить("Грузополучатель",Новый Структура);		
			////		Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Док.Файл.Документ.Грузополучатель,Док.Файл.Документ[ПолучательРоль]);
			////	КонецЕсли;
			////КонецЕсли;
			
			Отправитель = Кэш.ОбщиеФункции.СбисСкопироватьОбъект(Док.Файл.Документ[ОтправительРоль]);
			Получатель = Док.Файл.Документ[ПолучательРоль];

			//1182697110 {
			Если БезПолучателя Тогда
				Получатель = Отправитель;
			КонецЕсли;

		КонецЕсли;
		Если Док.Файл.Свойство("Имя") Тогда
			Если Контекст.ФайлДанные.Свойство("мСторона") и Док.Файл.Документ[ПолучательРоль].Свойство("Идентификатор") и Док.Файл.Документ[ОтправительРоль].Свойство("Идентификатор") Тогда
				Док.Файл.Имя = Док.Файл.Имя + Док.Файл.Документ[ПолучательРоль].Идентификатор+"_"+Док.Файл.Документ[ОтправительРоль].Идентификатор;
			КонецЕсли;
			
			Док.Файл.Имя = Док.Файл.Имя+"_"+Формат(ТекущаяДата(),"ДФ=ггггММдд")+"_"+строка(Новый УникальныйИдентификатор());
		КонецЕсли;
		
		
		Если Контекст.ФайлДанные.Свойство("мОснование") Тогда
			фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПолучитьДанныеИзДокумента1С_мОснование","Файл_"+Контекст.ФайлДанные.Файл_Формат+"_"+СтрЗаменить(СтрЗаменить(Контекст.ФайлДанные.Файл_ВерсияФормата, ".", "_"), " ", ""),"Файл_Шаблон", Кэш);
			фрм.ПолучитьДанныеИзДокумента1С_мОснование(Кэш, Док, Контекст);
		КонецЕсли;
		
		Если Контекст.ФайлДанные.Свойство("мПараметр") Тогда
			Док.Файл.Документ.Вставить("Параметр",Новый Массив);
			Для Каждого Элемент Из Контекст.ФайлДанные.мПараметр Цикл
				Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(Контекст.ФайлДанные,Элемент.Значение);
				Параметр = Новый Структура();
				Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"Параметр",Контекст.ФайлДанные,Параметр);
				Док.Файл.Документ.Параметр.Добавить(Параметр);
			КонецЦикла;
		КонецЕсли;
		
		ОтветственныйСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруОтветственного(Кэш,Контекст);
		ПодразделениеСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруПодразделения(Кэш,Контекст);
		РегламентСтруктура = Кэш.ОбщиеФункции.ПолучитьСтруктуруРегламента(Кэш,Контекст);
		ОснованияМассив = Кэш.ОбщиеФункции.ПолучитьМассивОснований(Кэш,Контекст);  
		СвязанныеДокументы1С = Кэш.ОбщиеФункции.сбисПолучитьСвязанныеДокументы1С(Кэш,Контекст);
		ДатаВложения = ?(Док.Файл.Документ.Свойство("Дата"), Док.Файл.Документ.Дата, "");
		НомерВложения = ?(Док.Файл.Документ.Свойство("Номер"), Док.Файл.Документ.Номер, "");
		Если Контекст.НДСИсчисляетсяАгентом Тогда
			СуммаВложения = Формат(Контекст.ИтогСуммаБезНалога, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		Иначе
			СуммаВложения = Формат(Контекст.ИтогСумма, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		КонецЕсли;
		НазваниеВложения = ?(Док.Файл.Документ.Свойство("Название"), Док.Файл.Документ.Название+" № "+НомерВложения+" от "+ДатаВложения+" на сумму "+СуммаВложения, "");
		Тип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_Тип", Контекст.ФайлДанные,Кэш);
		ПодТип = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодТип", Контекст.ФайлДанные,Кэш);
		ВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ВерсияФормата", Контекст.ФайлДанные,Кэш);
		ПодВерсияФормата = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодВерсияФормата", Контекст.ФайлДанные,Кэш);
		Примечание = Кэш.ОбщиеФункции.РассчитатьЗначение("Примечание", Контекст.ФайлДанные,Кэш);
		Провести = Кэш.ОбщиеФункции.РассчитатьЗначение("Провести", Контекст.ФайлДанные,Кэш); // alo Провести
		
		Док.Файл.Документ.Вставить("ТаблДок", Контекст.ТаблДок);
		Если Контекст.Свойство("ТаблДетал") И Контекст.ТаблДетал.СтрТабл.Количество() > 0 Тогда
			Док.Файл.Документ.Вставить("ТаблДетал", Контекст.ТаблДетал);
		КонецЕсли;
		Вложение = Новый Структура("СтруктураДокумента,Отправитель,Получатель,Ответственный,Подразделение,Регламент,ДокументОснование, Документ1С, Название, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,Дата,Номер,Сумма", Док,Отправитель,Получатель,ОтветственныйСтруктура,ПодразделениеСтруктура,РегламентСтруктура,ОснованияМассив, Контекст.Документ, НазваниеВложения, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ДатаВложения,НомерВложения,СуммаВложения);
		Если ЗначениеЗаполнено(НоменклатураКодКонтрагента) Тогда
			Вложение.Вставить("НоменклатураКодКонтрагента",НоменклатураКодКонтрагента);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Примечание) Тогда
			Вложение.Вставить("Примечание",Примечание);	
		КонецЕсли;
		Если ЗначениеЗаполнено(Сертификат) Тогда
			Вложение.Вставить("Сертификат",Сертификат);	
		КонецЕсли;
		ДопПоля= Новый Структура;	// alo ДопПоля
		Кэш.ОбщиеФункции.ЗаполнитьАтрибуты(Кэш,"ДопПоля",Контекст.ФайлДанные,ДопПоля);
		Если ЗначениеЗаполнено(ДопПоля) Тогда
			Вложение.Вставить("ДопПоля",ДопПоля);
		Конецесли;
		Если ЗначениеЗаполнено(Провести) Тогда // alo Провести
			Вложение.Вставить("Провести",Провести);	
		КонецЕсли;   
		Если ЗначениеЗаполнено(СвязанныеДокументы1С) Тогда
			СвязанныеДокументы1С.Вставить(0, Контекст.Документ);
			Вложение.Вставить("Документы1С",СвязанныеДокументы1С);	
		КонецЕсли;
		Контекст.СоставПакета.Вложение.Добавить(Вложение);
		фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("сбисПослеФормированияДокумента","Файл_"+Кэш.ОбщиеФункции.сбисЗаменитьНедопустимыеСимволы(Контекст.ФайлДанные.Файл_Формат)+"_"+Кэш.ОбщиеФункции.сбисЗаменитьНедопустимыеСимволы(Контекст.ФайлДанные.Файл_ВерсияФормата),"Файл_Шаблон", Кэш);
		Если фрм<>Ложь Тогда
			фрм.сбисПослеФормированияДокумента(Док, Кэш, Контекст);	
			Вложение.СтруктураДокумента = Док; // на случай, если Док поменялся в функции сбисПослеФормированияДокумента
		КонецЕсли;
		
		//1182697110 {
		ПривестиФЛК(Контекст.ФайлДанные.Вложение_Тип, Контекст.ФайлДанные.Вложение_ВерсияФормата, Док);
		//}
		
		Возврат Истина;
		
	Исключение
		Если Кэш.Свойство("РезультатОтправки") Тогда
			Кэш.РезультатОтправки.НеСформировано = Кэш.РезультатОтправки.НеСформировано+1;
			Кэш.РезультатОтправки.ОшибкиДоОтправки = Кэш.РезультатОтправки.ОшибкиДоОтправки + 1;
			Кэш.ОбщиеФункции.ДобавитьОшибкуВРезультатОтправки(Кэш, "Документ не сформирован", ОписаниеОшибки(), Контекст.Документ, 726)
		КонецЕсли;
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции


//1182697110 {
&НаКлиенте
Процедура ПривестиФЛК(Тип, ВерсияФормата, Док)
	
	Если Тип = "АктСписания" И ВерсияФормата = "3.01" Тогда
		ФЛК_АктСписания_3_01(Док);	
	КонецЕсли;
	
	Если Тип = "АктВыпуска" И ВерсияФормата = "3.01" Тогда
		ФЛК_АктВып_3_01(Док);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФЛК_АктСписания_3_01(Док)
	
	Док.Файл.Документ.Удалить("Получатель");
	
	Если Док.Файл.Документ.ТаблДок.Свойство("ИтогТабл") Тогда
		
		СтрокаРеквизитов = "Сумма";
		СоответствиеФормату = ПолучитьСоответсвиеФормату(СтрокаРеквизитов);
		
		Для Каждого ТекСтрока ИЗ Док.Файл.Документ.ТаблДок.ИтогТабл Цикл
			
			МассивКлючей = МассивКлючейДляУдаления(ТекСтрока, СоответствиеФормату);
			УдалитьКлючиПоМассиву(ТекСтрока, МассивКлючей);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если Док.Файл.Документ.ТаблДок.Свойство("СтрТабл") Тогда
		
		СтрокаРеквизитов = "ПорНомер, Название, ЕдИзм, Примечание, ОКЕИ, Идентификатор, Кол_во, Цена, Сумма, НомСредИдентТов, Параметр";
		СоответствиеФормату = ПолучитьСоответсвиеФормату(СтрокаРеквизитов);
		
		Для Каждого ТекСтрока ИЗ Док.Файл.Документ.ТаблДок.СтрТабл Цикл
			
			МассивКлючей = МассивКлючейДляУдаления(ТекСтрока, СоответствиеФормату);
			УдалитьКлючиПоМассиву(ТекСтрока, МассивКлючей);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФЛК_АктВып_3_01(Док)
	
	Док.Файл.Документ.ТаблДок.Удалить("ИтогТабл");
	
	Если Док.Файл.Документ.ТаблДок.Свойство("СтрТабл") Тогда
		
		СтрокаРеквизитов = "ОКЕИ, Идентификатор, Примечание, ПорНомер, Название, ЕдИзм, Вместимость, Кол_во, Сумма, Цена, GTIN, НомСредИдентТов, Упаковка, СоставСтрТабл, Параметр";
		СоответствиеФормату = ПолучитьСоответсвиеФормату(СтрокаРеквизитов);
		
		Для Каждого ТекСтрока ИЗ Док.Файл.Документ.ТаблДок.СтрТабл Цикл
			
			МассивКлючей = МассивКлючейДляУдаления(ТекСтрока, СоответствиеФормату);
			УдалитьКлючиПоМассиву(ТекСтрока, МассивКлючей);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСоответсвиеФормату(СтрокаРеквизитов)
	
	СтруктураРеквизитов = Новый Структура(СтрокаРеквизитов);
	Результат = Новый Соответствие;
	
	Для Каждого ТекРеквизит ИЗ СтруктураРеквизитов Цикл
		Результат.Вставить(ТекРеквизит.Ключ, Истина);	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция МассивКлючейДляУдаления(СтруктураДанных, СоответствиеФормату)
	
	Результат = Новый Массив;
	
	Для Каждого ТекРеквизит ИЗ СтруктураДанных Цикл
		
		Если СоответствиеФормату.Получить(ТекРеквизит.Ключ) <> Неопределено Тогда
			Продолжить;		
		КонецЕсли;
		
		Результат.Добавить(ТекРеквизит.Ключ);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура УдалитьКлючиПоМассиву(СтруктураДанных, МассивКлючей)
	
	Для Каждого ТекКлюч ИЗ МассивКлючей Цикл
		СтруктураДанных.Удалить(ТекКлюч);	
	КонецЦикла;
	
КонецПроцедуры
//}

