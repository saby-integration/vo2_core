
#Область include_local_ПолучитьМодульОбъекта
#КонецОбласти

&НаКлиенте
Функция СформироватьРасхождение(ДанныеВложений, Кэш) Экспорт
	
	СтруктураФайлаКонтрагента = ДанныеВложений.СтруктураФайлаКонтрагента;
	СтруктураФайлаНаша = ДанныеВложений.ВложениеНаше.СтруктураДокумента;
	Рез = СформироватьРасхождениеНаКлиенте(СтруктураФайлаКонтрагента, СтруктураФайлаНаша);
	ОшибкаПреобразования = Ложь;
	ШаблонXML = Кэш.ОбщиеФункции.СбисПреобразоватьДокументВXML(Рез.Док, Кэш.СовместимостьМетодов, ОшибкаПреобразования);
	
	Если ОшибкаПреобразования Тогда
		Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, ШаблонXML);
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеВложений.ВложениеНаше.Вставить("XMLДокумента", ШаблонXML);
	ТекстHTML = Кэш.Интеграция.ПолучитьHTMLПоXML(Кэш, ДанныеВложений.ВложениеНаше);
	Вложение = Новый Структура("СтруктураФайла,XMLДокумента,Название,ТекстHTML, Тип, ПодТип, ВерсияФормата,ПодВерсияФормата,ЕстьРасхождения", Рез.Док, ШаблонXML, "Акт о расхождении",ТекстHTML, ДанныеВложений.ВложениеНаше.Тип, ДанныеВложений.ВложениеНаше.ПодТип, ДанныеВложений.ВложениеНаше.ВерсияФормата,ДанныеВложений.ВложениеНаше.ПодВерсияФормата, Рез.ЕстьРасхождения);
	
	Возврат Вложение;
	
КонецФункции

&НаКлиенте
Функция СформироватьРасхождениеНаКлиенте(СтруктураФайлаКонтрагента, СтруктураФайлаНаша) Экспорт
    
	Кэш = ВладелецФормы.Кэш;
	ЧисловойТип = Новый ОписаниеТипов("Число");
	
	Док  = Новый Структура;
	Док.Вставить("Файл",Новый Структура);
	Док.Файл.Вставить("Формат","АктРасхождение");
	Док.Файл.Вставить("ВерсияФормата","3.03");
	Док.Файл.Вставить("Имя","SE_TORG2_");
	
	Если СтруктураФайлаНаша.Файл.Свойство("КодФормы") тогда
		Док.Файл.Вставить("КодФормы",СтруктураФайлаНаша.Файл.КодФормы);
	КонецЕсли;
	
	ДокументАкт303 = Новый Структура;
	
	ДанныеФормирования = Новый Структура("ДокументАкт303, СтруктураФайлаНаша, СтруктураФайлаКонтрагента",
		ДокументАкт303,
		СтруктураФайлаНаша,
		СтруктураФайлаКонтрагента);
		
	ДопПараметры = Новый Структура("Кэш, ЧисловойТип, ЕстьРасхождения", Кэш, ЧисловойТип, Ложь);
	
	СформироватьШапкуДокумента(ДанныеФормирования, ДопПараметры);
	
	Док.Файл.Вставить("Документ", ДокументАкт303);
	
	ДокументАкт303.Вставить("СписокСтрОтклонения", Новый Структура);
	
	СформироватьТабличнуюЧастьДокумента(ДанныеФормирования, ДопПараметры);
	
	Возврат Новый Структура("Док, ЕстьРасхождения", Док, ДопПараметры.ЕстьРасхождения);
	
КонецФункции

&НаКлиенте
Процедура СформироватьШапкуДокумента(ДанныеФормирования, ДопПараметры)
	Перем СторонаДокумента;
	
	Кэш = ДопПараметры.Кэш;

	ДокументАкт303				= ДанныеФормирования.ДокументАкт303;
	СтруктураФайлаНаша			= ДанныеФормирования.СтруктураФайлаНаша;
	СтруктураФайлаКонтрагента	= ДанныеФормирования.СтруктураФайлаКонтрагента;
	
	ДокументАкт303.Вставить("Дата",		формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	ДокументАкт303.Вставить("Номер",	СтруктураФайлаНаша.Файл.Документ.Номер);
	ДокументАкт303.Вставить("Название",	"Акт о расхождении");
	ДокументАкт303.Вставить("Стороны",	Новый Структура);
	
	ДокументАкт303.Вставить("СписокОснование", Новый Структура);
	ДокументАкт303.СписокОснование.Вставить("Основание", Новый Массив);
	
	Основание = Новый Структура("Дата, Номер");
	ЗаполнитьЗначенияСвойств(Основание, СтруктураФайлаКонтрагента.Файл.Документ);
	
	ДокументАкт303.СписокОснование.Основание.Добавить(Основание);
	
	МассивСторон = Новый Соответствие;
	МассивСторон.Вставить("Отправитель",		"Поставщик");
	МассивСторон.Вставить("Получатель",			"Покупатель");
	МассивСторон.Вставить("Грузоотправитель",	"Грузоотправитель");
	МассивСторон.Вставить("Грузополучатель",	"Грузополучатель");
	
	Для каждого ТипСтороны Из МассивСторон Цикл
	
		Если СтруктураФайлаКонтрагента.Файл.Документ.Свойство(ТипСтороны.Ключ, СторонаДокумента) Тогда
			
			СторонаДокумента303 = Новый Структура;
			
			Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(СторонаДокумента303, СторонаДокумента);
			
			Если СторонаДокумента.Свойство("Адрес") Тогда
				ПреобразоватьСтруктуруАдресаВМассив(СторонаДокумента303);
			КонецЕсли;
			
			Если СторонаДокумента303.Свойство("Код") Тогда
				СторонаДокумента303.Удалить("Код");
			КонецЕсли;
			
			ДокументАкт303.Стороны.Вставить(ТипСтороны.Значение, СторонаДокумента303);
			
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СформироватьТабличнуюЧастьДокумента(ДанныеФормирования, ДопПараметры)
	
	ЧисловойТип	= ДопПараметры.ЧисловойТип;

	ДокументАкт303				= ДанныеФормирования.ДокументАкт303;
	СтруктураФайлаКонтрагента	= ДанныеФормирования.СтруктураФайлаКонтрагента;
	
	ТабЧастьКонтрагента = Новый Соответствие;   // сворачиваем табличную часть по идентификатору строки
	
	Для Каждого СтрТабл Из СтруктураФайлаКонтрагента.Файл.Документ.ТаблДок.СтрТабл Цикл
		
		Если НЕ (СтрТабл.Свойство("Идентификатор") И ЗначениеЗаполнено(СтрТабл.Идентификатор)) Тогда

			ТабЧастьКонтрагента.Вставить(Новый УникальныйИдентификатор, СтрТабл);
			Продолжить;

		КонецЕсли;
			
		СтрокаСоответствия = ТабЧастьКонтрагента.Получить(СтрТабл.Идентификатор);
		
		// Если нет, то просто добавляем без вычислений
		Если СтрокаСоответствия = Неопределено Тогда
			ТабЧастьКонтрагента.Вставить(СтрТабл.Идентификатор, СтрТабл);
			Продолжить;
		КонецЕсли;
			
		Если СтрТабл.Свойство("Кол_во")
			И СтрокаСоответствия.Свойство("Кол_во") Тогда
			Кол_во = Число(СтрокаСоответствия.Кол_во) + Число(СтрТабл.Кол_во);
			СтрокаСоответствия.Кол_во = Формат(Кол_во, "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000");
		КонецЕсли;
		
		Если СтрТабл.Свойство("СуммаБезНал")
			И СтрокаСоответствия.Свойство("СуммаБезНал") Тогда
			СуммаБезНал = Число(СтрокаСоответствия.СуммаБезНал) + Число(СтрТабл.СуммаБезНал);
			СтрокаСоответствия.СуммаБезНал = Формат(СуммаБезНал, "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		КонецЕсли;
		
		Если СтрТабл.Свойство("Сумма")
			И СтрокаСоответствия.Свойство("Сумма") Тогда
			Сумма = Число(СтрокаСоответствия.Сумма) + Число(СтрТабл.Сумма);
			СтрокаСоответствия.Сумма = Формат(Сумма,"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
		КонецЕсли;
		
		Если СтрТабл.Свойство("НДС")
			И СтрТабл.НДС.Свойство("Сумма")
			И СтрокаСоответствия.Свойство("НДС")
			И СтрокаСоответствия.НДС.Свойство("Сумма") Тогда
			
			СуммаНДССоотв = ЧисловойТип.ПривестиЗначение(СтрокаСоответствия.НДС.Сумма);
			СуммаНДССтрТабл = ЧисловойТип.ПривестиЗначение(СтрТабл.НДС.Сумма);
			СтрокаСоответствия.НДС.Сумма = Формат(СуммаНДССоотв + СуммаНДССтрТабл,"ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00");
			
		КонецЕсли;
	
	КонецЦикла;
	
	ДанныеФормирования.Вставить("ТабЧастьКонтрагента", ТабЧастьКонтрагента);
	ДопПараметрыСервера = Новый Структура("ЧисловойТип, ЕстьРасхождения", ЧисловойТип, ДопПараметры.ЕстьРасхождения);
	
	РезультатФормированияСервера = СформироватьТабличнуюЧастьДокументаНаСервере(ДанныеФормирования, ДопПараметрыСервера);
	ДопПараметры.ЕстьРасхождения = РезультатФормированияСервера.ДопПараметры.ЕстьРасхождения;
	ЗаполнитьЗначенияСвойств(ДокументАкт303, РезультатФормированияСервера.ДанныеФормирования.ДокументАкт303, "СписокСтрОтклонения");

КонецПроцедуры

&НаСервере
Функция СформироватьТабличнуюЧастьДокументаНаСервере(Знач ДанныеФормирования, Знач ДопПараметры = Неопределено)

	ДокументАкт303				= ДанныеФормирования.ДокументАкт303;
	СтруктураФайлаНаша			= ДанныеФормирования.СтруктураФайлаНаша;
	ТабЧастьКонтрагента			= ДанныеФормирования.ТабЧастьКонтрагента;
	
	РезультатФормирования = Новый Структура("ДанныеФормирования, ДопПараметры", ДанныеФормирования, ДопПараметры);
	
	ЧисловойТип = ДопПараметры.ЧисловойТип;

	ТабЧастьНаша = МассивСтруктурВТаблицуЗначений(СтруктураФайлаНаша.Файл.Документ.СписокСтрТабл.СтрТабл);
	ТабЧастьНаша.Колонки.Добавить("ЕстьВФайлеКонтрагента", Новый ОписаниеТипов("Булево"));
	
	СтрОтклонения = Новый Массив;
	
	Для Каждого СтрокаСоответствия Из ТабЧастьКонтрагента Цикл
		
		СтрТабл = СтрокаСоответствия.Значение;
		НоваяСтрока = Новый Структура();
		
		Если СтрТабл.Свойство("Название") Тогда
			НоваяСтрока.Вставить("Название", СтрТабл.Название);
		КонецЕсли;
		
		Если СтрТабл.Свойство("Артикул") Тогда
			НоваяСтрока.Вставить("Артикул", СтрТабл.Артикул);
		КонецЕсли;
		
		Если СтрТабл.Свойство("ЕдИзм") Тогда
			НоваяСтрока.Вставить("ЕдИзм", СтрТабл.ЕдИзм);
		КонецЕсли;
		
		Если СтрТабл.Свойство("ОКЕИ") Тогда
			НоваяСтрока.Вставить("ОКЕИ", СтрТабл.ОКЕИ);
		КонецЕсли;
		
		Если СтрТабл.Свойство("Идентификатор") Тогда
			НоваяСтрока.Вставить("КодПоставщика", СтрТабл.Идентификатор);
		КонецЕсли;
		
		ПоДокументам = Новый Структура();
		
		Если СтрТабл.Свойство("Цена") Тогда
			ПоДокументам.Вставить("Цена", СтрТабл.Цена);
		Иначе
			ПоДокументам.Вставить("Цена", "0");
		КонецЕсли;
		
		Если СтрТабл.Свойство("Кол_во") Тогда
			ПоДокументам.Вставить("Кол_во", СтрТабл.Кол_во);
		Иначе
			ПоДокументам.Вставить("Кол_во", "0");
		КонецЕсли;
		
		Если СтрТабл.Свойство("СуммаБезНал") Тогда
			ПоДокументам.Вставить("СуммаБезНал", СтрТабл.СуммаБезНал);
		Иначе
			ПоДокументам.Вставить("СуммаБезНал", "0");
		КонецЕсли;
		
		Если СтрТабл.Свойство("Сумма") Тогда
			ПоДокументам.Вставить("Сумма", ЧисловойТип.ПривестиЗначение(СтрТабл.Сумма));
		КонецЕсли;
		
		Если СтрТабл.Свойство("НДС") Тогда
			ПоДокументам.Вставить("НДС", СтрТабл.НДС);
		КонецЕсли;
		
		ПоФакту = Новый Структура;
		Номенклатура = Неопределено;
		ОКЕИ = Неопределено;
		ХарактеристикаНоменклатуры = Неопределено;
		
		СтрТабл.Свойство("Номенклатура", Номенклатура);
		СтрТабл.Свойство("ОКЕИ", ОКЕИ);
		СтрТабл.Свойство("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
		
		Отбор = Новый Структура("Номенклатура, ОКЕИ", Номенклатура, ОКЕИ);
		
		Если ТабЧастьНаша.Колонки.Найти("ХарактеристикаНоменклатуры") <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
				Отбор.Вставить("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
			Иначе
				Отбор.Вставить("ХарактеристикаНоменклатуры", ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
			КонецЕсли;
			
		КонецЕсли;
		
		НайденныеСтроки = ТабЧастьНаша.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() Тогда
			
			НайденнаяСтрока = НайденныеСтроки[0];
			НайденнаяСтрока.ЕстьВФайлеКонтрагента = Истина;
			
			ПоФакту.Вставить("Цена", НайденнаяСтрока.Цена);
			ПоФакту.Вставить("Кол_во", НайденнаяСтрока.Кол_во);
			ПоФакту.Вставить("СуммаБезНал", НайденнаяСтрока.СуммаБезНал);
			ПоФакту.Вставить("Сумма", НайденнаяСтрока.Сумма);
			ПоФакту.Вставить("НДС", НайденнаяСтрока.НДС);
			
			Если ЧисловойТип.ПривестиЗначение(НайденнаяСтрока.Цена) <> ЧисловойТип.ПривестиЗначение(ПоДокументам.Цена)
				ИЛИ ЧисловойТип.ПривестиЗначение(НайденнаяСтрока.Кол_во) <> ЧисловойТип.ПривестиЗначение(ПоДокументам.Кол_во)
				ИЛИ ЧисловойТип.ПривестиЗначение(НайденнаяСтрока.СуммаБезНал) <> ЧисловойТип.ПривестиЗначение(ПоДокументам.СуммаБезНал)
				ИЛИ ЧисловойТип.ПривестиЗначение(НайденнаяСтрока.Сумма) <> ЧисловойТип.ПривестиЗначение(ПоДокументам.Сумма) Тогда
				
				ДопПараметры.ЕстьРасхождения = Истина;
				
			КонецЕсли;
			
			НоваяСтрока.Вставить("КодПокупателя", НайденнаяСтрока.Идентификатор); // alo Меркурий
			
		Иначе
			
			ДопПараметры.ЕстьРасхождения = Истина;
			
			ПоФакту.Вставить("Цена", "0");
			ПоФакту.Вставить("Кол_во", "0");
			ПоФакту.Вставить("СуммаБезНал", "0");
			ПоФакту.Вставить("Сумма", "0");
			
		КонецЕсли;
		
		НоваяСтрока.Вставить("Кол_во", Формат(Число(ПоФакту.Кол_во) - Число(ПоДокументам.Кол_во), "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		НоваяСтрока.Вставить("Сумма", Формат(Число(ПоФакту.Сумма) - Число(ПоДокументам.Сумма), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		
		Если СтрТабл.Свойство("Характеристика") Тогда
			НоваяСтрока.Вставить("СписокХарактеристика", Новый Структура("Характеристика", Новый Массив));
			НоваяСтрока.СписокХарактеристика.Характеристика.Добавить(СтрТабл.Характеристика);
		КонецЕсли;
		
		НоваяСтрока.Вставить("ПоДокументам", ПоДокументам);
		НоваяСтрока.Вставить("ПоФакту", ПоФакту);
		СтрОтклонения.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	// Если добавились строки, которых не было в файле контрагента
	НашиСтроки = ТабЧастьНаша.НайтиСтроки(Новый Структура("ЕстьВФайлеКонтрагента", Ложь));
	
	Для Каждого СтрТабл Из НашиСтроки Цикл
		
		ДопПараметры.ЕстьРасхождения = Истина;
		НоваяСтрока = Новый Структура();
		НоваяСтрока.Вставить("Название", СтрТабл.Название);
		//НоваяСтрока.Вставить("Код", СтрТабл.Код);
		Если СтрТабл.Свойство("Артикул") Тогда
			НоваяСтрока.Вставить("Артикул", СтрТабл.Артикул);
		КонецЕсли;
		НоваяСтрока.Вставить("ЕдИзм", СтрТабл.ЕдИзм);
		НоваяСтрока.Вставить("ОКЕИ", СтрТабл.ОКЕИ);
		НоваяСтрока.Вставить("КодПокупателя", СтрТабл.Идентификатор);
		
		ПоДокументам = Новый Структура();
		ПоДокументам.Вставить("Цена", "0");
		ПоДокументам.Вставить("Кол_во", "0");
		ПоДокументам.Вставить("СуммаБезНал", "0");
		ПоДокументам.Вставить("Сумма", "0");
		
		ПоФакту = Новый Структура;
		ПоФакту.Вставить("Цена", СтрТабл.Цена);
		ПоФакту.Вставить("Кол_во", СтрТабл.Кол_во);
		ПоФакту.Вставить("СуммаБезНал", СтрТабл.СуммаБезНал);
		ПоФакту.Вставить("Сумма", СтрТабл.Сумма);
		ПоФакту.Вставить("НДС", СтрТабл.НДС);
		
		НоваяСтрока.Вставить("Кол_во",	Формат(Число(ПоФакту.Кол_во) - Число(ПоДокументам.Кол_во), "ЧЦ=17; ЧДЦ=3; ЧРД=.; ЧГ=0; ЧН=0.000"));
		НоваяСтрока.Вставить("Сумма",	Формат(Число(ПоФакту.Сумма) - Число(ПоДокументам.Сумма), "ЧЦ=17; ЧДЦ=2; ЧРД=.; ЧГ=0; ЧН=0.00"));
		
		Если ТабЧастьНаша.Колонки.Найти("Характеристика")<>Неопределено Тогда
			НоваяСтрока.Вставить("СписокХарактеристика", Новый Структура("Характеристика",Новый Массив));
			НоваяСтрока.СписокХарактеристика.Характеристика.Добавить(СтрТабл.Характеристика);
		КонецЕсли;
		
		НоваяСтрока.Вставить("ПоДокументам", ПоДокументам);
		НоваяСтрока.Вставить("ПоФакту", ПоФакту);
		
		СтрОтклонения.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ДокументАкт303.СписокСтрОтклонения.Вставить("СтрОтклонения", СтрОтклонения);
	
	Возврат РезультатФормирования;

КонецФункции

&НаКлиенте
Процедура ПреобразоватьСтруктуруАдресаВМассив(СтруктураУчастника)
	
	Если СтруктураУчастника.Свойство("Адрес") Тогда
		
		АдресСтороны = Новый Структура;
		МассивАдресов = Новый Массив;
		
		ПереформироватьАдрес(СтруктураУчастника.Адрес, АдресСтороны);
		
		МассивАдресов.Добавить(АдресСтороны);
		СтруктураУчастника.Вставить("СписокАдрес", Новый Структура("Адрес", МассивАдресов));
		СтруктураУчастника.Удалить("Адрес");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьАдрес(Адрес, Адрес303)
	
	Если ТипЗнч(Адрес303) = Тип("Структура") Тогда 
		Адрес303 = Новый Структура;
	КонецЕсли;

	// Узлы адреса по формату 3.03
	ВозможныеУзлыАдреса = Новый Массив;
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Индекс");
	ВозможныеУзлыАдреса.Добавить("АдрРФ.КодРегион");
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Район");
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Город");
	ВозможныеУзлыАдреса.Добавить("АдрРФ.НаселПункт"); 
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Улица"); 
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Дом"); 
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Корпус"); 
	ВозможныеУзлыАдреса.Добавить("АдрРФ.Кварт"); 
	ВозможныеУзлыАдреса.Добавить("АдрИно.КодСтр"); 
	ВозможныеУзлыАдреса.Добавить("АдрИно.АдрТекст");
	
	Для каждого УзелАдреса Из ВозможныеУзлыАдреса Цикл
		
		ПараметрыПоиска = Новый Структура("Данные, Путь", Адрес, УзелАдреса);
		ЗначениеУзла = МодульОбъектаКлиент().ПолучитьДанныеПоПути(ПараметрыПоиска);
		
		Если НЕ ЗначениеЗаполнено(ЗначениеУзла) Тогда
			Продолжить;
		КонецЕсли; 
		
		ДеталиУзла = СтрЗаменить(УзелАдреса, ".", Символы.ПС);
		
		ТекущийУзел = Адрес303;
		
		Для УровньУзла = 1 По СтрЧислоСтрок(ДеталиУзла) Цикл
			
			ИмяТекущегоУзла = СтрПолучитьСтроку(ДеталиУзла, УровньУзла);
			
			Если НЕ ТекущийУзел.Свойство(ИмяТекущегоУзла) Тогда
				ТекущийУзел.Вставить(ИмяТекущегоУзла, Новый Структура);
			КонецЕсли;
			
			Если УровньУзла = СтрЧислоСтрок(ДеталиУзла) Тогда
				ТекущийУзел[ИмяТекущегоУзла] = ЗначениеУзла;
			КонецЕсли;
			
			ТекущийУзел = ТекущийУзел[ИмяТекущегоУзла];
		
		КонецЦикла;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	
	// преобразует массив структур в таблицу значений
	
	Результат = Новый ТаблицаЗначений;
	
	Если МассивСтруктур = Неопределено
		ИЛИ НЕ МассивСтруктур.Количество() Тогда
		Возврат Результат;
	Иначе
		
		Образец = МассивСтруктур[0];
		
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);
		
		Если Стр.Свойство("ОКЕИ") Тогда
			СтрТ.ОКЕИ = СокрЛП(Стр.ОКЕИ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции