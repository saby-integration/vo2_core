
//Возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С	
&НаКлиенте
Функция ПрочитатьСвойствоДокументаПоСсылке(Кэш, ДокументСсылка, ИмяСвойства, ДопПараметры) Экспорт
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Возврат ПрочитатьСвойствоДокументаПоСсылкеНаСервере(ДокументСсылка, ИмяСвойства, Новый Структура("БД", Кэш.ГлавноеОкно.СоединениеСтатусыДБФ));
	#Иначе
		Возврат ПрочитатьСвойствоДокументаПоСсылкеВызовСервера(ДокументСсылка, ИмяСвойства, ДопПараметры))
	#КонецЕсли
КонецФункции 

&НаСервере
Функция ПрочитатьСвойствоДокументаПоСсылкеВызовСервера(Знач ДокументСсылка, Знач ИмяСвойства, Знач ДопПараметры)
	Возврат ПрочитатьСвойствоДокументаПоСсылкеНаСервере(ДокументСсылка, ИмяСвойства, ДопПараметры);
КонецФункции

// возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С 	
&НаСервере
Функция ПрочитатьСвойствоДокументаПоСсылкеНаСервере(ДокументСсылка, ИмяСвойства, ДопПараметры) Экспорт
	Перем БД;
	ИмяПоля = ИмяПоляДБФПоИмениСвойства(ИмяСвойства);
	Если ИмяПоля = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	БД = ЛокальныйКэшСервер.ГлавноеОкно.СоединениеСтатусыДБФ;
	RecordSet = Новый ComОбъект("ADODB.Recordset");
    Recordset.CursorLocation = 3;
	ИдДок = ДокументСсылка.Метаданные().Имя+":"+строка(ДокументСсылка.УникальныйИдентификатор());
	Recordset.Open("Select * from State where State.IDDOC='"+ИдДок+"'",БД,2,3);
	Если Recordset.EOF = Ложь Тогда 
		Возврат RecordSet.Fields(ИмяПоля).value;
	КонецЕсли;	
	Возврат "";
КонецФункции

