
//Процедура генерирует и вызывает ExtSysException(СбисИсключение)
Процедура ВызватьСбисИсключениеСервер(БазоваяОшибка=Неопределено, СбисИмяКоманды,
								СбисКод=Неопределено, СбисСообщение=Неопределено, СбисДетализация=Неопределено, СбисДамп=Неопределено, СбисХелп=Неопределено) Экспорт
	ИсключениеВызов = НовыйСбисИсключениеСервер(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	ВызватьИсключение(СбисИсключение_Сериализовать(ИсключениеВызов));
КонецПроцедуры

//Конструктор ExtSysException
//БазоваяОшибка		- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//СбисИмяКоманды	- Имя команды в стек
//Работает если в БазовойОшибке что-то неопределено, иначе берутся значения по-умолчанию
//СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100
//СбисСообщение		- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду 
//СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду
//СбисДамп			- (необяз)дамп ошибки
//СбисХелп			- (необяз)ссылка на решение проблемы
Функция НовыйСбисИсключениеСервер(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
							СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено, 
							СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
	Перем СбисСтек,СбисОсновнаяОшибка,СтрокаРазбора;
	СбисИсключение = Новый Структура("code, message, details, methodName, dump, help, base", СбисКод, СбисСообщение, СбисДетализация, СбисИмяКоманды, СбисДамп, СбисХелп);
	
	Если		ТипЗнч(БазоваяОшибка) = Тип("ИнформацияОбОшибке") Тогда
		Попытка
			СбисОсновнаяОшибка = СбисИсключение_ДеСериализовать(БазоваяОшибка.Описание);
		Исключение
			СбисОсновнаяОшибка = СбисИсключение_ИнформацияОбОшибке(БазоваяОшибка);
		КонецПопытки;
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Строка") Тогда
		//Конструктор из строки
		СбисОсновнаяОшибка = Новый Структура("code,message,details,methodName,dump");
		Если Лев(СбисОсновнаяОшибка,1) = "{" Тогда
			СтрокаРазбора = БазоваяОшибка;
		ИначеЕсли	Лев(СбисОсновнаяОшибка,35) = "callBLObject(): Метод бизнес логики"
			И		Найти(СбисОсновнаяОшибка,"вернул ошибку") Тогда
			СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{"));
			СтрокаРазбора = Лев(СтрокаРазбора, СтрДлина(СтрокаРазбора)-1);
		ИначеЕсли Найти(БазоваяОшибка,"{""jsonrpc"":") Тогда
			СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{""jsonrpc"":"));
		Иначе
			СбисОсновнаяОшибка.code	= 100;
			СбисОсновнаяОшибка.message	= БазоваяОшибка;
			СбисОсновнаяОшибка.details	= БазоваяОшибка;
		КонецЕсли;	
		Если Не СтрокаРазбора = Неопределено Тогда
			Попытка
				СбисОсновнаяОшибка = СбисПрочитатьJSON(СтрокаРазбора);
				Если СбисОсновнаяОшибка.Свойство("Error") Тогда
					СбисОсновнаяОшибка = СбисОсновнаяОшибка.Error;
				КонецЕсли;
			Исключение
				СбисОсновнаяОшибка.code	= 100;
				СбисОсновнаяОшибка.message	= БазоваяОшибка;
				СбисОсновнаяОшибка.details	= БазоваяОшибка;
			КонецПопытки;
		КонецЕсли;
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Число") Тогда
		СбисОсновнаяОшибка = Новый Структура("code,message,details", БазоваяОшибка, СбисИсключение_СообщениеПоКоду(БазоваяОшибка), СбисИсключение_СообщениеПоКоду(БазоваяОшибка));
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Структура")
			И	БазоваяОшибка.Свойство("code") Тогда
		СбисОсновнаяОшибка = БазоваяОшибка;
	Иначе
		СбисОсновнаяОшибка = Новый Структура("code, dump", 100, Новый Структура("exception_value", БазоваяОшибка));
	КонецЕсли;
	
	//Если не указаны основные поля для новой ошибки
	Если СбисИсключение.code = Неопределено Тогда
		Если СбисОсновнаяОшибка = Неопределено Тогда
			СбисИсключение.code = 100;
		Иначе
			СбисИсключение.code = СбисОсновнаяОшибка.code;
		КонецЕсли;
	КонецЕсли;
	Если СбисИсключение.message = Неопределено Тогда
		Если		СбисОсновнаяОшибка = Неопределено
			Или	Не	СбисОсновнаяОшибка.Свойство("message", СбисИсключение.message) Тогда
			СбисИсключение.message = СбисИсключение_СообщениеПоКоду(СбисИсключение.code);
		КонецЕсли;
	КонецЕсли;
	Если СбисИсключение.details = Неопределено Тогда
		Если СбисОсновнаяОшибка = Неопределено Тогда
			СбисИсключение.details = СбисИсключение.message;
		ИначеЕсли Не СбисОсновнаяОшибка.Свойство("details", СбисИсключение.details) Тогда
			СбисИсключение.details = СбисОсновнаяОшибка.detail;
		КонецЕсли;
	КонецЕсли;
	Если СбисИсключение.help = Неопределено Тогда
		Если СбисОсновнаяОшибка <> Неопределено и СбисОсновнаяОшибка.Свойство("help") Тогда
			СбисИсключение.help = СбисОсновнаяОшибка.help;
		КонецЕсли;
	КонецЕсли;
	
	Если СбисОсновнаяОшибка = Неопределено Тогда
		Возврат СбисИсключение;
	ИначеЕсли Не СбисОсновнаяОшибка.Свойство("base", СбисИсключение.base) Тогда
		СбисИсключение.base = СбисОсновнаяОшибка;
	КонецЕсли;
	//Добавим основную ошибку в стек
	Если СбисОсновнаяОшибка.Свойство("stack", СбисСтек) Тогда
		СбисОсновнаяОшибка.Удалить("stack");
	Иначе
		СбисСтек = Новый Массив;
		СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
		ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисОсновнаяОшибка);
		Если		СбисОсновнаяОшибка.Свойство("method_Name") Тогда
			СбисЗаписьВСтек.methodName = СбисОсновнаяОшибка.method_Name;
		ИначеЕсли	СбисОсновнаяОшибка.Свойство("Action") Тогда
			СбисЗаписьВСтек.methodName = СбисОсновнаяОшибка.Action;
		КонецЕсли;
		СбисСтек.Добавить(СбисЗаписьВСтек);
	КонецЕсли;
	//Добавим обрабатываемую ошибку в стек
	СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
	ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисИсключение);
	СбисСтек.Вставить(0, СбисЗаписьВСтек);
	СбисИсключение.Вставить("stack", СбисСтек);
	Если СбисОсновнаяОшибка.Свойство("data") Тогда
		СбисИсключение.Вставить("data", СбисОсновнаяОшибка.data);
	КонецЕсли;
	//пробросим дамп в основную ошибку, чтоб не потерять
	Если СбисДамп = Неопределено Тогда
		Если СбисОсновнаяОшибка.Свойство("dump", СбисИсключение.dump) Тогда
			СбисОсновнаяОшибка.Удалить("dump");
		КонецЕсли;
	КонецЕсли;
	Возврат СбисИсключение;
	
КонецФункции

// Функция - генерирует ExtSysException из информации об ошибке
//
// Параметры:
//  ВыбранныйИнформацияОбОшибке	 - ИнформацияОбОшибке	 - вызванное исключение, которое не является запакованным ExtSysException
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_ИнформацияОбОшибке(БазоваяОшибка)
			
	СложнаяСтруктура		= Ложь;
	КодНовогоИсключения		= 500;
	
	СтруктураОшибкиСообщения = БазоваяОшибка;
	Пока ТипЗнч(СтруктураОшибкиСообщения.Причина) = Тип("ИнформацияОбОшибке") Цикл
		СтруктураОшибкиСообщения = СтруктураОшибкиСообщения.Причина;
		СложнаяСтруктура = Истина;
	КонецЦикла;
	
	Если СложнаяСтруктура Тогда
		СообщениеОбОшибке = БазоваяОшибка.Описание;
		ДетализацияОшибки = СтруктураОшибкиСообщения.Описание;
	ИначеЕсли БазоваяОшибка.Причина = Неопределено Тогда
		СообщениеОбОшибке = СбисИсключение_СообщениеПоКоду(КодНовогоИсключения);
		ДетализацияОшибки = БазоваяОшибка.Описание;
	Иначе
		СообщениеОбОшибке = БазоваяОшибка.Описание;
		ДетализацияОшибки = БазоваяОшибка.Причина;
	КонецЕсли;
	Если Найти(ДетализацияОшибки, "ODBC") Тогда
		Если Не Найти(ДетализацияОшибки, "dbf' уже существует") Тогда
			КодНовогоИсключения	= 776; 
			СообщениеОбОшибке = ДетализацияОшибки;
		КонецЕсли;
	ИначеЕсли ДетализацияОшибки = "Не подключен файл статусов DBF." Тогда
		КодНовогоИсключения	= 717;
		ДетализацияОшибки	= СообщениеОбОшибке + " " + ДетализацияОшибки;
		СообщениеОбОшибке	= СбисИсключение_СообщениеПоКоду(КодНовогоИсключения);
	КонецЕсли;
	
	СбисДамп = Новый Структура("ИсходнаяСтрока, НомерСтроки, ДетализацияОшибки", БазоваяОшибка.ИсходнаяСтрока, БазоваяОшибка.НомерСтроки, ДетализацияОшибки);
	СбисОсновнаяОшибка = Новый Структура("code, message, details", КодНовогоИсключения, СообщениеОбОшибке, ДетализацияОшибки);
	СбисОсновнаяОшибка.Вставить("methodName",	БазоваяОшибка.ИмяМодуля);
	СбисОсновнаяОшибка.Вставить("dump",			СбисДамп);
	СбисОсновнаяОшибка.Вставить("help",			СбисИсключение_РешениеПроблемыПоИсключению(СбисОсновнаяОшибка));
	
	//СбисОсновнаяОшибка = Новый Структура("code,details,methodName,dump,message,help", КодНовогоИсключения, ДетализацияОшибки, БазоваяОшибка.ИмяМодуля, СбисДамп, СообщениеОбОшибке, СбисХелп);
	Возврат СбисОсновнаяОшибка;
	
КонецФункции

// Функция - генерирует ExtSysException из информации об ошибке
//
// Параметры:
//  ВыбранныйИнформацияОбОшибке	 - ИнформацияОбОшибке	 - вызванное исключение, которое не является запакованным ExtSysException
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_РешениеПроблемыПоИсключению(СбисИсключение)
	
	Если СбисИсключение.code = 776 Тогда
		Если	Найти(СбисИсключение.methodName, "ДБФ")
			И	СбисИсключение.message = СбисИсключение.details Тогда 
			Возврат "https://sbis.ru/help/integration/catalog/driver_not_found";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция СбисИсключение_Сериализовать(СбисИсключение)
	Возврат СбисИсключение_СериализоватьСервер(СбисИсключение);
КонецФункции

Функция СбисИсключение_СериализоватьСервер(СбисИсключение)
	Возврат ЗначениеВСтрокуВнутр(СбисИсключение);
КонецФункции
	
Функция СбисИсключение_ДеСериализовать(СбисИсключение)
	Возврат СбисИсключение_ДеСериализоватьСервер(СбисИсключение);
КонецФункции	

Функция СбисИсключение_ДеСериализоватьСервер(СбисИсключение)
	Возврат ЗначениеИзСтрокиВнутр(СбисИсключение);
КонецФункции

Функция СбисИсключение_СообщениеПоКоду(СбисКодОшибки)
	Если		СбисКодОшибки = 100 Тогда
		Возврат "Неизвестная ошибка системы";
	ИначеЕсли	СбисКодОшибки = 300 Тогда
		Возврат "Неизвестная ошибка БЛ";
	ИначеЕсли	СбисКодОшибки = 301 Тогда
		Возврат "Сервис СБИС.Диск временно недоступен";
	ИначеЕсли	СбисКодОшибки = 400 Тогда
		Возврат "Неизвестная ошибка СБИС Плагина";
	ИначеЕсли	СбисКодОшибки = 409 Тогда
		Возврат "Сеанс с учетной системой завершен";
	ИначеЕсли	СбисКодОшибки = 500 Тогда
		Возврат "Неизвестная ошибка клиента";
	ИначеЕсли	СбисКодОшибки = 600 Тогда
		Возврат "Неизвестная ошибка настроек";
	ИначеЕсли	СбисКодОшибки = 700 Тогда
		Возврат "Неизвестная ошибка подключения";
	ИначеЕсли	СбисКодОшибки = 717 Тогда
		Возврат "Несовместимая версия файла базы данных";
	ИначеЕсли	СбисКодОшибки = 726 Тогда
		Возврат "Вложения не определены";
	ИначеЕсли	СбисКодОшибки = 735 Тогда
		Возврат "Данная операция недоступна";
	ИначеЕсли	СбисКодОшибки = 755 Тогда
		Возврат "Не найден сертификат ЭП";
	ИначеЕсли	СбисКодОшибки = 770 Тогда
		Возврат "Ошибка XSLT";
	ИначеЕсли	СбисКодОшибки = 772 Тогда
		Возврат "Ошибка работы с файловой системой";
	ИначеЕсли	СбисКодОшибки = 773 Тогда
		Возврат "Неизвестная ошибка при выполнении метода";	
	ИначеЕсли	СбисКодОшибки = 775 Тогда
		Возврат "Не получен ответ от плагина";	
	ИначеЕсли	СбисКодОшибки = 776 Тогда
		Возврат "Запуск программы/функции/метода не удался";	
	ИначеЕсли	СбисКодОшибки = 779 Тогда
		Возврат "Не найден объект";	
	ИначеЕсли 	СбисКодОшибки = 784 Тогда
		Возврат "Ошибка в настройках соединения";	
	КонецЕсли;
	Возврат "Неизвестная ошибка системы";
КонецФункции

