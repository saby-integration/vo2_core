
Функция НовыйРаботаСДБФ(ПараметрыDBFВходящие) Экспорт
	Перем РаботаСDBF;
	РаботаСDBF = Новый Структура;
	СтрокиПодключенияDBF = Новый Массив;
	СтрокиПодключенияDBF.Добавить("Driver={Microsoft dBASE Driver (*.dbf)};DriverID=533;Dbq={СБИСКаталогDBF};");
	СтрокиПодключенияDBF.Добавить("Provider=Microsoft.ACE.OLEDB.12.0;Extended Properties='dBASE IV';Data Source={СБИСКаталогDBF};");
	РаботаСDBF.Вставить("Подключения",	Новый Соответствие);
	РаботаСDBF.Вставить("Параметры",	Новый Структура);
	РаботаСDBF.Вставить("Строки",		Новый Соответствие);
	РаботаСDBF.Параметры.Вставить("Шаблоны", СтрокиПодключенияDBF);
	Если ПараметрыDBFВходящие.Свойство("СтрокаСтатусы") Тогда
		//Есть готовая строка для работы со статусами
		РаботаСDBF.Строки.Вставить("Статусы", ПараметрыDBFВходящие.СтрокаСтатусы);
	КонецЕсли;
	Если ПараметрыDBFВходящие.Свойство("СтрокаСопоставление") Тогда
		//Есть готовая строка для работы с сопоставлением
		РаботаСDBF.Строки.Вставить("Сопоставление", ПараметрыDBFВходящие.СтрокаСопоставление);
	КонецЕсли;
	Возврат РаботаСDBF;
КонецФункции

Функция РаботаСДБФ_СоздатьСоединениеСДБФ(РаботаСДБФ, ПараметрыСоединенияВходящие) Экспорт
	Перем КлючСоединения, КаталогСоединения;
	СоединениеDBF = Новый Структура(
	"ВызывалосьСоздание,	Подключено,	ТребуетсяПовторныйВызов,Проверен,	Путь,							,ШаблоныЗапросов, Ошибка, Файлы, Хранилище, ВремяПодключения, Тип", 
	Ложь,					Ложь,		Истина,					Ложь,		ПараметрыСоединенияВходящие.Путь,Новый Соответствие);
	СоединениеDBF.Файлы = Новый Соответствие;
	Если		ПараметрыСоединенияВходящие.Свойство("ИмяФайла") Тогда
		СоединениеDBF.Файлы.Вставить(ПараметрыСоединенияВходящие.ИмяФайла, Новый Структура("Проверен, Есть", Ложь));
	ИначеЕсли	ПараметрыСоединенияВходящие.Свойство("Файлы") Тогда
		Если ТипЗнч(ПараметрыСоединенияВходящие.Файлы) = Тип("Соответствие") Тогда
			Для Каждого КлючИЗначение Из ПараметрыСоединенияВходящие.Файлы Цикл
				ИмяБД = ВРег(СтрЗаменить(КлючИЗначение.Значение, ".dbf", ""));
				СоединениеDBF.Файлы.Вставить(КлючИЗначение.Ключ, Новый Структура("ИмяФайла, ИмяБД, Проверен, Есть", КлючИЗначение.Значение, ИмяБД, Ложь));
			КонецЦикла;
		Иначе
			Для Каждого ИмяФайла Из ПараметрыСоединенияВходящие.Файлы Цикл
				ИмяБД = ВРег(СтрЗаменить(ИмяФайла, ".dbf", ""));
				СоединениеDBF.Файлы.Вставить(ИмяФайла, Новый Структура("ИмяФайла, ИмяБД, Проверен, Есть", ИмяФайла, ИмяБД, Ложь));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если Не ПараметрыСоединенияВходящие.Свойство("Ключ", КлючСоединения) Тогда
		КлючСоединения = СоединениеDBF.Путь;
	КонецЕсли;
	РаботаСДБФ.Подключения.Вставить(КлючСоединения, СоединениеDBF);
	
	ПараметрыСоединенияВходящие.Свойство("Тип", СоединениеDBF.Тип);
	Возврат СоединениеDBF;
	
КонецФункции
		
Функция РаботаСДБФ_ПолучитьСоединениеСДБФ(РаботаСДБФ, КлючСоединения) Экспорт
	
	Возврат РаботаСДБФ.Подключения.Получить(КлючСоединения);
	
КонецФункции
	
// Функция - Получает com-соединение с ДБФ статусов, чтобы при последующих операциях со статусами сразу обращаться к соединению, а не получать заново
//
// Параметры:
//  ПараметрыСоединенияВходящие	 - Структура
//		Файл - Строка (обязательный).
//		Ключ - Строка (необязательный)	 - если не указан, то Файл
//		Тип - Строка (обязательный) - для получения специфичной строки соединения DBF - Статусы/Сопоставление
//  ДопПараметры	 - Структура	 - для расширения
// 
// Возвращаемое значение:
//   - COM объект, соединение с DBF
//
Функция РаботаСДБФ_ПолучитьСоединениеБД(РаботаСДБФ, СоединениеСДБФ) Экспорт
	Если РаботаСДБФ = Неопределено Тогда
		ВызватьСбисИсключениеСервер(, "РаботаСДБФ.Получить", 735,,"Не настроено соединение для работы с DBF");
	КонецЕсли;
	Если СоединениеСДБФ = Неопределено Тогда
		ВызватьСбисИсключениеСервер(, "РаботаСДБФ.Получить", 735,,"Не настроено подключение к DBF");
	КонецЕсли;
	Если		СоединениеСДБФ.Подключено Тогда
#Область include_local_Статусы_DBF_ПодключениеDBF_ХранилищеПолучение
#КонецОбласти
	ИначеЕсли		СоединениеСДБФ.ВызывалосьСоздание
			И	Не	СоединениеСДБФ.ТребуетсяПовторныйВызов Тогда
		//Уже вызывалось, но не подключено
		ВызватьСбисИсключениеСервер(, "РаботаСДБФ.Подключить", 735,,"Не подключен каталог DBF " + СоединениеСДБФ.Путь);
	КонецЕсли;
	Возврат РаботаСДБФ_ПодключитьСоединениеБД(РаботаСДБФ, СоединениеСДБФ);
КонецФункции
	
// Функция - Получает com-соединение с ДБФ статусов, чтобы при последующих операциях со статусами сразу обращаться к соединению, а не получать заново
//
// Параметры:
//  ПараметрыСоединенияВходящие	 - Структура
//		Файл - Строка (обязательный).
//		Ключ - Строка (необязательный)	 - если не указан, то Файл
//		Тип - Строка (обязательный) - для получения специфичной строки соединения DBF - Статусы/Сопоставление
//  ДопПараметры	 - Структура	 - для расширения
// 
// Возвращаемое значение:
//   - COM объект, соединение с DBF
//
Функция РаботаСДБФ_ПодключитьСоединениеБД(РаботаСДБФ, СоединениеСДБФ)
	Перем КлючDBF;
	//Создаём новое.
	СтрокиДляОбработки = Новый Массив;
	СтрокаСоединения = РаботаСДБФ.Строки.Получить(СоединениеСДБФ.Тип);
	Если Не СтрокаСоединения = Неопределено Тогда
		СтрокиДляОбработки.Добавить(СтрЗаменить(СтрокаСоединения, "{СБИСКаталогDBF}", СоединениеСДБФ.Путь));
	КонецЕсли;
	Для Каждого СтрокаСоединить Из РаботаСДБФ.Параметры.Шаблоны Цикл
		СтрокиДляОбработки.Добавить(СтрЗаменить(СтрокаСоединить, "{СБИСКаталогDBF}", СоединениеСДБФ.Путь));
	КонецЦикла;
	
	Файл = Новый Файл(СоединениеСДБФ.Путь);
	Если Не Файл.Существует() Тогда
		СоздатьКаталог(СоединениеСДБФ.Путь);
	КонецЕсли;
	
	СоединениеСДБФ.ВызывалосьСоздание = Истина;
	
	БД = Новый COMОбъект("ADODB.Connection");
	СоединениеСДБФ.ТребуетсяПовторныйВызов = Ложь;//После создания объекта, повторно уже не потребуется вызывать. Дальше уже если упадёт, то всё.
	
	ЕстьКонтактБД = Ложь;
	Для Каждого СтрокаОбработать Из СтрокиДляОбработки Цикл
		Попытка
			БД.Open(СтрокаОбработать);
			ЕстьКонтактБД = Истина;
			Прервать;
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	Если Не ЕстьКонтактБД Тогда
		ВызватьСбисИсключениеСервер(, "ADODB.Connection.Open", 776,,"Не удалось установить подключение к DBF в " + СоединениеСДБФ.Путь,, "https://sbis.ru/help/integration/catalog/driver_not_found");
	КонецЕсли;
	СоединениеСДБФ.Подключено = Истина;
#Область include_local_Статусы_DBF_ПодключениеDBF_ХранилищеЗапись
#КонецОбласти
	Возврат БД;
КонецФункции

Процедура  РаботаСДБФ_ЗавершитьСоединениеСДБФ(РаботаСДБФ, ПараметрыСоединения) Экспорт
	ПараметрыСоединения.Подключено = Ложь;
	ПараметрыСоединения.Удалить("Хранилище");
	ПараметрыСоединения.ВызывалосьСоздание = Ложь;
КонецПроцедуры

Функция ПолучитьЗначениеИзРекордСетDBF(RecordSet, Ключ, ЗначениеПоУмолчанию = "") Экспорт
	
	Попытка
		ЗначениеВРекорд = RecordSet.Fields(Ключ).value;
	Исключение
		ВызватьСбисИсключениеСервер(ИнформацияОбОшибке(), "СопоставлениеНоменклатуры_ДБФ.ПолучитьЗначениеИзРекордСет",,,"В рекордсет отсутствует поле " + Ключ);
	КонецПопытки;
	Если ЗначениеВРекорд = Null Тогда
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
	Возврат ЗначениеВРекорд;
	
КонецФункции

