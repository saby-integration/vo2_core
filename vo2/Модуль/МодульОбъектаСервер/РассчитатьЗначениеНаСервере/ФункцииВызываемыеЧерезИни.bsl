
//Проводит поиск значения по узлу описания и обновление из описанного узла. Если не найдено, досоздаёт.
//Контекст - контекст расчета
//УППоиск - Ключ узла с описанием поиска.
//УПТип - Параметр, определяет тип объекта.
//УПОписаниеОбъекта - Ключ узла с описанием структуры для обновления объекта.
//Дополнительные параметры определяются в переменных из контекста узлами:
//	СбисНайтиИОбновить_Сообщить - сообщает о результате обновления(создания) объекта. По-умолчанию - Ложь (не сообщать)
//	СбисНайтиИОбновить_Обновлять - определяет необходимость обновить найденный объект. По-умолчанию - Ложь (вернуть ссылку, не трогая).
//	СбисНайтиИОбновить_Досоздать - определяет необходимость создать новый объект, если не найден. По-умолчанию - Истина (вернуть ссылку нового объекта).
Функция СбисНайтиИОбновить(Контекст, УППоиск, УПТип = "", УПОписаниеОбъекта = Неопределено)
	Перем СообщитьСтатус, ОбновитьОбъект;
	РезультатПоиска = РассчитатьЗначениеСервер(УППоиск, Контекст);
	Если РезультатПоиска = Неопределено Тогда
		Если (	Контекст.Переменные.Свойство("СбисНайтиИОбновить_Досоздать", ОбновитьОбъект)
			И	ОбновитьОбъект = Ложь) Тогда
			Возврат РезультатПоиска;
		КонецЕсли;
	ИначеЕсли Не	(	Контекст.Переменные.Свойство("СбисНайтиИОбновить_Обновить", ОбновитьОбъект)
		И	ОбновитьОбъект = Истина) Тогда
		Возврат РезультатПоиска;
	КонецЕсли;
	
	УниверсальныйПоиск_Тип = СтрЗаменить(УПТип, ".", Символы.ПС);
	Отказ = Ложь;
	СтруктураДосоздать = РассчитатьЗначениеСервер(УПОписаниеОбъекта, Контекст);
	ПараметрыСоздания = Новый Структура("ТипОбъекта,ПодТипОбъекта,ОбъектПерезаполнитьСсылка", 
	СтрПолучитьСтроку(УниверсальныйПоиск_Тип, 1),
	СтрПолучитьСтроку(УниверсальныйПоиск_Тип, 2),
	РезультатПоиска);
	РезультатСоздания = СоздатьОбъект1СИзСтруктурыНаСервере(СтруктураДосоздать, ПараметрыСоздания, Отказ);
	Если	Контекст.Переменные.Свойство("СбисНайтиИОбновить_Сообщить", СообщитьСтатус)
		И	СообщитьСтатус = Истина Тогда
		Сообщить(РезультатСоздания.Сообщение);
	КонецЕсли;
	Возврат РезультатСоздания.Ссылка;
КонецФункции

// Функция - Сбис поиск свойств
//
// Параметры:
//  Контекст	 - Структура	- Контекст расчета ини
//  Заголовок	 - Строка	 	- Имя требуемого свойства
// 
// Возвращаемое значение:
//  Булево - Истина - свойство есть, Ложь - свойство отсутствует
//
Функция СбисПоискСвойств(Контекст, Заголовок)

	ШаблонЗапроса = 
	"ВЫБРАТЬ
	  |	РАЗЛИЧНЫЕ ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка
	  |ИЗ
	  |	ПланВидовХарактеристик.{ИмяПланаВидовХарактеристик} КАК ДополнительныеРеквизитыИСведения
	  |ГДЕ
	  |	ДополнительныеРеквизитыИСведения.{ПолеОтбора} = &Заголовок";
	
	ИмяРегистраСвойств = "СвойстваОбъектов";
	ИмяРеквизитаОтбора = "Наименование";
	
	// Объединить с поиском ПВХ для статусов в регистре
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
	ДопПараметры = Новый Структура("КлассМетаданных", "ПланыВидовХарактеристик");
		Если СбисСуществуетОбъектКонфигурацииСервер("ДополнительныеРеквизитыИСведения", ДопПараметры) Тогда
		
			ИмяРегистраСвойств = "ДополнительныеРеквизитыИСведения";
			ИмяРеквизитаОтбора = "Заголовок";
		
		КонецЕсли;	
	#КонецЕсли
	
	ШаблонЗапроса = СтрЗаменить(СтрЗаменить(ШаблонЗапроса,
								"{ИмяПланаВидовХарактеристик}",	ИмяРегистраСвойств),
								"{ПолеОтбора}",					ИмяРеквизитаОтбора);
		
		
	Запрос = Новый Запрос(ШаблонЗапроса);
	Запрос.УстановитьПараметр("Заголовок", Заголовок);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Следующий();
	
КонецФункции

Функция СбисПоискОснованияКорректировки(Контекст, ИдПакета, Вложения) 
	Если Не ТипЗнч(Вложения) = Тип("Массив") Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ВремТабл = Новый ТаблицаЗначений;
	Массив = Новый Массив;
	КС = Новый КвалификаторыСтроки(50);
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив,, КС);
	ВремТабл.Колонки.Добавить("Ид", ОписаниеТиповС);
	ВремТабл.Колонки.Добавить("ИдВложения", ОписаниеТиповС);
	ИдВложения = Неопределено;
	
	Для Каждого ЭлВлождение Из Вложения Цикл
		
		Если НРег(ЭлВлождение.Направление) = "исходящий"
			И НРег(ЭлВлождение.Тип) = "уведомлотгр" Тогда
			
			ИдВложения = ЭлВлождение.Идентификатор;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИдВложения = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;

	НовСтрВремТабл = ВремТабл.Добавить();
	НовСтрВремТабл.Ид = ИдПакета;
	НовСтрВремТабл.ИдВложения = ИдВложения;
	
	мСвойстваДокументСбисИд = Новый Массив; 
	мСвойстваДокументСбисИдВложения = Новый Массив;
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
		ИмяРегистраСвойствОбъектов = "ДополнительныеСведения"; 
		ИмяРеквизитаСвойства = "Заголовок";
		//мСвойстваДокументСбисИд.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Заголовок", "ДокументСБИС_Ид"));
		//мСвойстваДокументСбисИдВложения.Добавить(ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Заголовок", "ДокументСБИС_ИдВложения"));
	#Иначе
		ИмяРегистраСвойствОбъектов = "ЗначенияСвойствОбъектов"; 
		ИмяРеквизитаСвойства = "Наименование";
		//мСвойстваДокументСбисИд.Добавить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ДокументСБИС_Ид", Истина));
		//мСвойстваДокументСбисИдВложения.Добавить(ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ДокументСБИС_ИдВложения", Истина));
	#КонецЕсли
	
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ТЗ.Ид,
	|	ТЗ.ИдВложения
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Ид,
	|	ЗначенияСвойствОбъектов.Объект КАК Док1С
	|ПОМЕСТИТЬ ВТДокументыПакета
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	|		ПО ЗначенияСвойствОбъектов.Значение ПОДОБНО ВТ.Ид + ""%""
	|		И (ЗначенияСвойствОбъектов.Свойство." + ИмяРеквизитаСвойства + " ПОДОБНО ""%"" + &мСвойстваДокументСбисИд)
	|СГРУППИРОВАТЬ ПО Ид, Объект;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ИдВложения,
	|	ЗначенияСвойствОбъектов.Объект КАК Док1С
	|ПОМЕСТИТЬ ВТДокументыВложений
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.ИдВложения = ЗначенияСвойствОбъектов.Значение
	|		И (ЗначенияСвойствОбъектов.Свойство." + ИмяРеквизитаСвойства + " ПОДОБНО ""%"" + &мСвойстваДокументСбисИдВложения)
	|СГРУППИРОВАТЬ ПО ИдВложения, Объект;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыПакета.Ид,
	|	ЕСТЬNULL(ВТДокументыВложений.ИдВложения, """") КАК ИдВложения,
	|	ВТДокументыПакета.Док1С								
	|ИЗ
	|	ВТДокументыПакета КАК ВТДокументыПакета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыВложений 
	|		ПО ВТДокументыПакета.Док1С = ВТДокументыВложений.Док1С";
	
	запрос.УстановитьПараметр("ТЗ", ВремТабл);
	запрос.УстановитьПараметр("мСвойстваДокументСбисИд", "ДокументСБИС_Ид");
	запрос.УстановитьПараметр("мСвойстваДокументСбисИдВложения", "ДокументСБИС_ИдВложения");
	Выборка = Запрос.Выполнить().Выбрать();

	Возврат ?(Выборка.Следующий(), Выборка.Док1С, Неопределено);
КонецФункции

