
//	ПараметрыСозданияТекущие = Новый Структура;
//	ПараметрыСозданияТекущие.Вставить("ДополнятьТабЧасть", 					Ложь);
//	ПараметрыСозданияТекущие.Вставить("РедактироватьТабЧасть",				Ложь);
//	ПараметрыСозданияТекущие.Вставить("ПерезаполнятьТолькоНепроведенные",	Ложь);
//	ПараметрыСозданияТекущие.Вставить("ЗаполняемыеТабЧасти",				Новый Массив);
//	
//	ЗаполнитьЗначенияСвойств(ПараметрыСозданияТекущие, ДопПараметры);
//	
//	ЭтоНовый	= Не ЗначениеЗаполнено(ОбъектСсылка);
//	Результат	= Новый Структура("Тип, Ссылка, Состояние, Сообщение");
//	ТекстТип	= НРег(Лев(ОбъектТип, 1)) + Сред(ОбъектТип, 2);
//	
//	//Получаем объект для редактирования и записи
//	Если ЭтоНовый Тогда
//		
//		Попытка
//			
//			Объект1СЗначение = НовыйОбъект1С(ОбъектТип, ОбъектПодТип);
//			
//		Исключение
//			
//			Отказ = Истина;
//			
//		КонецПопытки;
//		
//		Результат.Тип = ОбъектТип + "." + ОбъектПодТип;
//		
//	Иначе
//		Попытка
//			Если ОбъектТип = "Документ" И ОбъектСсылка.Проведен И ПерезаполнятьТолькоНепроведенные Тогда
//				Результат.Состояние = "Ошибка перезаполнения документа.";	    
//				Результат.Сообщение = "Документ " + Строка(ОбъектСсылка) + " не перезаполнен, так как проведен. Включить возможность перезаполнения проведенных документов можно на вкладке ""Настройки"" в разделе ""Загрузка документов"".";
//				Возврат Результат;
//			КонецЕсли;
//			Результат.Тип	= ОбъектТип + "." + ОбъектСсылка.Метаданные().Имя;
//			Объект1СЗначение= ОбъектСсылка.ПолучитьОбъект();
//		Исключение
//			Результат.Тип = ОбъектТип + "." + ОбъектПодТип;
//			ТекстОшибки = ОписаниеОшибки();
//			Отказ = Истина;
//		КонецПопытки;
//	КонецЕсли;
//	Если Отказ Тогда
//		Результат.Состояние = "Ошибка формирования " + ТекстТип;
//		Если ЭтоНовый Тогда
//			Результат.Сообщение = "Не удалось создать " + ?(ОбъектТип = "Документ", "новый документ",  "новую запись " + ТекстТип) + ". " + ТекстОшибки;
//		Иначе
//			Результат.Сообщение = "Не удалось прочитать объект " + Строка(ОбъектСсылка) + ". " + ТекстОшибки;		
//		КонецЕсли;
//		Возврат Результат;
//	КонецЕсли;
//	
//	//Заполняем объект данными		
//	Для Каждого Элемент Из СтруктураДокОбъект Цикл
//		Попытка
//			Если ТипЗнч(Элемент.Значение) = Тип("Массив") Тогда
//				Если РедактироватьТабЧасть = Истина Тогда
//					КлючиПоиска = РассчитатьЗначениеСервер("КлючСтроки", Новый Структура("ини", ДополнительныеПараметры.Ини.мТаблДок[Элемент.Ключ]));		
//					Если ЗначениеЗаполнено(КлючиПоиска) Тогда
//						сбисДозаполнитьТабличнуюЧасть(Объект1СЗначение, Элемент, КлючиПоиска, ДополнительныеПараметры.Ини);	
//					КонецЕсли;
//				Иначе
//					Если Не ДополнятьТабЧасть ИЛИ ЗаполняемыеТабЧасти.Найти(Элемент.Ключ) = Неопределено Тогда
//						Объект1СЗначение[Элемент.Ключ].Очистить();
//					КонецЕсли;
//					Для Каждого Строка Из Элемент.Значение Цикл
//						НоваяСтрока = Объект1СЗначение[Элемент.Ключ].Добавить();
//						ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
//					КонецЦикла;
//				КонецЕсли;
//			Иначе
//				Объект1СЗначение[Элемент.Ключ] = Элемент.Значение;
//			КонецЕсли;
//		Исключение
//			Ошибка = ОписаниеОшибки();
//		Конецпопытки;
//	КонецЦикла;
//	
//	Попытка
//		// Выполняем обработчики по строкам табличных частей документа
//		Если ДополнительныеПараметры.Ини.Свойство("мТаблДок") Тогда
//			ТабличныеЧастиДокумента = Объект1СЗначение.Метаданные().ТабличныеЧасти;
//			Для каждого ТабЧасть Из ТабличныеЧастиДокумента Цикл
//				Если	ДополнительныеПараметры.Ини.мТаблДок.Свойство(ТабЧасть.Имя)
//						И ДополнительныеПараметры.Ини.мТаблДок[ТабЧасть.Имя].Свойство("мОбработчикПередЗаписьюНаСервере") Тогда
//					Для каждого СтрокаТЧ Из Объект1СЗначение[ТабЧасть.Имя] Цикл
//						ДополнительныеПараметрыОбработчика = Новый Структура;
//						ДополнительныеПараметрыОбработчика.Вставить("ПересчитыватьНДСПоДанным1С", ?(ДополнительныеПараметры.Ини.Свойство("ПересчитыватьНДСПоДанным1С"), ДополнительныеПараметры.Ини.ПересчитыватьНДСПоДанным1С.РассчитанноеЗначение, 2));	
//						ДополнительныеПараметрыОбработчика.Вставить("ПересчитыватьЦеныПоДанным1С", ?(ДополнительныеПараметры.Ини.Свойство("ПересчитыватьЦеныПоДанным1С"), ДополнительныеПараметры.Ини.ПересчитыватьЦеныПоДанным1С.РассчитанноеЗначение, 2));
//						сбисВыполнитьОбработчикиПоСтрокеТЧ(ДополнительныеПараметры.Ини.мТаблДок[ТабЧасть.Имя].мОбработчикПередЗаписьюНаСервере, Объект1СЗначение, ТабЧасть.Имя,	СтрокаТЧ, ДополнительныеПараметрыОбработчика);
//					КонецЦикла;
//				КонецЕсли;	
//			КонецЦикла;	
//		КонецЕсли;
//	Исключение
//		Ошибка = ОписаниеОшибки();
//	КонецПопытки;
//	
//	//Выполняем обработчики по документу
//	Попытка
//		Если ДополнительныеПараметры.Ини.Свойство("мОбработчикПередЗаписьюНаСервере") Тогда
//			ДополнительныеПараметрыОбработчика = Новый Структура;
//			ДополнительныеПараметрыОбработчика.Вставить("ПересчитыватьНДСПоДанным1С", ?(ДополнительныеПараметры.Ини.Свойство("ПересчитыватьНДСПоДанным1С"), ДополнительныеПараметры.Ини.ПересчитыватьНДСПоДанным1С.РассчитанноеЗначение, 2));
//			ДополнительныеПараметрыОбработчика.Вставить("ПересчитыватьЦеныПоДанным1С", ?(ДополнительныеПараметры.Ини.Свойство("ПересчитыватьЦеныПоДанным1С"), ДополнительныеПараметры.Ини.ПересчитыватьЦеныПоДанным1С.РассчитанноеЗначение, 2));
//			сбисВыполнитьОбработчикиПоДокументу(ДополнительныеПараметры.Ини.мОбработчикПередЗаписьюНаСервере, Объект1СЗначение, ДополнительныеПараметрыОбработчика);
//		КонецЕсли;							
//	Исключение
//		Ошибка = ОписаниеОшибки();
//	КонецПопытки;
//	//Записываем изменения
//	Попытка
//		Объект1СЗначение.Записать();
//		Если ОбъектТип <> "РегистрыСведений" Тогда
//			ОбъектСсылка = Объект1СЗначение.Ссылка;
//		Иначе
//			ОбъектСсылка = ОбъектПодТип+" ";
//			Для Каждого Измер Из Метаданные.РегистрыСведений[ОбъектПодТип].Измерения Цикл
//				Если ЗначениеЗаполнено(Объект1СЗначение[Измер.Имя]) Тогда
//					ОбъектСсылка = ОбъектСсылка+Измер.Имя + ": "  + Объект1СЗначение[Измер.Имя]+";";
//				КонецЕсли;
//			КонецЦикла
//		КонецЕсли;
//	Исключение
//		ТекстОшибки = ОписаниеОшибки();
//		Отказ = Истина;
//	КонецПопытки;
//	//Пробуем заполним документу дату и повторно записать при ошибке.
//	Если	Отказ
//		И	ОбъектТип = "Документ" Тогда
//		Отказ = Ложь;
//		Попытка
//			Объект1СЗначение.Дата = ТекущаяДата();
//			Объект1СЗначение.Записать();
//			ОбъектСсылка = Объект1СЗначение.Ссылка;
//		Исключение
//			ТекстОшибки = ОписаниеОшибки();
//			Отказ = Истина;
//		КонецПопытки;
//	КонецЕсли;
//	//Заполняем результат
//	Если Отказ Тогда
//		Результат.Состояние = "Ошибка формирования " + ТекстТип;
//		Результат.Сообщение = "Не удалось записать "  + ?(ОбъектТип = "Документ", "документ",  " элемент " + ТекстТип) + ". " +  ТекстОшибки;
//	Иначе
//		СостояниеОбъекта	= ?(ЭтоНовый, "Создан", "Перезаполнен"); 
//		Результат.Состояние = СостояниеОбъекта + ".";
//		Результат.Сообщение = СостояниеОбъекта + ?(ОбъектТип = "Документ", " документ",  " элемент " + ТекстТип) + " " + Строка(ОбъектСсылка);
//		Результат.Ссылка	= ОбъектСсылка;		
//	КонецЕсли;
//	Возврат Результат;
//КонецФункции

