
&НаКлиенте
Процедура ВыполнитьПроверкуРасхожденийПоСоответствию (ОписаниеПроверкиРасхождения, ДопПараметры) Экспорт
	Для каждого СтрокаСоответствия Из ОписаниеПроверкиРасхождения.Соответствие Цикл
		Попытка
			ВыполнитьПроверкуРасхожденийПоСтрокеСоответствия(СтрокаСоответствия, ДопПараметры);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			//добавить ошибку в РезультатДействия
		КонецПопытки;
	КонецЦикла;	
КонецПроцедуры	

//весь результат помещается в переданный объект ДопПараметры.РезультатДействия
&НаКлиенте
Процедура ВыполнитьПроверкуРасхожденийПоСтрокеСоответствия (ОписаниеПроверкиРасхождения, ДопПараметры) Экспорт
	Перем СтруктураДокументаПоДаннымСбис, СтруктураДокументаПоДанным1С, ИнформацияОДокументах, Ини;
	РезультатДействия = ДопПараметры.РезультатДействия;
	Кэш = ДопПараметры.Кэш;
	ДокументСсылка = ОписаниеПроверкиРасхождения.Ключ;
	Если Не ОписаниеПроверкиРасхождения.Значение.Свойство("СтруктураДокументаПоДаннымСбис", СтруктураДокументаПоДаннымСбис) Тогда
		//дополучить или ошибка
	КонецЕсли;
	Если Не ОписаниеПроверкиРасхождения.Значение.Свойство("СтруктураДокументаПоДанным1С", СтруктураДокументаПоДанным1С) Тогда
		//дополучить или ошибка
	КонецЕсли;
	Если Не ОписаниеПроверкиРасхождения.Значение.Свойство("ИнформацияОДокументах", ИнформацияОДокументах) Тогда
		//дополучить или ошибка
	КонецЕсли;
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("ПолучитьКартуСравнения", "Файл_" + ИнформацияОДокументах.Формат + "_" + СтрЗаменить(ИнформацияОДокументах.Версия, ".", "_"), "Файл_Шаблон", Кэш);
	Если фрм = Ложь Тогда
		Возврат;
	КонецЕсли;
	Карта = фрм.ПолучитьКартуСравнения();
	НовДопПараметры = Новый Структура("Карта", Карта);
	РасхожденияОбъектов = ПолучитьРасхождениеОбъектов(СтруктураДокументаПоДаннымСбис, СтруктураДокументаПоДанным1С, НовДопПараметры);
	
	Если Не ИнформацияОДокументах.Свойство("ИниСравненияДокументов", Ини) Тогда
		Возврат
	КонецЕсли;
	фрм = Кэш.ГлавноеОкно.сбисПолучитьФорму("Документ_Шаблон");
	КонтекстЗаполнения = Новый Структура("Ини, ДанныеИсточник", Ини, РасхожденияОбъектов);
	ОписаниеОбъекта = Новый Структура("Ключ, Значение, Ини", "СравнениеДокументов", Новый Структура, Ини);
	
	Обработчики = Новый Структура("мСравнениеДокументов, мТаблДокРасхождения",
		Новый Структура("Метод, Модуль", "Обработчик_мРасхожденияОбъектов", фрм),
		Новый Структура("Метод, Модуль", "Обработчик_мТаблДокДляРасхождений", фрм));
	
	ПараметрыЗаполнения	= Новый Структура("Кэш, Контекст, ДополнительныеПараметры, Обработчики", Кэш, КонтекстЗаполнения,, Обработчики);
	РезультатСравнения = фрм.СбисЗаполнитьСтруктуруОбъекта(ОписаниеОбъекта, ПараметрыЗаполнения);
	
	ПараметрыРезультата = Новый Структура("Выполнено, КлючГруппировки",
		Истина, ОписаниеПроверкиРасхождения.Ключ);
	Кэш.ОбщиеФункции.РезультатДействия_ДобавитьРезультат(Кэш, ДопПараметры.РезультатДействия, РезультатСравнения.Значение, ПараметрыРезультата);
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьСтруктуруДокументаСбисДляРасхождений(СтрокаСпискаДокументов, Кэш) Экспорт
	фрм = ГлавноеОкно.сбисНайтиФормуФункции("НайтиДокументы1СПоПакетуСБИС",Кэш.ФормаРаботыСоСтатусами,"",Кэш);
	МассивПакетов = Новый Массив;
	ПолныйСоставПакета = Новый Структура;
	
	Для каждого Строка из СтрокаСпискаДокументов.СоставПакета Цикл		
		Документ = Строка.Значение;
		ИдентификаторПакета = Строка.Значение.Идентификатор;
		//+tda//Если интеграция через каталог, передаём не идентификатор, а сам пакет
		Если Кэш.Парам.СпособОбмена = 1 Тогда
			ИдентификаторПакета = Строка.Значение;
		КонецЕсли;
		//-tda//
		ОшибкаЧтения = Ложь;
		ПолныйСоставПакета = Кэш.Интеграция.ПрочитатьДокумент(Кэш, ИдентификаторПакета,,ОшибкаЧтения);
		Если ОшибкаЧтения Тогда
			Продолжить;
		КонецЕсли;
		МассивСлужебных = Новый Массив;
		Если ПолныйСоставПакета.Свойство("Вложение") Тогда
			фрм.НайтиДокументы1СПоПакетуСБИС(ПолныйСоставПакета, Кэш.Ини, ГлавноеОкно.КаталогНастроек, МассивСлужебных);
			// Удалим служебные вложения
			счУдаленных = 0;
			Для Каждого Элемент Из МассивСлужебных Цикл
				ПолныйСоставПакета.Вложение.Удалить(Элемент-счУдаленных);
				счУдаленных = счУдаленных+1;
			КонецЦикла;
			МассивПакетов.Добавить(ПолныйСоставПакета);
		ИначеЕсли	ТипЗнч(СтрокаСпискаДокументов) = Тип("Структура") 
			И	СтрокаСпискаДокументов.Свойство("ВернутьПустойСоставПакета")
			И	СтрокаСпискаДокументов.ВернутьПустойСоставПакета Тогда
			МассивПакетов.Добавить(ПолныйСоставПакета);
		Иначе
			Сообщить("В пакете "+ПолныйСоставПакета.Название+" отсутствуют вложения.");
		КонецЕсли;
		Возврат МассивПакетов;
	КонецЦикла;	
	Возврат МассивПакетов;
	
КонецФункции

&НаКлиенте
Функция ПодготовитьСтруктуруДокумента1СДляРасхождений(СтрокаСпискаДокументов, Кэш) Экспорт
	МассивВложений = Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокумента1С(СтрокаСпискаДокументов, Кэш);
	Возврат МассивВложений;
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруДокумента1СПоПакетуСбис(ОписаниеПроверки, ДопПараметры) Экспорт
	Кэш = ДопПараметры.Кэш;
	Вложение = ОписаниеПроверки.Вложение;
	СоставПакета = ОписаниеПроверки.СоставПакета;
	ДанныеДокумента = Новый Структура();
	СоответствиеДокументДанные = Новый Соответствие;
	Для Каждого Документ1С Из Вложение.Документы1С Цикл

		Контекст = Новый Структура("МассивПакетов", Новый Массив);
		ВходящийКонтекстРасчета = Новый Структура;
		мФайлДляРасчета = Найти_мФайлПоВложению(Вложение, Документ1С, Кэш);
		Если мФайлДляРасчета = Неопределено Тогда
			Сообщить("Не найден файл");
			Продолжить;
		КонецЕсли;	
		ЗначениеИниДокумента = Новый Структура("мФайл", Новый Структура(мФайлДляРасчета.Ключ, мФайлДляРасчета.Значение));
		ЗначениеИниДокумента.Вставить("Формат2016",		Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
		ЗначениеИниДокумента.Вставить("Формат2019",		Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
		ЗначениеИниДокумента.Вставить("ФорматУКД2020",	Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
		ЗначениеИниДокумента.Вставить("ВходящийКонтекст", Новый Структура("Значение,РассчитанноеЗначение", "", ВходящийКонтекстРасчета));
		ЗначениеИниДокумента.Вставить("ИспользоватьШтрихкодыНоменклатурыКонтрагентов",	Новый Структура("Значение,РассчитанноеЗначение", Кэш.Парам.ИспользоватьШтрихкодыНоменклатурыКонтрагентов, Кэш.Парам.ИспользоватьШтрихкодыНоменклатурыКонтрагентов));
		
		ИниДокумента = СтрПолучитьСтроку(СтрЗаменить(Кэш.ОбщиеФункции.ПолучитьИмяИСПоСсылке(Документ1С.Значение), ".", Символы.ПС), 2);
		СоответствиеДокументДанные.Вставить(Документ1С.Значение, Новый Структура("ИмяИни, ДокументДанные",ИниДокумента,ЗначениеИниДокумента)); 	
		
	КонецЦикла; 
	Если Не СоответствиеДокументДанные.Количество() = 0 Тогда 
		Кэш.ОбщиеФункции.ПолучитьДанныеДокументов1С(СоответствиеДокументДанные, Кэш.КэшЗначенийИни, Вложение.Документы1С, Кэш.Парам);
		Если Не Кэш.ОбщиеФункции.ОбработатьДанныеДокументов1С(Кэш, Контекст, Вложение.Документы1С, СоответствиеДокументДанные) Тогда
			Сообщить("Документ не обработан.");
			Возврат Неопределено;
		Иначе
			Попытка  
				Возврат Контекст.МассивПакетов[0].Вложение[0].СтруктураДокумента.Файл.Документ;
			Исключение
				Возврат Неопределено;
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
	Возврат Неопределено;	 
КонецФункции

&НаКлиенте
Функция Найти_мФайлПоВложению(Вложение, Документ1С, Кэш)
	//Перем Результат;
	ИниДокумента = СтрПолучитьСтроку(СтрЗаменить(Кэш.ОбщиеФункции.ПолучитьИмяИСПоСсылке(Документ1С.Значение), ".", Символы.ПС), 2);
	//ЗначениеИниДокумента = Кэш.ФормаНастроек.Ини(Кэш, ИниДокумента);
	Отказ = Ложь;
	СбисСтруктураРазделов = Кэш.ФормаНастроек.ПолучитьСтруктуруРазделов(ГлавноеОкно.Кэш,,Отказ);
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для Каждого сбисРаздел Из сбисСтруктураРазделов Цикл
		Если сбисРаздел.Ключ = "БезРаздела" Тогда 
			Продолжить;
		КонецЕсли;
		Для Каждого сбисПодРаздел Из сбисРаздел.Значение.Список Цикл
			Если Не	(	ЗначениеЗаполнено(сбисПодРаздел.Значение.Реестр1С_Тип)
					//И	сбисПодРаздел.Значение.ЕстьЗапросРеестра
					И	сбисПодРаздел.Значение.Реестр1С_Тип = ИниДокумента) Тогда
				Продолжить;
			КонецЕсли;
			ЗначениеИниДокумента = Кэш.ФормаНастроек.Ини(Кэш, сбисПодРаздел.Ключ);
			Если Не ТипЗнч(ЗначениеИниДокумента) = Тип("Структура") 
					Или Не ЗначениеИниДокумента.Свойство("мФайл") Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого КлючИЗначение Из ЗначениеИниДокумента.мФайл Цикл   
				ТипИзИни = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_Тип", КлючИЗначение.Значение);
				ПодтипИзИни = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодТип", КлючИЗначение.Значение);
				ВерсияФорматаИзИни = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ВерсияФормата", КлючИЗначение.Значение);
				ПодверсияФорматаИзИни = Кэш.ОбщиеФункции.РассчитатьЗначение("Вложение_ПодВерсияФормата", КлючИЗначение.Значение);	
				
				Если Вложение.Тип = ТипИзИни
					И Найти(ПодтипИзИни, Вложение.Подтип)
					И Вложение.ВерсияФормата = ВерсияФорматаИзИни
					И Строка(Вложение.ПодверсияФормата) = Строка(ПодверсияФорматаИзИни) Тогда 
					Результат = Новый Структура("Ключ, Значение", КлючИЗначение.Ключ, КлючИЗначение.Значение);   
					Возврат Результат;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция НайтиВложениеСбисПоВложению1С(ОписаниеПакета, ДопПараметры) Экспорт
	СоставПакетаСбис = ОписаниеПакета.СоставПакетаСбис;
	Вложение1С = ОписаниеПакета.Вложение1С;
	Для Каждого ВложениеСбис Из СоставПакетаСбис.Вложение Цикл
		Если (Не ВложениеСбис.Свойство("Служебный") или ВложениеСбис.Служебный = "Нет")
			И Вложение1С.Тип = ВложениеСбис.Тип
			И Вложение1С.ПодТип = ВложениеСбис.ПодТип
			И Вложение1С.ВерсияФормата = ВложениеСбис.ВерсияФормата
			И Строка(Вложение1С.ПодВерсияФормата) = ВложениеСбис.ПодВерсияФормата Тогда
			Возврат ВложениеСбис;
		КонецЕсли;	
	КонецЦикла;		
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция НайтиИниПроверкиРасхождения(Кэш, ИнформацияОДокументе) Экспорт
	Перем НастройкаПроверкаРасхождения, ТипДокумента, ВерсияДокумента;
	
	Если Не (ЗначениеЗаполнено(ИнформацияОДокументе)
		И ТипЗнч(ИнформацияОДокументе) = Тип("Структура")) Тогда
		
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИнформацияОДокументе.Свойство("НастройкаПроверкаРасхождения", НастройкаПроверкаРасхождения)
		И ЗначениеЗаполнено(НастройкаПроверкаРасхождения) Тогда
		
		Возврат Кэш.ФормаНастроек.Ини(Кэш, НастройкаПроверкаРасхождения);
	КонецЕсли;
	
	Если ИнформацияОДокументе.Свойство("ТипДокумента", ТипДокумента)
		И ИнформацияОДокументе.Свойство("ВерсияДокумента", ВерсияДокумента)
		И ЗначениеЗаполнено(ТипДокумента)
		И ЗначениеЗаполнено(ВерсияДокумента) Тогда
		
		Ини = Кэш.ФормаНастроек.Ини(Кэш, "ПроверкаРасхождения_"
			+ Кэш.ОбщиеФункции.СбисЗаменитьНедопустимыеСимволы(ТипДокумента) + "_"
			+ Кэш.ОбщиеФункции.СбисЗаменитьНедопустимыеСимволы(ВерсияДокумента));
		Результат = Новый Структура("мСравнениеДокументов");
		Если Не Ини = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Результат, Ини);
		КонецЕсли;
		Возврат Результат;
	КонецЕсли;
	
	Возврат Неопределено;	
КонецФункции

#Область include_core_vo2_Модуль_МодульОбъектаКлиент_Расхождения_СравнениеОбъектов
#КонецОбласти

