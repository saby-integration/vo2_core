
// Процедура - запускает редактор файлов настроек
//
// Параметры:
//  ПараметрыЗапускаВходящие - 	 - 
//
&НаКлиенте
Процедура ЗапуститьРедакторИни(ПараметрыЗапускаВходящие=Неопределено) Экспорт
	
	фрм = ГлавноеОкно.СбисПолучитьФорму("ФайлыНастроекОбщее");
	Если фрм = Ложь Тогда
		СбисИсключение = НовыйСбисИсключение(, "ФормаГлавноеОкно.ЗапуститьРедакторИни",,,"Не удалось получить форму редактора файлов настроек");
		СообщитьСбисИсключение(СбисИсключение);
		Возврат;
	КонецЕсли;
    фрм.ЗакрыватьПриЗакрытииВладельца = Истина;
	фрм.Показать(ПараметрыЗапускаВходящие);

КонецПроцедуры

// Процедура - сообщить пользователю
//
// Параметры:
//  ПараметрыСообщения	 - 	Структура - Текст, СтатусСообщения, ЭлементНазначения, ФормаВладелец
//  ДопПараметры		 - 	 - 
//
&НаКлиенте
Процедура СбисСообщить(ПараметрыСообщения, ДопПараметры=Неопределено) Экспорт
	Перем СбисСтатусСообщения;
	
	Если ГлобальныйКэш.ТихийРежим Тогда
		Возврат;
	КонецЕсли;
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если Не ПараметрыСообщения.Свойство("СтатусСообщения", СбисСтатусСообщения) Тогда
			СбисСтатусСообщения = СтатусСообщения.Обычное
		КонецЕсли;
		Сообщить(ПараметрыСообщения.Текст, СбисСтатусСообщения);
	#Иначе
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ПараметрыСообщения.Текст;
		Если ПараметрыСообщения.Свойство("ЭлементНазначения") Тогда
			Сообщение.Поле = ПараметрыСообщения.ЭлементНазначения;
		КонецЕсли;
		Если		ПараметрыСообщения.Свойство("ФормаВладелец")
			И Не	ПараметрыСообщения.ФормаВладелец = Неопределено  Тогда
			Сообщение.ИдентификаторНазначения = ПараметрыСообщения.ФормаВладелец.УникальныйИдентификатор;
		КонецЕсли;
		Сообщение.Сообщить(); 
	#КонецЕсли	
КонецПроцедуры

// Процедура - Сбис показать вопрос. Идентично ПоказатьВопрос, с учетом модальности ОФ.
//
// Параметры:
//  СбисОписаниеОповещенияОЗавершении	 - СбисОписаниеОповещения	 - обработчик диалога
//  ТекстВопроса						 - Строка					 - 
//  Кнопки								 - Список					 - 
//  Таймаут								 - Таймаут					 - 
//  КнопкаПоУмочанию					 - Кнопка/элемент списка	 - 
//  Заголовок							 - Строка					 - 
//  КнопкаТаймаута						 - Кнопка/элемент списка	 - 
//
&НаКлиенте
Процедура СбисПоказатьВопрос(СбисОписаниеОповещенияОЗавершении, ТекстВопроса, Кнопки, Таймаут=0, КнопкаПоУмочанию = Неопределено, Заголовок="", КнопкаТаймаута=Неопределено) Экспорт
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВыполнитьСбисОписаниеОповещения(Вопрос(ТекстВопроса, Кнопки, Таймаут, КнопкаПоУмочанию, Заголовок, КнопкаТаймаута), СбисОписаниеОповещенияОЗавершении);
	#Иначе
		ПоказатьВопрос(СбисОписаниеОповещенияОЗавершении, ТекстВопроса, Кнопки, Таймаут, КнопкаПоУмочанию, Заголовок, КнопкаТаймаута);
	#КонецЕсли
КонецПроцедуры

// Процедура - завершает работу обработки
//
&НаКлиенте
Процедура СбисЗавершитьРаботу() Экспорт
	
	Оповестить("ЗакрытьСБИС");

	Попытка
		
		ГлавноеОкно.СбисСохранитьЗначения(Новый Структура("ВыполнитьВручную,Парам", Ложь, ГлобальныйКэш.Парам));
		Если ГлобальныйКэш.СБИС.Авторизован Тогда
			СохранитьМеткиСтатусов(ГлавноеОкно.Кэш);
		КонецЕсли;
		
		Если ГлобальныйКэш.ТекущийСеанс.Свойство("ВременныеФайлы") Тогда 
			ГлобальныйКэш.ТекущийСеанс.ВременныеФайлы.Параметры.ВремяЖизни = 0;
			ГлавноеОкно.Кэш.ОбщиеФункции.СбисОчиститьВременныеФайлы();
			ГлавноеОкно.ОтключитьОбработчикОжидания("СбисОчиститьВременныеФайлы");
		КонецЕсли;
		
		ГлавноеОкно.ОтключитьОбработчикОжидания("ВыполнениеОтложенныхПроцедур");
		ГлавноеОкно.Кэш.Интеграция.Завершить(ГлавноеОкно.Кэш, Новый Структура, Ложь);
		
	Исключение
		
		ИнфоОбОшибке = ИнформацияОбОшибке();
		СбисИсключение = НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисЗавершитьРаботу");  
		СообщитьСбисИсключение(СбисИсключение, Новый Структура("СтатусСообщения", "platform_warning"));
				
	КонецПопытки;
	
	
	ГлавноеОкно.ЗавершитьРаботу = Истина; 
	ГлавноеОкно.Закрыть();
	
КонецПроцедуры

//Процедура показывает пользователю выбор из сформированного списка значений
&НаКлиенте
Процедура СбисВыбратьИзСписка(СписокВыбора, ДопПараметры) Экспорт
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		ВыполнитьСбисОписаниеОповещения(СписокВыбора.ВыбратьЭлемент(ДопПараметры.Заголовок, ДопПараметры.Элемент), ДопПараметры.Обработчик);
	#Иначе
		СписокВыбора.ПоказатьВыборЭлемента(ДопПараметры.Обработчик, ДопПараметры.Заголовок, ДопПараметры.Элемент);
	#КонецЕсли	
	
КонецПроцедуры

// Возвращает запрашиваемую форму при успехе, вызывает СбисИсключение при неудаче, Ложь, если формы нет.
//
// Параметры:
//  ИмяФормы	 - 	 - 
//  ДопПараметры - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ПолучитьФормуОбработки(ИмяФормы, ДопПараметры=Неопределено) Экспорт 
	Перем СбисОбъект1С, СбисПараметрыФормы, СбисВладелецФормы, СбисОписаниеОшибки, ПолноеИмяФормы, КэшироватьПолученную, ПолучитьНовую, Результат;

	Если Не ДопПараметры = Неопределено Тогда
		ДопПараметры.Свойство("КэшироватьФорму",	КэшироватьПолученную);
		ДопПараметры.Свойство("ПолучитьНовую",		ПолучитьНовую);
		ДопПараметры.Свойство("Владелец",			СбисВладелецФормы);
		ДопПараметры.Свойство("ОбработкаОбъект",	СбисОбъект1С);
		ДопПараметры.Свойство("Параметры",			СбисПараметрыФормы);
	КонецЕсли;

	Если КэшироватьПолученную = Неопределено Тогда
		КэшироватьПолученную = Истина;
	КонецЕсли;
	Если ПолучитьНовую = Неопределено Тогда
		ПолучитьНовую = Ложь;
	КонецЕсли;
	Если	СбисВладелецФормы = Неопределено
		И	ИмяФормы <> "ФормаГлавноеОкно" Тогда
		СбисВладелецФормы = ГлавноеОкно;
	КонецЕсли;

	Стандартная			= СбисОбъект1С = Неопределено;
	ПолноеИмяФормы		= ПолучитьФормуОбработки_ПолноеИмяФормы(ИмяФормы, СбисОбъект1С);
	БезопасноеИмяФормы	= ПолучитьФормуОбработки_БезопасноеИмяФормы(ПолноеИмяФормы, СбисОбъект1С);

	Если		ПолучитьНовую
		Или	Не	ГлобальныйКэш.ТекущийСеанс.Формы.Получены.Свойство(БезопасноеИмяФормы, Результат) Тогда
		
		Если		Стандартная И ГлобальныйКэш.ТекущийСеанс.Формы.Стандартные.НайтиПоЗначению(ИмяФормы)	<> Неопределено
			Или	Не	Стандартная И ГлобальныйКэш.ТекущийСеанс.Формы.Клиентские.НайтиПоЗначению(ИмяФормы)		<> Неопределено Тогда
			//Не должно быть исключения при получении формы, это считаем ошибкой. Отсеиваем несуществующие формы по списку форм.
			#Если ТолстыйКлиентОбычноеПриложение Тогда
				Если Стандартная Тогда
					СбисОбъект1С = ЭтотОбъект;
				КонецЕсли;
				Попытка
					Результат = СбисОбъект1С.ПолучитьФорму(ИмяФормы, СбисВладелецФормы);
				Исключение
					ИнфоОбОшибке = ИнформацияОбОшибке();
					ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисПолучитьФормуОбработки",773);
				КонецПопытки;
				Если Не СбисПараметрыФормы = Неопределено Тогда 
					Попытка
						Результат.Параметры = СбисПараметрыФормы;
					Исключение
						//Нет реквизита под параметры формы.
					КонецПопытки;
				КонецЕсли;
			#Иначе
				Попытка
					Результат = ПолучитьФорму(ПолноеИмяФормы, СбисПараметрыФормы, СбисВладелецФормы);
					Если Результат = Неопределено Тогда
						ВызватьСбисИсключение(773, "МодульОбъектаКлиент.СбисПолучитьФормуОбработки",,,"Неизвестная ошибка события формы " + ПолноеИмяФормы + " ПриСозданииНаСервере.");
					КонецЕсли;
				Исключение
					ИнфоОбОшибке = ИнформацияОбОшибке();
					ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисПолучитьФормуОбработки",773);
				КонецПопытки;
			#КонецЕсли
		Иначе
			//Нет такой формы
			Результат = Ложь;
		КонецЕсли;
	ИначеЕсли Не Результат = Ложь Тогда
		Результат.ВладелецФормы = СбисВладелецФормы;
	КонецЕсли;
	Если КэшироватьПолученную Тогда
		ПолучитьФормуОбработки_ЗакэшироватьФорму(Результат, БезопасноеИмяФормы);
	КонецЕсли;
	Возврат Результат;
КонецФункции

//Возвращает запрашиваемую форму при успехе, структуру ошибки при неудаче Ложь, если форма нет найдено.
&НаКлиенте
Функция ПолучитьФормуОбработки_ПолноеИмяФормы(ИмяФормы, СбисОбъект1С=Неопределено) Экспорт 

	ПолноеИмяФормы	= ИмяФормы;		
	Если СбисОбъект1С = Неопределено Тогда
		#Если Не ТолстыйКлиентОбычноеПриложение Тогда
			ПолноеИмяФормы	= ГлобальныйКэш.ПараметрыСистемы.Обработка.ПолноеИмя
							+ ГлобальныйКэш.ПараметрыСистемы.Обработка.КлючФорм
							+ ПолноеИмяФормы;
		#КонецЕсли
	Иначе
		#Если Не ТолстыйКлиентОбычноеПриложение Тогда
			ПолноеИмяФормы	= СбисОбъект1С + ПолноеИмяФормы;
		#КонецЕсли
	КонецЕсли;
	Возврат ПолноеИмяФормы;
	
КонецФункции

//Возвращает запрашиваемую форму при успехе, структуру ошибки при неудаче Ложь, если форма нет найдено.
&НаКлиенте
Функция ПолучитьФормуОбработки_БезопасноеИмяФормы(ПолноеИмяФормы, СбисОбъект1С) Экспорт 

	Если СбисОбъект1С = Неопределено Тогда
		БезопасноеИмяФормы	= "ВО_"	+ СтрЗаменить(ПолноеИмяФормы, ".", "_");
	Иначе
		БезопасноеИмяФормы	= "ВФК_"+ СтрЗаменить(ПолноеИмяФормы, ".", "_");
	КонецЕсли;
	Возврат БезопасноеИмяФормы;
	
КонецФункции

//Возвращает запрашиваемую форму при успехе, структуру ошибки при неудаче Ложь, если форма нет найдено.
&НаКлиенте
Функция ПолучитьФормуОбработки_ЗакэшироватьФорму(ЗначениеФормы, КлючФормы) Экспорт

	ГлобальныйКэш.ТекущийСеанс.Формы.Получены.Вставить(КлючФормы, ЗначениеФормы);
	
КонецФункции

// Функция - Возвращает дату в миллисекундах
// 
// Возвращаемое значение:
//  Число - миллисекунды
//
&НаКлиенте
Функция ПолучитьДатуВМиллисекундах() Экспорт 
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		//Используется только на обычных формах. Для поддержки 8.2 ниже 17 версии
		Возврат (ТекущаяДата() - '0001.01.01') * 1000 - 10800000;
	#Иначе
		Возврат ТекущаяУниверсальнаяДатаВМиллисекундах();
	#КонецЕсли

КонецФункции

//Процедура записывает значение параметра по имени в кэш ГО и Глобальный кэш
&НаКлиенте
Процедура ИзменитьПараметрСбис(ИмяПараметраСбис, ЗначениеПараметраСбис) Экспорт
	
	Если		ГлобальныйКэш.Парам.Свойство(ИмяПараметраСбис) Тогда
		ГлавноеОкно.Кэш.Парам[ИмяПараметраСбис] = ЗначениеПараметраСбис;
		ГлобальныйКэш.Парам[ИмяПараметраСбис]	= ЗначениеПараметраСбис;
	ИначеЕсли   ГлобальныйКэш.СБИС.Свойство(ИмяПараметраСбис) Тогда
		ГлавноеОкно.Кэш.СБИС[ИмяПараметраСбис]	= ЗначениеПараметраСбис;
		ГлобальныйКэш.СБИС[ИмяПараметраСбис]	= ЗначениеПараметраСбис;
	Иначе
		ВызватьСбисИсключение(, "МодульОбъектаКлиент.ИзменитьПараметрСбис", 600,, "Неизвестный параметр СБИС", Новый Структура("Имя", ИмяПараметраСбис));
	КонецЕсли;
	
КонецПроцедуры

//Функция - возвращает элемент формы по родителю и пути
&НаКлиенте
Функция ЭлементФормыСбис(ОтЭлемента, ПутьКЭлементу) Экспорт
	ИмяЭлементаРазбивка = СтрЗаменить(ПутьКЭлементу, ".", Символы.ПС);
	Результат = ОтЭлемента;
	Для СчетчикРазбивки = 1 По СтрЧислоСтрок(ИмяЭлементаРазбивка) Цикл
		Если Результат = Неопределено Тогда
			Прервать;
		КонецЕсли;
		КлючПути = СтрПолучитьСтроку(ИмяЭлементаРазбивка, СчетчикРазбивки);
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Если	ТипЗнч(Результат) = Тип("Форма")
				Или	ТипЗнч(Результат) = Тип("СтраницаПанели") Тогда
				Результат = Результат.ЭлементыФормы;
			ИначеЕсли	ТипЗнч(Результат) = Тип("ТаблицаЗначений")
				Или	ТипЗнч(Результат) = Тип("ТабличноеПоле") Тогда
				Результат = Результат["Колонки"];
			ИначеЕсли	ТипЗнч(Результат) = Тип("Панель") Тогда
				Результат = Результат["Страницы"];
			ИначеЕсли	ТипЗнч(Результат) = Тип("КоманднаяПанель")
					Или	ТипЗнч(Результат) = Тип("Кнопка") Тогда 
				Результат = Результат.Кнопки;
			КонецЕсли;
		#Иначе
			Если ТипЗнч(Результат) = Тип("УправляемаяФорма") Тогда
				Результат = Результат.Элементы;
			Иначе
				Результат = Результат["ПодчиненныеЭлементы"];
			КонецЕсли;
		#КонецЕсли
		Если КлючПути = "Страницы" Тогда
			Продолжить;
		КонецЕсли;
		Результат = Результат.Найти(КлючПути);
	КонецЦикла;	
	Возврат Результат;
КонецФункции


#Область include_core_vo2_Модуль_МодульОбъектаКлиент_ОбщиеФункцииИПроцедуры_Интерфейс
#КонецОбласти

