
//Функция заполняет структуру с данными о текущем разделе
&НаКлиенте
Функция НовыйСтруктураРазделаГО(ИмяКнопкиРаздела = Неопределено, ДопПараметры = Неопределено) Экспорт

	Если		ИмяКнопкиРаздела = Неопределено
		И	Не	ДопПараметры = Неопределено
		И		ДопПараметры.Свойство("ИмяИни") Тогда
		//Если кнопка не передана, то может быть передана имя ини файла раздела. Попробуем найти по реестрам.
		ИмяРеестра = ДопПараметры.ИмяИни;
		Для Каждого КлючИЗначение Из ГлавноеОкно.Кэш.Разделы Цикл
			Если	Не	(	КлючИЗначение.Ключ = "Покупка"
						Или	КлючИЗначение.Ключ = "Продажа") Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого КлючИЗначениеПодРаздел Из КлючИЗначение.Значение Цикл
				Если ИмяРеестра = КлючИЗначениеПодРаздел.Значение Тогда
					
					ИмяКнопкиРаздела = КлючИЗначениеПодРаздел.Значение;
					Прервать;
					
				КонецЕсли;
			КонецЦикла;
			Если Не ИмяКнопкиРаздела = Неопределено Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ИмяКнопкиРаздела = Неопределено Тогда
			ИмяКнопкиРаздела = "";
		КонецЕсли;
	КонецЕсли;
	
	идРаздел		= Прав(ИмяКнопкиРаздела, 2);
	ТекущийРаздел	= Лев(идРаздел, 1);
	Раздел			= Прав(идРаздел, 1);
	ТипДок			= Сред(ИмяКнопкиРаздела, 10, СтрДлина(ИмяКнопкиРаздела)-11);
	
	СтруктураРазделаГО = Новый Структура("ПредыдущийРаздел");//Для отслеживания вложенности разделов. При не удачном переходе, возвращаемся по пути обратно
	СтруктураРазделаГО.Вставить("Имя",					ИмяКнопкиРаздела);
	СтруктураРазделаГО.Вставить("ТекущийРаздел",		ТекущийРаздел);
	СтруктураРазделаГО.Вставить("Раздел",				Раздел);
	СтруктураРазделаГО.Вставить("ТипДок",				ТипДок);
	СтруктураРазделаГО.Вставить("ФормыРаздела",			Новый Массив);
	СтруктураРазделаГО.Вставить("ПараметрыРаздела",		Новый Структура);
	
	НазваниеРаздела = НазваниеРазделаПоНомеру(Раздел);
	СтруктураРазделаГО.ФормыРаздела.Добавить("Раздел_" + НазваниеРаздела + "_" + ТипДок);
	СтруктураРазделаГО.ФормыРаздела.Добавить("Раздел_" + НазваниеРаздела + "_Шаблон");
	
	Попытка
		фрм = НайтиФункциюСеансаОбработки("ОбновитьКонтент", СтруктураРазделаГО.ФормыРаздела);
	Исключение
		СообщитьСбисИсключение(ИнформацияОбОшибке(), Новый Структура("ИмяКоманды", "ГлавноеОкно.сбисСтруктураВыбранногоРаздела"));	
	КонецПопытки;
	
	СтруктураРазделаГО.Вставить("Форма", фрм);
	
	Возврат СтруктураРазделаГО;
	
КонецФункции

&НаКлиенте
Функция СтруктураРазделаГО_Получить(СтруктураРазделаГО, КлючЗначенияПолучить) Экспорт 
	
	Если КлючЗначенияПолучить = "Название" Тогда
		
		Кэш = ПолучитьТекущийЛокальныйКэш();
		Возврат Кэш.Разделы["р" + СтруктураРазделаГО.Раздел];
		
	ИначеЕсли КлючЗначенияПолучить = "Тип" Тогда
		
		Возврат СтруктураРазделаГО.ТипДок;
		
	Иначе	
		
		Возврат СтруктураРазделаГО[КлючЗначенияПолучить];
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СтруктураРазделаГО_Вставить(СтруктураРазделаГО, КлючЗначенияВставить, ЗначениеВставить) Экспорт 
	
	СтруктураРазделаГО[КлючЗначенияВставить] = ЗначениеВставить;
	
КонецПроцедуры

// Функция - возвращает Соответствие разделов главного окна
// 
// Возвращаемое значение:
//  Соответствие - номер раздела - его название
//
&НаКлиенте
Функция СоответствиеРазделовГО()
	Перем РазделыГОСБИС;
	
	Если Не ГлобальныйКэш.ТекущийСеанс.Интерфейс.Свойство("РазделыАккордеона", РазделыГОСБИС) Тогда
		РазделыГОСБИС = Новый Соответствие;
		РазделыГОСБИС.Вставить("1",	"Полученные");
		РазделыГОСБИС.Вставить("2",	"Отправленные");
		РазделыГОСБИС.Вставить("3",	"Продажа");
		РазделыГОСБИС.Вставить("4",	"Покупка");
		РазделыГОСБИС.Вставить("5",	"Настройки");
		РазделыГОСБИС.Вставить("6",	"Справочники");
		РазделыГОСБИС.Вставить("7",	"Учет");
		РазделыГОСБИС.Вставить("8",	"Задачи");
		РазделыГОСБИС.Вставить("9",	"Отчетность");
		ГлобальныйКэш.ТекущийСеанс.Интерфейс.Вставить("РазделыАккордеона", РазделыГОСБИС);
	КонецЕсли;
	
	Возврат РазделыГОСБИС;
	
КонецФункции

&НаКлиенте
Функция НазваниеРазделаПоНомеру(НомерВыбранногоРаздела)

	Возврат СоответствиеРазделовГО().Получить(Строка(НомерВыбранногоРаздела));
	
КонецФункции

