
// Функция - Класс результат действия
//
// Параметры:
//  ПараметрыДействия	 - Структура	- 
//		Тип - тип действия ОбновлениеСтатусов/Отправка/Загрузка/Обновление
//  ДопПараметры		 - Структура	- для расширения.
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция НовыйРезультатДействия(ПараметрыДействия, ДопПараметры) Экспорт
	
	РезультатДействия = Новый Структура;
	РезультатДействия.Вставить("Операция",	ПараметрыДействия.Тип);
	РезультатДействия.Вставить("Время",		Новый Структура("Начало, Конец, Запись, ОжиданиеОтвета, Выполнение, ПолучениеДанных, Подготовка",0,0,0,0,0,0,0));
	РезультатДействия.Вставить("Всего",		Новый Структура("Выполнено, НеВыполнено, ОшибокВыполнения, ОшибокПодготовки", 0,0,0,0));
	РезультатДействия.Вставить("Действие",	Новый Структура("ДетализацияВыполнено, ДетализацияНеВыполнено", Новый Соответствие,Новый Соответствие));
	РезультатДействия.Вставить("Ошибки",	Новый Структура("ДетализацияОшибок, СоответствиеКодов", Новый Соответствие,Новый Соответствие));
	Если		РезультатДействия.Операция = "ОбновлениеСтатусов" Тогда
		РезультатДействия.Вставить("Параметры", Новый Структура("ПредставлениеОперации, СчетчикПачек, СчетчикСобытий, ЕстьИзменения, ПродолжатьЗапрос, Метки", "Обновление статусов", 0, 0, Ложь, Истина));
		РезультатДействия.Параметры.Вставить("СтрокаСостояния", "Обновление статусов отправленных документов {счетчик}");
	ИначеЕсли   РезультатДействия.Операция = "ОбновлениеОбработки" Тогда
		РезультатДействия.Вставить("Параметры",	Новый Структура("ВерсияБыло, ВерсияНовая, ПредставлениеОперации", ГлобальныйКэш.Парам.ПредВерсия, ПараметрыДействия.НоваяВерсия , "Обновление"));		
	Иначе
		РезультатДействия.Вставить("Параметры",	Новый Структура("КоличествоСвободныхПотоков, КоличествоОтветов, ПорНомер, ПредставлениеОперации, ФормаВызова, СформированныеДанные, ДанныеПоСтатусам", 30));
	КонецЕсли;
	РезультатДействия.Время.Начало = ПолучитьДатуВМиллисекундах();
	Если	ДопПараметры.Свойство("СтатусыДляОбработки")
		И	ДопПараметры.СтатусыДляОбработки Тогда
		РезультатДействия.Вставить("НаЗаписьСтатусов", Новый Структура("Ошибки, Ответы", Новый Соответствие, Новый Соответствие));
	КонецЕсли;
	Возврат РезультатДействия;

КонецФункции

//Обновляет счетчики времени в результате
&НаКлиенте
Процедура РезультатДействия_ОбновитьВремя(РезультатДействия, Тип="Выполнение") Экспорт
	
	Если Не РезультатДействия.Время.Свойство(Тип) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатДействия.Время.Конец = ПолучитьДатуВМиллисекундах();
	сбисВремя = РезультатДействия.Время.Конец - РезультатДействия.Время.Начало;
	Для Каждого КлючИЗначение Из РезультатДействия.Время Цикл
		Если	КлючИЗначение.Ключ = "Начало"
			Или	КлючИЗначение.Ключ = "Конец" Тогда
			Продолжить;
		КонецЕсли;
		сбисВремя = сбисВремя - КлючИЗначение.Значение;
	КонецЦикла;

	РезультатДействия.Время[Тип] = РезультатДействия.Время[Тип] + сбисВремя;
	
КонецПроцедуры

&НаКлиенте
Функция РезультатДействия_НовыйСтрокаДетализации(РезультатДействия, ДопПараметры=Неопределено) Экспорт
	
	СтрокаРезультат = Новый Структура("Состояние, Сообщение, Название, Данные", "", "");
	Если		РезультатДействия.Операция = "Загрузка" Тогда
		СтрокаРезультат.Вставить("ОбработаныОбъекты1С", Новый Массив);
		СтрокаРезультат.Вставить("ИдентификаторПакета");
		СтрокаРезультат.Вставить("ИдентификаторВложения");
	ИначеЕсли	РезультатДействия.Операция = "Отправка" Тогда
		СтрокаРезультат.Вставить("ОбработаныОбъекты1С", Новый Массив);
	КонецЕсли;
	Если Не ДопПараметры = Неопределено Тогда
		Если ДопПараметры.Свойство("Название") Тогда
			СтрокаРезультат.Название = ДопПараметры.Название
		КонецЕсли;
	КонецЕсли;
	Возврат СтрокаРезультат;
	
КонецФункции

&НаКлиенте
Процедура РезультатДействия_ДобавитьСбисИсключение(РезультатДействия, СбисИсключение, ДопПараметры=Неопределено) Экспорт
    Перем ЭлементДетализации, ТипОшибки, СбисПараметрыСчетчика, КлючДетализации, КлючДетализацииУдалить;
	
	Если Не ДопПараметры = Неопределено Тогда
		ДопПараметры.Свойство("СтрокаДетализации",		ЭлементДетализации);
		ДопПараметры.Свойство("ТипОшибки",				ТипОшибки);	
		ДопПараметры.Свойство("ПараметрыСчетчика",		СбисПараметрыСчетчика);	
		ДопПараметры.Свойство("КлючДетализацииУдалить",	КлючДетализацииУдалить);	
		ДопПараметры.Свойство("КлючГруппировки",		КлючДетализации);	
	КонецЕсли;
	Если ТипОшибки = Неопределено Тогда
		ТипОшибки = "Выполнение";
	КонецЕсли;
	Если СбисПараметрыСчетчика = Неопределено Тогда
		СбисПараметрыСчетчика = Новый Структура;
	КонецЕсли;
	Если ЭлементДетализации = Неопределено Тогда
		ЭлементДетализации = РезультатДействия_НовыйСтрокаДетализации(РезультатДействия, Новый Структура("Название", ТипОшибки));
	КонецЕсли;
	Если КлючДетализации = Неопределено Тогда
		КлючДетализации = СбисИсключение.message;
	КонецЕсли;
	
	РезультатДействия.Ошибки.СоответствиеКодов.Вставить(СбисИсключение.message, СбисИсключение.code);
	
	Если Не КлючДетализацииУдалить = Неопределено Тогда
		//Очищаем из детализации результата ключ детализации, если необходимо
		ЭлементДетализацииУдалить = РезультатДействия.Действие.ДетализацияДействия.Свойство(КлючДетализацииУдалить);
		Если Не ЭлементДетализацииУдалить = Неопределено Тогда
			РезультатДействия.Действие.ДетализацияДействия.Удалить(КлючДетализацииУдалить);
		КонецЕсли;
	КонецЕсли;
	Если	СбисПараметрыСчетчика.Свойство("ОбработанКакУспех")
		И	СбисПараметрыСчетчика.ОбработанКакУспех Тогда
		РезультатДействия.Всего.Выполнено = РезультатДействия.Всего.Выполнено - 1;
		СбисПараметрыСчетчика.ОбработанКакУспех = Ложь;
	КонецЕсли;
	Если	Не СбисПараметрыСчетчика.Свойство("ОбработанКакОшибка")
		Или	Не СбисПараметрыСчетчика.ОбработанКакОшибка Тогда
		Если ТипОшибки = "Выполнение" Тогда
			РезультатДействия.Всего.ОшибокВыполнения = РезультатДействия.Всего.ОшибокВыполнения + 1;
		Иначе
			РезультатДействия.Всего.ОшибокПодготовки = РезультатДействия.Всего.ОшибокПодготовки + 1;
		КонецЕсли;
		СбисПараметрыСчетчика.Вставить("ОбработанКакОшибка", Истина);
	КонецЕсли;
	ЭлементСоответствия = РезультатДействия.Ошибки.ДетализацияОшибок.Получить(КлючДетализации);
	Если ЭлементСоответствия = Неопределено Тогда
		ЭлементСоответствия = Новый Массив;
		РезультатДействия.Ошибки.ДетализацияОшибок.Вставить(КлючДетализации, ЭлементСоответствия);
	КонецЕсли;
	ЭлементДетализации.Сообщение	= СбисИсключение.details;
	ЭлементДетализации.Данные		= СбисИсключение;
	ЭлементСоответствия.Добавить(ЭлементДетализации);
	РезультатДействия_ОбновитьВремя(РезультатДействия, ТипОшибки);
	
КонецПроцедуры	

&НаКлиенте
Процедура РезультатДействия_ОбработатьРезультат(РезультатДействия, РезультатОперации, ДопПараметры) Экспорт
	Перем КлючГруппировки, КлючДобавления, СбисТип, СбисПараметрыСчетчика, СбисСчитать, ЭлементДетализации, ОбъектДетализации;
	
	КлючДобавления			= "Выполнено";
	КлючВремени				= "Выполнение";
	СбисДобавитьОшибку		= Ложь;
	сбисПараметрыСчетчика	= Новый Структура;
	
	Если Не ДопПараметры.Свойство("Тип",				СбисТип) Тогда
		сбисТип = КлючДобавления;
	Иначе
		КлючДобавления = СбисТип;
	КонецЕсли;
	Если Не	ДопПараметры.Свойство("ПараметрыСчетчика",	сбисПараметрыСчетчика) Тогда
		сбисПараметрыСчетчика = Новый Структура;
	КонецЕсли;
	Если Не	ДопПараметры.Свойство("Считать",			СбисСчитать) Тогда
		СбисСчитать = Истина;
	КонецЕсли;
	Если Не	ДопПараметры.Свойство("КлючГруппировки",	КлючГруппировки) Тогда
		КлючГруппировки = "-";
	КонецЕсли;
	
	Если		сбисТип = "Выполнено" Тогда
		ОбъектДетализации	= РезультатДействия.Действие["Детализация" + сбисТип];
	ИначеЕсли	сбисТип = "НеВыполнено" Тогда
		КлючДобавления		= "НеВыполнено";
		ОбъектДетализации	= РезультатДействия.Действие["Детализация" + сбисТип];
	ИначеЕсли	сбисТип = "Ошибка" Тогда
		РезультатДействия_ДобавитьСбисИсключение(РезультатДействия, РезультатОперации, ДопПараметры);
		Возврат;		
	//ИначеЕсли	сбисТип = "ОшибкаВыполнения" Тогда
	//	КлючДобавления		= "ОшибокВыполнения";
	//	КлючВремени			= "Выполнение";
	//	ОбъектДетализации	= РезультатДействия.Ошибки;
	//ИначеЕсли	сбисТип = "ОшибкаПодготовки" Тогда
	//	КлючВремени			= "Подготовка";
	//	КлючДобавления		= "ОшибокПодготовки";
	//	ОбъектДетализации	= РезультатДействия.Ошибки;
	Иначе
		Возврат;
	КонецЕсли;
	Если Не	ДопПараметры.Свойство("ЭлементДетализации",	ЭлементДетализации) Тогда
		ЭлементДляВставки = ОбъектДетализации.Получить(КлючГруппировки);
		Если ЭлементДетализации = Неопределено Тогда
			ПараметрыДетализации = Новый Структура("Название", СбисТип);
			ЭлементДетализации = РезультатДействия_НовыйСтрокаДетализации(РезультатДействия, ПараметрыДетализации);
		КонецЕсли;
	КонецЕсли;
	ЭлементДетализации.Данные = РезультатОперации;
	ОбъектДетализации.Вставить(КлючГруппировки, ЭлементДетализации);
	
	Если СбисСчитать Тогда
		//Делаем итерацию по счетчику. Если уже обработан как ошибка, или успех то не считаем.
		Если	(	Не сбисПараметрыСчетчика.Свойство("ОбработанКакУспех")
			Или	Не сбисПараметрыСчетчика.ОбработанКакУспех)
			И	(	Не сбисПараметрыСчетчика.Свойство("ОбработанКакОшибка")
			Или	Не сбисПараметрыСчетчика.ОбработанКакОшибка) Тогда
			РезультатДействия.Всего[КлючДобавления] = РезультатДействия.Всего[КлючДобавления] + 1;
			сбисПараметрыСчетчика.Вставить("ОбработанКакУспех", Истина);
		КонецЕсли;
	КонецЕсли;
	РезультатДействия_ОбновитьВремя(РезультатДействия, КлючВремени);
		
КонецПроцедуры
	
