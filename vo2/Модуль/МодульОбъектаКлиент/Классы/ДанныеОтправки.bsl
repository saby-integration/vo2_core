
&НаКлиенте
Функция НовыйОтправкаДокументаСБИС(СоставПакета, СтатусПакета="Подготовка") Экспорт
	
	СтатусЭДО = Новый Структура("Статус, Этап, ИдПакета");
	ПоляКласса = "_класс,
		|СоставПакета,
		|ДокументЗаписать,
		|ДокументОтправить,
		|СтатусПакета,
		|ИдентификаторОтправки,
		|СтатусЭДО,
		|Параметры";
	
	ОтправкаДокументаСБИС = Новый Структура(ПоляКласса);
	ОтправкаДокументаСБИС._класс	= "ОтправкаДокументаСБИС";
	ОтправкаДокументаСБИС.Параметры	= Новый Структура;
	
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СтатусПакета", СтатусПакета);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СоставПакета", СоставПакета);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СтатусЭДО",	СтатусЭДО);
	
	Возврат ОтправкаДокументаСБИС
	
КонецФункции

&НаКлиенте
Процедура ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, КлючУстановить, ЗначениеУстановить=Неопределено) Экспорт  
	
	Если КлючУстановить = "СтатусПакета" Тогда
		Если	ЗначениеУстановить = "Готов"			//Документ прошёл подготовку, сгенерирован Документ СБИС к отправке, все файлы готовы
			Или ЗначениеУстановить = "Ошибка"			//Документ обработан с ошибкой (получено событие с ошибкой)
			Или	ЗначениеУстановить = "Отправлен" 		//Получено сообщение о успешной отправке
			Или	ЗначениеУстановить = "ОтправленВПоток" 	//Выполнена отправка в поток, но ответа пока не получили
			Или	ЗначениеУстановить = "Обработан" 		//
			Или	ЗначениеУстановить = "ОжидаетАктивации"	//Пока не активирован сертификат с ИНН отправителя. 
			Или	ЗначениеУстановить = "Переотправка" 	//Упала ошибка авторизации, но удалось переавторизоваться и пакет выставлен на повторную отправку
			Или	ЗначениеУстановить = "Подготовка" 
			Или	ЗначениеУстановить = "Черновик" Тогда
			ОтправкаДокументаСБИС[КлючУстановить] = ЗначениеУстановить;
		КонецЕсли;
	ИначеЕсли КлючУстановить = "ИдПакетаЭДО" Тогда
		СтруктураЗаписей = ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "СтатусЭДО"); 
		СтруктураЗаписей.ИдПакета = ЗначениеУстановить;
	ИначеЕсли КлючУстановить = "ЗначениеСтатусаЭДО" Тогда
		СтруктураЗаписей = ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "СтатусЭДО"); 
		СтруктураЗаписей.Статус = ЗначениеУстановить;
	ИначеЕсли КлючУстановить = "ТекущийЭтапЭДО" Тогда
		СтруктураЗаписей = ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "СтатусЭДО"); 
		СтруктураЗаписей.Этап = ЗначениеУстановить;
	Иначе
		ОтправкаДокументаСБИС[КлючУстановить] = ЗначениеУстановить;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Функция ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, КлючПолучить) Экспорт
		
	Если		КлючПолучить = "ИННОтправителя" Тогда
		ОрганизацияОтправитель = ОтправкаДокументаСБИС.СоставПакета.НашаОрганизация;
		
		КлючИдентификатора = МодульОбъектаКлиент().Сторона_Получить(ОрганизацияОтправитель, "КлючИдентификатора");
		
		Возврат ?(ОрганизацияОтправитель.Свойство("СвФЛ"), ОрганизацияОтправитель.СвФЛ[КлючИдентификатора], ОрганизацияОтправитель.СвЮЛ[КлючИдентификатора]);
	ИначеЕсли	КлючПолучить = "ИдентификаторОтправки" Тогда
		Если ОтправкаДокументаСБИС.ИдентификаторОтправки = Неопределено Тогда
			ДопПараметры = Новый Структура;	
			ДопПараметры.Вставить("Статус",ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "ЗначениеСтатусаЭДО"));
			ОтправкаДокументаСБИС.ИдентификаторОтправки = СоставПакета_Идентификатор(ОтправкаДокументаСБИС.СоставПакета, ДопПараметры);
		КонецЕсли;
		Возврат ОтправкаДокументаСБИС.ИдентификаторОтправки; 
	ИначеЕсли КлючПолучить = "ИдПакетаЭДО" Тогда
		 Возврат ОтправкаДокументаСБИС.СтатусЭДО.ИдПакета;  
	ИначеЕсли КлючПолучить = "ЗначениеСтатусаЭДО" Тогда
		 Возврат ОтправкаДокументаСБИС.СтатусЭДО.Статус;  
	ИначеЕсли КлючПолучить = "ТекущийЭтапЭДО" Тогда
		 Возврат ОтправкаДокументаСБИС.СтатусЭДО.Этап;

	//ИначеЕсли	КлючПолучить = "ПараметрыОшибки" Тогда
	//	
	//	ПараметрыОшибкиРезультат = Новый Структура("Фатальная, Авторизация, Подготовка");
	//	Если ЗначениеЗаполнено(ОтправкаДокументаСБИС.Ошибка) Тогда
	//		Возврат 
	//	КонецЕсли;
	//	
	КонецЕсли;
	
	Возврат ОтправкаДокументаСБИС[КлючПолучить];
	
КонецФункции

&НаКлиенте
Процедура ОтправкаДокументаСБИС_Подготовить(ОтправкаДокументаСБИС)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Статус",		ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "ЗначениеСтатусаЭДО"));  
	ДопПараметры.Вставить("Этап",		ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "ТекущийЭтапЭДО"));
	ДопПараметры.Вставить("Шифрование",	ПолучитьЗначениеПараметраСбис("Шифрование"));
	
	АргументОтправки = СоставПакета_ПодготовитьКОтправке(ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "СоставПакета"), ДопПараметры);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "ДокументОтправить",	АргументОтправки.ДокументОтправить);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "ДокументЗаписать",		АргументОтправки.ДокументЗаписать);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СтатусПакета",			АргументОтправки.СтатусПакета);
	
КонецПроцедуры	

