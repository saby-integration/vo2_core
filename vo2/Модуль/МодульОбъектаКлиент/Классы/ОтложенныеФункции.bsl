
// Класс - отложенное действие
//
// Параметры:
//  ПараметрыКонструктора	 - Структура	 - описанине для создания отложенной операции
//		ОписаниеОповещения			- Условно-Обязательный, СбисОписаниеОповещения - обработчик вызова.
//		ИмяПроцедуры				- Условно-Обязательный, Строка, - Имя - имя процедуры/функции для описания оповещения.		Если не указан параметр "ОписаниеОповещения"
//		Модуль						- Условно-Обязательный, Форма/МодульОбъекта, - модуль для описания оповещения.				Если не указан параметр "ОписаниеОповещения"
//		ДополнительныеПараметры 	- Необязательный, Структура(Неопределено) - Второй параметр для описания оповещения.		Если не указан параметр "ОписаниеОповещения"
//		ИмяПроцедурыОбработкиОшибки	- Необязательный Строка, - Имя - имя процедуры/функции для описания оповещения при ошибке.	Если не указан параметр "ОписаниеОповещения"
//		МодульОбработкиОшибки		- Необязательный Форма/МодульОбъекта, - модуль для описания оповещения при ошибке.			Если не указан параметр "ОписаниеОповещения"
//		ИдентификаторДействия		- Необязательный, Строка(ИмяПроцедуры) - ключ для поиска действия. Если не указан, то берётся имя процедуры из описания оповещения.
//		Периодичность				- Необязательный, Число, секунды (0.1) - как часто производится вызов. Если не указано, то сразу после завершения последнего вызова. 
//		Аргумент 					- Необязательный, Произвольный(Неопределено),  - Аргумент для вызова описания оповещения
//		ЧислоВызовов				- Необязательнвц, Число(1) - сколько раз делать вызов. Если Неопределено, то бесконечно.
//		ВызватьСразу				- Необязательный, Булево(Истина) - Выполнить сразу при завершении текущих вызовов. Смысл указывать есть только при большой периодичности между вызовами, когда нет необходимости вызова сразу при подключении операции.
// 
// Возвращаемое значение:
//  Экземпляр(Структура) - класс отложенное действие
//
&НаКлиенте
Функция НовыйОтложенноеДействие(ПараметрыКонструктора) Экспорт
	Перем СбисОписаниеОповещения, ДопПараметры, ИмяПроцедурыОбработкиОшибки, МодульОбработкиОшибки;
	Попытка
		Если Не ПараметрыКонструктора.Свойство("ОписаниеОповещения", СбисОписаниеОповещения) Тогда
			ПараметрыКонструктора.Свойство("ДополнительныеПараметры",		ДопПараметры);
			ПараметрыКонструктора.Свойство("ИмяПроцедурыОбработкиОшибки",	ИмяПроцедурыОбработкиОшибки);
	 		ПараметрыКонструктора.Свойство("МодульОбработкиОшибки",			МодульОбработкиОшибки);
			СбисОписаниеОповещения = НовыйСбисОписаниеОповещения(ПараметрыКонструктора.ИмяПроцедуры, ПараметрыКонструктора.Модуль, ДопПараметры, ИмяПроцедурыОбработкиОшибки, МодульОбработкиОшибки);
		КонецЕсли;
		ОбъектОтложенногоДействия = Новый Структура(
		"_класс,				ОписаниеОповещения,	СледующийВызовМС,									ЧислоВызовов, ПоследнийВызовМС, ПериодичностьМС, Аргумент, ИдДействия", 
		"ОтложенноеДействие",	СбисОписаниеОповещения,	ПолучитьДатуВМиллисекундах());
		Если ПараметрыКонструктора.Свойство("ИдентификаторДействия", ОбъектОтложенногоДействия.ИдДействия) Тогда
			
			ОбъектОтложенногоДействия.ИдДействия = "_" + СтрЗаменить(ОбъектОтложенногоДействия.ИдДействия, "-", "_");
			
		Иначе
			
			ОбъектОтложенногоДействия.ИдДействия = СбисОписаниеОповещения.ИмяПроцедуры;
			
		КонецЕсли;
		Если ПараметрыКонструктора.Свойство("Периодичность", ОбъектОтложенногоДействия.ПериодичностьМС) Тогда
			ОбъектОтложенногоДействия.ПериодичностьМС = ОбъектОтложенногоДействия.ПериодичностьМС * 1000;
			Если ПараметрыКонструктора.Свойство("ВызватьСразу") И Не ПараметрыКонструктора.ВызватьСразу Тогда
				//ПО умолчанию, вызывается при попадании в обработчик, но можно отключить, тогда вызов будет через указанную периодичность по таймеру от момента подключения
				ОбъектОтложенногоДействия.СледующийВызовМС = ОбъектОтложенногоДействия.СледующийВызовМС + ОбъектОтложенногоДействия.ПериодичностьМС;
			КонецЕсли;
		Иначе
			ОбъектОтложенногоДействия.ПериодичностьМС = 100;//по-дефолту, сразу при срабатывании
		КонецЕсли;
		Если Не ПараметрыКонструктора.Свойство("ЧислоВызовов", ОбъектОтложенногоДействия.ЧислоВызовов) Тогда
			ОбъектОтложенногоДействия.ЧислоВызовов = 1;//Однократно, для бесконечного вызова - Неопределено
		КонецЕсли;
		ПараметрыКонструктора.Свойство("Аргумент", ОбъектОтложенногоДействия.Аргумент);
		
		Возврат ОбъектОтложенногоДействия;
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.НовыйОтложенноеДействие");
	КонецПопытки;
КонецФункции

// Функция - создает копию отложенного действия
//
// Параметры:
//  ОтложенноеДействие	 - Объект отложенное действие, которое надо запустить на выполнение 
//
&НаКлиенте
Функция ОтложенноеДействие_Скопировать(ОтложенноеДействие) Экспорт
	
	ОбъектОтложенногоДействия = Новый Структура(
	"_класс, ОписаниеОповещения, СледующийВызовМС, ЧислоВызовов, ПоследнийВызовМС, ПериодичностьМС, Аргумент, ИдДействия");
	ЗаполнитьЗначенияСвойств(ОбъектОтложенногоДействия, ОтложенноеДействие);
	ОбъектОтложенногоДействия.ИдДействия = "_" + СтрЗаменить(Новый УникальныйИдентификатор, "-", "_");
	Возврат ОбъектОтложенногоДействия;
	
КонецФункции
	
// Процедура - запускает отложенное действие на выполнение
//
// Параметры:
//  ОтложенноеДействие	 - Объект отложенное действие, которое надо запустить на выполнение 
//
&НаКлиенте
Процедура ПодключитьОтложенноеДействие(ОтложенноеДействие) Экспорт
	сбисОтложенныеОперации	= ГлобальныйКэш.ТекущийСеанс.сбисОтложенныеОперации;
	ОтложенныеПроцедуры		= сбисОтложенныеОперации.Процедуры;
	Если ОтложенныеПроцедуры.Свойство(ОтложенноеДействие.ИдДействия) Тогда
		ВызватьСбисИсключение(,"МодульОбъектаКлиент.ПодключитьОтложенноеДействие", 735,, "Действие с идентификатором " + ОтложенноеДействие.ИдДействия + "уже запущено"); 
	Иначе
		ОтложенныеПроцедуры.Вставить(ОтложенноеДействие.ИдДействия, ОтложенноеДействие); 
	КонецЕсли;
	Если сбисОтложенныеОперации.Запущено Тогда
		ГлавноеОкно.ОтключитьОбработчикОжидания("ВыполнениеОтложенныхПроцедур");
		//Переключаем чтобы вызов произошёл сразу.
	КонецЕсли;	
	ГлавноеОкно.ПодключитьОбработчикОжидания("ВыполнениеОтложенныхПроцедур", 0.1, Истина);
	сбисОтложенныеОперации.Запущено = Истина;
КонецПроцедуры

// Процедура - убирает отложенное действие из списка выполняемых
//
// Параметры:
//  ПараметрыОтключения - Структура
//		ОтложенноеДействие	 - Условно-Обязательный, Объект отложенное действие, которое надо отключить. Либо передан ИдентификаторДействия 
//		ИдентификаторДействия- Условно-Обязательный, Строка, ид действия, которое надо отключить. Либо передано ОтложенноеДействие 
//
&НаКлиенте
Процедура ОтключитьОтложенноеДействие(ОтложенноеДействие) Экспорт
	Перем КлючОперации;
	
	КлючОперации		= ОтложенноеДействие.ИдДействия;
	ОтложенныеПроцедуры	= ГлобальныйКэш.ТекущийСеанс.сбисОтложенныеОперации.Процедуры;
	Если ОтложенныеПроцедуры.Свойство(КлючОперации) Тогда
		ОтложенныеПроцедуры.Удалить(КлючОперации);
	КонецЕсли;
КонецПроцедуры

