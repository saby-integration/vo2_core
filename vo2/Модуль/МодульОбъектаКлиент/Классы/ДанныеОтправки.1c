
&НаКлиенте
Функция НовыйОтправкаДокументаСБИС(СоставПакета, СтатусПакета="Подготовка")
	
	ОтправкаДокументаСБИС = Новый Структура("_класс, СоставПакета, ДокументОтправить, СтатусПакета, ИдентификаторОтправки", "ОтправкаДокументаСБИС", СоставПакета);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СтатусПакета", СтатусПакета);
	Возврат ОтправкаДокументаСБИС
	
КонецФункции

&НаКлиенте
Процедура ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, КлючУстановить, ЗначениеУстановить=Неопределено) Экспорт
	
	Если КлючУстановить = "СтатусПакета" Тогда
		Если	ЗначениеУстановить = "Готов"			//Документ прошёл подготовку, сгенерирован Документ СБИС к отправке, все файлы готовы
			Или ЗначениеУстановить = "Ошибка"			//Документ обработан с ошибкой (получено событие с ошибкой)
			Или	ЗначениеУстановить = "Отправлен" 		//Получено сообщение о успешной отправке
			Или	ЗначениеУстановить = "ОтправленВПоток" 	//Выполнена отправка в поток, но ответа пока не получили
			Или	ЗначениеУстановить = "Обработан" 		//
			Или	ЗначениеУстановить = "ОжидаетАктивации"	//Пока не активирован сертификат с ИНН отправителя. 
			Или	ЗначениеУстановить = "Переотправка" 	//Упала ошибка авторизации, но удалось переавторизоваться и пакет выставлен на повторную отправку
			Или	ЗначениеУстановить = "Подготовка" 
			Или	ЗначениеУстановить = "Черновик" Тогда
			ОтправкаДокументаСБИС[КлючУстановить] = ЗначениеУстановить;
		КонецЕсли;
	Иначе
		ОтправкаДокументаСБИС[КлючУстановить] = ЗначениеУстановить;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Функция ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, КлючПолучить) Экспорт
	
	Если		КлючПолучить = "ИННОтправителя" Тогда
		ОрганизацияОтправитель = ОтправкаДокументаСБИС.СоставПакета.НашаОрганизация;
		Возврат ?(ОрганизацияОтправитель.Свойство("СвФЛ"), ОрганизацияОтправитель.СвФЛ.ИНН, ОрганизацияОтправитель.СвЮЛ.ИНН);
	ИначеЕсли	КлючПолучить = "ИдентификаторОтправки" Тогда
		Если ОтправкаДокументаСБИС.ИдентификаторОтправки = Неопределено Тогда
			ОтправкаДокументаСБИС.ИдентификаторОтправки = СоставПакета_Идентификатор(ОтправкаДокументаСБИС.СоставПакета);
		КонецЕсли;
		Возврат ОтправкаДокументаСБИС.ИдентификаторОтправки;

	//ИначеЕсли	КлючПолучить = "ПараметрыОшибки" Тогда
	//	
	//	ПараметрыОшибкиРезультат = Новый Структура("Фатальная, Авторизация, Подготовка");
	//	Если ЗначениеЗаполнено(ОтправкаДокументаСБИС.Ошибка) Тогда
	//		Возврат 
	//	КонецЕсли;
	//	
	КонецЕсли;
	
	Возврат ОтправкаДокументаСБИС[КлючПолучить];
	
КонецФункции

&НаКлиенте
Процедура ОтправкаДокументаСБИС_Подготовить(ОтправкаДокументаСБИС)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Статус",ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "Статус"));  
	Если ОтправкаДокументаСБИС.Свойство("Этап") Тогда
		ДопПараметры.Вставить("Этап",ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "Этап"));
	КонецЕсли;
	
	АргументОтправки = СоставПакета_ПодготовитьКОтправке(ОтправкаДокументаСБИС_Получить(ОтправкаДокументаСБИС, "СоставПакета"),ДопПараметры);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "ДокументОтправить",	АргументОтправки.ДокументОтправить);
	ОтправкаДокументаСБИС_Установить(ОтправкаДокументаСБИС, "СтатусПакета",			АргументОтправки.СтатусПакета);
	
КонецПроцедуры	

