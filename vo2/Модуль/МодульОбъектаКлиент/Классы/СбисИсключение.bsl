	
// Процедура - Сообщает сбис исключение
//
// Параметры:
//  ИсключениеВходящее	 - Структура, ИнформацияОбОшибке	- экземпляр ExtSysException(СбисИсключение) в разобранном виде, либо в виде сериализованной строки
//  ДопПараметры		 - Структура, Строка	- дополнительные параметры. Если строка, то имя команды для стека при вызове как ИнформацияОбОшибке
//		СтатусСообщения		- Строка	- статус сообщения: "warning" - показать форму предупреждения со ссылкой на решение проблемы. "attention" - показать форму ошибки, "message" - вывод в обычном режиме
//		Отправлять			- Булево, признак отключения отправки ошибки в статистику
//		ИмяКоманды			- Строка для генерации исключения, если как исключение пришла ИнформацияОбОшибке
//
&НаКлиенте
Процедура СообщитьСбисИсключение(ИсключениеВходящее, ДопПараметры=Неопределено) Экспорт
	Перем СтатусОшибки, лРешениеПроблемы, лФормаВладелец, лОтправлятьОшибку;
	
	Если		ТипЗнч(ИсключениеВходящее) = Тип("ИнформацияОбОшибке") Тогда
		Если ТипЗнч(ДопПараметры) = Тип("Структура") Тогда
			ИмяКомандыВСтэк = ДопПараметры.ИмяКоманды;
		Иначе
			ИмяКомандыВСтэк = Строка(ДопПараметры);
			ДопПараметры	= Новый Структура;
		КонецЕсли;
		СбисИсключение = НовыйСбисИсключение(ИсключениеВходящее, ИмяКомандыВСтэк);
	ИначеЕсли 	Не	ТипЗнч(ИсключениеВходящее) = Тип("Структура")
			Или Не	ИсключениеВходящее.Свойство("message")
			Или	Не	ИсключениеВходящее.Свойство("details") Тогда
		Возврат;
	Иначе
		СбисИсключение = ИсключениеВходящее;
	КонецЕсли;
	
	Если Не ДопПараметры = Неопределено Тогда
			
		Если 	ДопПараметры.Свойство("Отложенно")
			И	ДопПараметры.Отложенно Тогда
			//Показать ошибку отложенно.
			ДопПараметры.Удалить("Отложенно");
			СбисПараметрыДействия = Новый Структура("ИмяПроцедуры, Модуль, ДополнительныеПараметры, Аргумент");
			СбисПараметрыДействия.ИмяПроцедуры				= "СообщитьСбисИсключение";
			СбисПараметрыДействия.Модуль					= МодульОбъектаКлиент();
			СбисПараметрыДействия.ДополнительныеПараметры	= ДопПараметры;
			СбисПараметрыДействия.Аргумент					= ИсключениеВходящее;
			
			Попытка
				
				ПодключитьОтложенноеДействие(НовыйОтложенноеДействие(СбисПараметрыДействия));
				
			Исключение
				
				СообщитьСбисИсключение(НовыйСбисИсключение(ИнформацияОбОшибке(), "МодульОбъектаКлиент.ПодключитьОтложенноеДействие"), Новый Структура("СтатусСообщения", "message"));
				
			КонецПопытки;
			Возврат;
			
		КонецЕсли;
		
		ДопПараметры.Свойство("СтатусСообщения",	СтатусОшибки);
		ДопПараметры.Свойство("ФормаВладелец",		лФормаВладелец);
		ДопПараметры.Свойство("Отправлять",			лОтправлятьОшибку);
		
	КонецЕсли;
	
	ТекстОшибки = СбисИсключение_Представление(СбисИсключение, "сообщение");
	
	//Статус сообщения, если не указан
	Если СтатусОшибки = Неопределено Тогда
		
		Если	СбисИсключение.Свойство("help", лРешениеПроблемы)
			И	ЗначениеЗаполнено(лРешениеПроблемы) Тогда
			СтатусОшибки = "warning";
		Иначе
			СтатусОшибки = "attention";
		КонецЕсли;
		
	КонецЕсли;
	
	//Отправлять ошибку в статистику, если не указано
	Если лОтправлятьОшибку = Неопределено Тогда
		лОтправлятьОшибку = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГлобальныйКэш) Тогда
		Если ПолучитьЗначениеПараметраСбис("РежимОтладки") = Истина Тогда
			
			ДанныеВЛог			= Новый Массив;
			лОтладочныеДанные	= Новый Структура("Исключение", СбисИсключение);
			ДанныеВЛог.Добавить(лОтладочныеДанные);
			СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
			
		КонецЕсли;
		
		Если ГлобальныйКэш.ТихийРежим Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если НЕ (	ДопПараметры.Свойство("НеВызыватьРекурсивно")
				И	ДопПараметры.НеВызыватьРекурсивно) Тогда
			ИсключениеДоп = НовыйСбисИсключение(,"МодульОбъектКлиент.СообщитьСбисИсключение",,"Не определен ГлобальныйКэш");
			СообщитьСбисИсключение(ИсключениеДоп, Новый Структура("СтатусоСообщения, Отправлять, НеВызыватьРекурсивно", "platform_warning", Ложь, Истина));
			СтатусОшибки = "platform_warning";
			лОтправлятьОшибку = Ложь;	
		КонецЕсли;
	КонецЕсли;

	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("Текст",			ТекстОшибки);
	Если ЗначениеЗаполнено(лРешениеПроблемы) Тогда
		ПараметрыСообщения.Вставить("ТекстСсылка",	"Решение проблемы");
		ПараметрыСообщения.Вставить("АдресСсылка",	лРешениеПроблемы);
	КонецЕсли;
	ПараметрыСообщения.Вставить("ФормаВладелец",	лФормаВладелец);
	лОтправлятьОшибку = лОтправлятьОшибку И Не СбисИсключение.code = 775;

	Если		СтатусОшибки = "warning" Тогда
		
		//Важная ошибка, которую обязательно прочитать, либо которая имеет заготовленное решение.
		ФормаПредупреждение = ПолучитьФормуОбработки("ФормаПредупреждения", Новый Структура("Владелец", лФормаВладелец));
		ФормаПредупреждение.Показать(ГлобальныйКэш, ПараметрыСообщения);
		
	ИначеЕсли	СтатусОшибки = "attention" Тогда

		//Обычные исключения показываем в информационной панели. В форме показываем только критические ошибки, либо ошибки, имеющие подготовленное решение.
		ПараметрыСообщения.Вставить("СтатусСообщения", СтатусСообщения.Внимание);
		СбисСообщить(ПараметрыСообщения); 
		
	ИначеЕсли СтатусОшибки = "platform_warning" Тогда
		
		//Только на случай, если либо ещё не проинитился кэш, либо нет возможности получить форму предупреждения.
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Предупреждение(ТекстОшибки);
		#Иначе
			ПоказатьПредупреждение(,ТекстОшибки);
		#КонецЕсли
		
	Иначе
		
		//Сообщить ошибку с обычным статусом.
		ПараметрыСообщения.Вставить("СтатусСообщения", СтатусСообщения.Обычное);
		СбисСообщить(ПараметрыСообщения);
		
	КонецЕсли;
	//Если не отключено, то отправим информацию о возникшей ошибке
	Если лОтправлятьОшибку Тогда	
		сбисПараметрыСтатистики = Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение);
		Попытка
			СбисСтатистика_СформироватьИЗаписать(сбисПараметрыСтатистики, Новый Структура);	
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СообщитьСбисИсключение(НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектКлиент.СформироватьИЗаписатьСтатистикуНаСервис"), Новый Структура("Отправлять", Ложь));
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры

// Функция - Конструктор ExtSysException с проброской через ВызватьИсключение
//
// Параметры:
//  БазоваяОшибка	- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//  СбисИмяКоманды	- Имя команды в стек
//  СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100.				если в БазовойОшибке неопределен код
//  СбисСообщение	- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределено сообщение 
//  СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределена детализация
//  СбисДамп		- (необяз)дамп ошибки
//  СбисХелп		- (необяз)ссылка на решение проблемы
//
&НаСервере
Процедура ВызватьСбисИсключение(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
								СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено,
								СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
								
	МодульОбъектаСервер().ВызватьСбисИсключениеСервер(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	
КонецПроцедуры

// Функция - Конструктор ExtSysException
//
// Параметры:
//  БазоваяОшибка	- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//  СбисИмяКоманды	- Имя команды в стек
//  СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100.				если в БазовойОшибке неопределен код
//  СбисСообщение	- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределено сообщение 
//  СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределена детализация
//  СбисДамп		- (необяз)дамп ошибки
//  СбисХелп		- (необяз)ссылка на решение проблемы
// 
// Возвращаемое значение:
//  Структура - ExtSysException - code, message, detail, dump, help, stack
//
&НаСервере
Функция НовыйСбисИсключение(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
							СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено, 
							СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
							
	//TODO надо бы всё-таки разбить на клиентскую и серверную часть и сделать сериализатор/десериализатор исключения на клиенте, без вызова сервера						
	Возврат МодульОбъектаСервер().НовыйСбисИсключениеСервер(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	
КонецФункции

&НаКлиенте
Функция СбисИсключение_Представление(СбисИсключение, КлючПредставления="исключение") Экспорт
	
	Если КлючПредставления = "сообщение" Тогда
		
		Результат = СбисИсключение.message;
		
		Если Результат = Неопределено Тогда
			Результат = "";
		КонецЕсли;
		
		Если	СбисИсключение.Свойство("details")
			И	СбисИсключение.message <> СбисИсключение.details Тогда 
			Результат = Результат + " (" + СбисИсключение.details + ")";
		КонецЕсли;
		Возврат Результат;
		
	Иначе
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			
			Возврат СбисИсключение_ВСтрокуСервер(СбисИсключение);
			
		#Иначе
			
			Возврат СбисИсключение_Представление_Сервер(СбисИсключение);
			
		#КонецЕсли
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СбисИсключение_Представление_Сервер(Знач СбисИсключение)
	
	Возврат МодульОбъектаСервер().СбисИсключение_ВСтрокуСервер(СбисИсключение);
	
КонецФункции

&НаКлиенте
Функция СообщениеПоКодуОшибкиКлиент(СбисКодОшибки) Экспорт
	
	Возврат СообщениеПоКодуОшибкиВызовСервера(СбисКодОшибки);
	
КонецФункции

&НаСервере
Функция СообщениеПоКодуОшибкиВызовСервера(СбисКодОшибки)
	
	Возврат МодульОбъектаСервер().СбисИсключение_СообщениеПоКоду(СбисКодОшибки);
	
КонецФункции

