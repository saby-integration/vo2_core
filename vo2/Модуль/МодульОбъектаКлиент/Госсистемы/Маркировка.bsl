
// Функция - заполняет список доступных параметров выбытия кодов маркировки
// 
// Возвращаемое значение:
//  Массив - список параметров причин выбытия кодов маркировки
//  
&НаКлиенте 
Функция ПричиныВыводаИзОборота(ПараметрыДокумента = Неопределено, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш; 
	ТекущийРаздел = Кэш.Текущий.Раздел;
	
	Если ТекущийРаздел = "1" Тогда
		ПричиныВывода = ПричиныВыводаВходящихДокументов(ПараметрыДокумента, ДопПараметры);	
	Иначе
		ПричиныВывода = ПричиныВыводаИсходящихДокументов(ПараметрыДокумента, ДопПараметры);	
	КонецЕсли;
		
	Возврат ПричиныВывода;  
	
КонецФункции

&НаКлиенте
Функция ПричиныВыводаВходящихДокументов(ПараметрыДокумента, ДопПараметры)    
	
	ПричиныВывода = Новый Массив();
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Без вывода из оборота",Истина,"0"));
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Приобретение гос предприятием",Ложь,"1")); 
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Использование для собственных нужд",Ложь,"2"));  
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Безвозмездная передача",Ложь,"3"));   
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Передача комиссионеру/агенту",Ложь,"9"));
	ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Возврат комитенту/принципалу",Ложь,"10"));	
	
	Возврат ПричиныВывода;
	
КонецФункции

&НаКлиенте
Функция ПричиныВыводаИсходящихДокументов(ПараметрыДокумента, ДопПараметры)     
	
	Перем КодУчастника;
	
	ПричиныВывода = Новый Массив();
	
	Если НЕ ПараметрыДокумента = Неопределено
		И ПараметрыДокумента.Свойство("to_not_participant",КодУчастника) 
		И НЕ КодУчастника = Неопределено
		И НРЕГ(КодУчастника) = "true" Тогда	
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Приобретение гос предприятием",Ложь,"1")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Использование для собственных нужд",Истина,"2"));  
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Безвозмездная передача",Ложь,"3"));  
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Дистанционный способ продажи",Ложь,"4")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Продажа по образцам",Ложь,"11")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Производственные нужды покупателя",Ложь,"12"));  
	Иначе
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Без вывода из оборота",Истина,"0"));
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Приобретение гос предприятием",Ложь,"1")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Использование для собственных нужд",Ложь,"2"));  
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Безвозмездная передача",Ложь,"3"));
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Дистанционный способ продажи",Ложь,"4"));
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Передача комиссионеру/агенту",Ложь,"9"));
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Возврат комитенту/принципалу",Ложь,"10")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Продажа по образцам",Ложь,"11")); 
		ПричиныВывода.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Производственные нужды покупателя",Ложь,"12")); 
	КонецЕсли;
	
	Возврат ПричиныВывода; 
	
КонецФункции

// Функция - заполняет список доступных параметров участников оборота маркируемой продукции
// 
// Возвращаемое значение:
//  Массив - список параметров участников оборота маркируемой продукции
// 
&НаКлиенте
Функция ПараметрыУчастиковОборота() Экспорт
	ПараметрыУчастиков = Новый Массив(); 
	ПараметрыУчастиков.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Покупатель зарегистрирован в ГИС МТ",Истина,"false"));
	ПараметрыУчастиков.Добавить(Новый Структура("Причина,ПоУмолчанию,КодПричины","Покупатель не зарегистрирован в ГИС МТ",Ложь,"true")); 
	Возврат ПараметрыУчастиков; 
КонецФункции  

// Функция - возвращает список для получения складских параметров документа СБИС Онлайн
// 
// Возвращаемое значение:
//  Массив - список складских параметров
//
&НаКлиенте
Функция СписокСкладскихПараметров()  
	СписокПараметров = Новый Массив;
	СписокПараметров.Добавить("marking_shipment_reason");    
	СписокПараметров.Добавить("to_not_participant");
	СписокПараметров.Добавить("markingContractNumber");
	Возврат СписокПараметров;
КонецФункции 

//Функция возвращает складские параметры документа СБИС Онлайн, для вкладки Маркировка формы просмотра документа
//
// Параметры:
//  СоставПакета
//
//	ЗапрашиваемыеПараметры   - Структура, с массивом запрашиваемых параметров метода
//               
//  ДопПараметры   - Структура, Неопределено - Доп параметры
//
// Возвращаемое значение:
//   Структура
//
&НаКлиенте
Функция ПолучитьСкладскиеПараметрыДокумента(СоставПакета, ДопПараметры = Неопределено) Экспорт  
		
	ПараметрыДокументаСбис = ПрочитатьСкладскиеПараметрыДокумента(СоставПакета, ДопПараметры); 
	
	ИдентификаторГосконтракта =  ПолучитьИдентификаторГосконтракта(ПараметрыДокументаСбис);  
	УчастникиОборота =  ЗаполнитьУчастникОборота(ПараметрыДокументаСбис);  
	ПричиныВывода = ЗаполнитьСписокПричинВывода(ПараметрыДокументаСбис);
	
	СкладскиеПараметрыДокумента = Новый Структура;
		
	
	СкладскиеПараметрыДокумента.Вставить("ПричиныВыводаИзОборота",ПричиныВывода.СписокПричинВывода); 
	СкладскиеПараметрыДокумента.Вставить("ПараметрыУчастниковОборота",УчастникиОборота.СписокУчастников);
	СкладскиеПараметрыДокумента.Вставить("ОтправитьКодыМаркировки",УчастникиОборота.ОтправитьКодыМаркировки);
	СкладскиеПараметрыДокумента.Вставить("ИдентификаторГосконтракта",ИдентификаторГосконтракта);  
	СкладскиеПараметрыДокумента.Вставить("ПричинаВывода",ПричиныВывода.ПричинаВыводаПоУмолчанию); 
	СкладскиеПараметрыДокумента.Вставить("КодПричиныВывода",ПричиныВывода.КодПричиныВывода);
	СкладскиеПараметрыДокумента.Вставить("УчастникОборота",УчастникиОборота.УчастникОборотаПоУмолчанию); 
	СкладскиеПараметрыДокумента.Вставить("ПоказатьГосконтракт",ПричиныВывода.ПоказатьГосконтракт); 
	
	Возврат СкладскиеПараметрыДокумента;

КонецФункции  

// Функция возвращает результат работы метода ExtSysMarking.GetParams
//
// Параметры:
//  СоставПакета  - Структура - обрабатываемый пакет (документ)
//  ДопПараметры  - Структура - Набор полей, работа с которыми может расширить результат работы функции.
//
// Возвращаемое значение:
//   Структура   - Результат вызова. Код результата или ошибка
//
&НаКлиенте
Функция ПрочитатьСкладскиеПараметрыДокумента(СоставПакета, ДопПараметры = Неопределено) 
	
	Кэш = ГлавноеОкно.Кэш;  
	
	ЗапрашиваемыеПараметры = СписокСкладскихПараметров();

	ПараметрыВызова = Новый Структура;  
	ПараметрыВызова.Вставить("ИдДок",СоставПакета.Идентификатор);
	ПараметрыВызова.Вставить("paramsList",ЗапрашиваемыеПараметры);
	 
	ФлагОшибки = Ложь;
	РезультатВызова = ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.ExtSysMarking_GetParams(ПараметрыВызова, Новый Структура("Кэш", Кэш), ФлагОшибки);
	Если ФлагОшибки Тогда
		ВызватьСбисИсключение(РезультатВызова, "МодульОбъектаКлиент.ПрочитатьСкладскиеПараметрыДокумента");
	КонецЕсли;   
	
	Возврат РезультатВызова;
	
КонецФункции

// Функция, из полученных параметров документа СБИС, возвращает номер госконтракта
//
// Параметры:
//  СкладскиеПараметрыДокумента	 - Структура - Складские параметры документа СБИС
//
&НаКлиенте
 Функция ПолучитьИдентификаторГосконтракта(ПараметрыДокумента) 
	 
	Перем НомерГосконтракта; 
	 
	Если ПараметрыДокумента.Свойство("markingContractNumber",НомерГосконтракта) 
		И НЕ НомерГосконтракта = Неопределено Тогда 
		ИдентификаторГосконтракта = НомерГосконтракта;   
	Иначе
		ИдентификаторГосконтракта = "";
	КонецЕсли;
	
	Возврат ИдентификаторГосконтракта;
		
КонецФункции

// Функция возвращает список параметров участников оборота маркируемой продукции, для вкладки Маркировка, формы просмотра документа
//
// Параметры:
//  СкладскиеПараметрыДокумента	 - Массив - данные документа, полученные при вычитывании складских параметров документа СБИС Онлайн 
// 
&НаКлиенте
Функция ЗаполнитьУчастникОборота(ПараметрыДокумента) 
	
	Перем КодУчастника; 
	
	УчастникиОборота = Новый Структура;
	СписокУчастников = Новый Массив;
	
	МассивПараметровУчастиковОборота = ПараметрыУчастиковОборота();
	
	ОбновлятьПричину = Истина;
	Для Каждого ЭлМасс ИЗ МассивПараметровУчастиковОборота Цикл
		СписокУчастников.Добавить(ЭлМасс.Причина);  
		Если ПараметрыДокумента.Свойство("to_not_participant",КодУчастника) 
			И НЕ КодУчастника = Неопределено
			И ЭлМасс.КодПричины = НРЕГ(КодУчастника) Тогда
			УчастникОборота = ЭлМасс.Причина; 
			ОбновлятьПричину = Ложь;
		ИначеЕсли ЭлМасс.ПоУмолчанию И ОбновлятьПричину Тогда
			УчастникОборота = ЭлМасс.Причина;  
		Иначе
			//
		КонецЕсли; 
	КонецЦикла;	 
	
	Если НРЕГ(КодУчастника) = "true" Тогда
		ОтправитьКодыМаркировки = Истина; 
	Иначе
		ОтправитьКодыМаркировки = Ложь;
	КонецЕсли; 
	
	УчастникиОборота.Вставить("СписокУчастников",СписокУчастников);
	УчастникиОборота.Вставить("УчастникОборотаПоУмолчанию",УчастникОборота); 
	УчастникиОборота.Вставить("ОтправитьКодыМаркировки",ОтправитьКодыМаркировки);
	
	Возврат УчастникиОборота;	
		
КонецФункции 

// Функция возвращает список причин выдода из оборота, для вкладки Маркировка, формы просмотра документа
//
// Параметры:
//  СкладскиеПараметрыДокумента	 - Массив - данные документа, полученные при вычитывании складских параметров документа СБИС Онлайн 
// 
&НаКлиенте
Функция ЗаполнитьСписокПричинВывода(ПараметрыДокумента,ДопПараметры = Неопределено) 
	
	Перем КодПричиныВывода; 
	
	Кэш = ГлавноеОкно.Кэш;
	
	ПричиныВывода = Новый Структура;
	СписокПричинВывода = Новый Массив; 
	
	Если НЕ ПараметрыДокумента = Неопределено
		И ПараметрыДокумента.Свойство("marking_shipment_reason",КодПричиныВывода) 
		И КодПричиныВывода = "1" Тогда
		ПоказатьГосконтракт = Истина;
	Иначе
		ПоказатьГосконтракт = Ложь;
	КонецЕсли;

	МассивПричинВыводаИзОборота = ПричиныВыводаИзОборота(ПараметрыДокумента);
	
	Индекс = Кэш.ОбщиеФункции.ВыбратьДанныеСертификата(МассивПричинВыводаИзОборота,КодПричиныВывода,"КодПричины");  
	
	Если Индекс = Неопределено Тогда
		Индекс = Кэш.ОбщиеФункции.ВыбратьДанныеСертификата(МассивПричинВыводаИзОборота,Истина,"ПоУмолчанию"); 
		//Тут подумать над установкой причины, т.к. она не совпадает с типом участника оборота, завязавшись на КодПричиныВывода, раз она там есть
	КонецЕсли;
	
	ПричинаВывода = МассивПричинВыводаИзОборота[Индекс].Причина;
	КодВывода = МассивПричинВыводаИзОборота[Индекс].КодПричины;

	Для Каждого ЭлМасс ИЗ МассивПричинВыводаИзОборота Цикл    
		СписокПричинВывода.Добавить(ЭлМасс.Причина);  
	КонецЦикла;	 
					
   	ПричиныВывода.Вставить("СписокПричинВывода",СписокПричинВывода);
	ПричиныВывода.Вставить("ПричинаВыводаПоУмолчанию",ПричинаВывода);
	ПричиныВывода.Вставить("ПоказатьГосконтракт",ПоказатьГосконтракт);
	ПричиныВывода.Вставить("КодПричиныВывода",КодВывода);
	
	Возврат ПричиныВывода;
	
КонецФункции

