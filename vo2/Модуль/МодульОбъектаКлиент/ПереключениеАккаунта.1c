
&НаКлиенте
Функция СбисПолучитьТикетДляАккаунта(Кэш, ПараметрыПолученияТикета, Отказ) Экспорт

	ИдДокумента = ПараметрыПолученияТикета.ИдДокумента;
	ИдАккаунта = ПараметрыПолученияТикета.ИдАккаунта;

	СтарыйИдСессии = Кэш.Парам.ИдентификаторСессии;

	Попытка		
		ЗаписанныеСессии = Кэш.СБИС.Сессии;
		КлючПользователя =  Кэш.СБИС.ПараметрыИнтеграции.КодСервиса+"_"+Кэш.СБИС.ПараметрыИнтеграции.ИдПользователя;
		СессииПользователя = ЗаписанныеСессии.Получить(КлючПользователя);
		СессияПользователяПоАккаунту = СессииПользователя.accounts.Получить(ИдАккаунта); 
		Если СессияПользователяПоАккаунту = Неопределено Тогда
			СписокАккаунтов = СбисПолучитьСписокАккаунтов(Кэш, Новый Структура(), Ложь);
			АккаунтПользователя = Ложь;
			Для каждого Аккаунт Из СписокАккаунтов Цикл
				Если Аккаунт.НомерАккаунта = ИдАккаунта Тогда
					АккаунтПользователя = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;

			Если Не АккаунтПользователя Тогда
				ВызватьСбисИсключение("Аккаунт документа не подключен для данного пользователя", "МодульОбъектаКлиент.СбисПолучитьТикетДляАккаунта");
			КонецЕсли; 

			СессияПользователяПоАккаунту = СбисПереключитьАккаунт(Кэш, Новый Структура("НомерАккаунта", ИдАккаунта), Новый Структура(), Ложь); 
			Если СессияПользователяПоАккаунту = Неопределено Тогда 
				ВызватьСбисИсключение("Не удалось получить сессию для аккаунта документа", "МодульОбъектаКлиент.СбисПолучитьТикетДляАккаунта"); 
			КонецЕсли;
			Кэш.Парам.ИдентификаторСессии = СессияПользователяПоАккаунту;
		Иначе
			Кэш.Парам.ИдентификаторСессии = СессияПользователяПоАккаунту;
			СессияДействительна = Кэш.Интеграция.сбисСессияДействительна(Кэш) = 1;
			Если Не СессияДействительна Тогда
				СессияПользователяПоАккаунту = СбисПереключитьАккаунт(Кэш, Новый Структура("НомерАккаунта", ИдАккаунта), Новый Структура(), Ложь); 
				Если СессияПользователяПоАккаунту = Неопределено Тогда 
					ВызватьСбисИсключение("Не удалось получить сессию для аккаунта документа", "МодульОбъектаКлиент.СбисПолучитьТикетДляАккаунта");
				КонецЕсли;
				Кэш.Парам.ИдентификаторСессии = СессияПользователяПоАккаунту;
			КонецЕсли;
		КонецЕсли;	

		Тикет = Кэш.Интеграция.ПолучитьТикетДляТекущегоПользователя(Кэш);

		//Кэш.Парам.ИдентиФикаторСессии = СтарыйИдСессии;
	Исключение
		Кэш.Парам.ИдентиФикаторСессии = СтарыйИдСессии;
		ИнфоОбОбшибке = ИнформацияОбОшибке();
		ВызватьСбисИсключение(ИнфоОбОбшибке, "МодульОбъектаКлиент.СбисПолучитьТикетДляАккаунта");	 
	КонецПопытки;
	Возврат Новый Структура("Тикет, СтарыйИдСессии", Тикет, СтарыйИдСессии);
КонецФункции	

&НаКлиенте
Процедура КомандаОткрытьДокументОнлайн (ОписаниеДокумента, ДопПараметры) Экспорт
	Кэш = ДопПараметры.Кэш;
	Результат = Новый Структура("Ссылка, Пакет", "");
	Попытка
		ПараметрыДокумента = Кэш.Интеграция.СБИС_ПолучитьПараметрыПакетаДляОткрытияОнлайн(ОписаниеДокумента.ПараметрыПакетаСБИС, Новый Структура("Кэш", Кэш));
		Если ЗначениеЗаполнено(ПараметрыДокумента.ИдДокумента) Тогда
			ДопПарам = Новый Структура("СообщатьПриОшибке, ВернутьОшибку", Ложь, Истина);
			СоставПакета = Кэш.Интеграция.ПрочитатьДокумент(Кэш, ПараметрыДокумента.ИдДокумента, ДопПарам);
			Если типЗнч(СоставПакета)= тип("Структура") И СоставПакета.Свойство("СсылкаДляНашаОрганизация") Тогда // alo
				Результат.Ссылка = СоставПакета.СсылкаДляНашаОрганизация;			
				Если ЗначениеЗаполнено(Результат.Ссылка) И Не ПараметрыДокумента.Тикет = "" Тогда
					Результат.Ссылка = Результат.Ссылка + "&ticket=" + ПараметрыДокумента.Тикет + "&nocheck=1";
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли Кэш.Парам.СпособОбмена <> 1 И НЕ Кэш.Парам.СоздаватьЧерновик Тогда //1189641556
			// загружаем пакет в кабинет без отправки << alo Меркурий 
			лРежимДиалога = РежимДиалогаВопрос.ДаНет;
			лТекстДиалога = "Документ не сопоставлен со СБИС. Создать черновик?";
			сбисПараметрыСоздания= Новый Структура("Кэш, ОписаниеДокумента, Результат, ОбработчикРезультата", Кэш, ОписаниеДокумента, Результат, ДопПараметры.ОбработчикРезультата);
			ОбработчикДиалога = НовыйСбисОписаниеОповещения("СоздатьЧерновик", Кэш.ГлавноеОкно.МодульОбъектаКлиент(), сбисПараметрыСоздания);
			СбисПоказатьВопрос(ОбработчикДиалога, лТекстДиалога, лРежимДиалога, 0, КодВозвратаДиалога.Да);
			Возврат;
			// alo Меркурий >>
		//1189641556
		ИначеЕсли Кэш.Парам.СпособОбмена <> 1 И Кэш.Парам.СоздаватьЧерновик Тогда 
			ДопПараметры.ОбработчикРезультата.ДополнительныеПараметры.Вставить("СоздатьЧерновик",Истина); //1190434889
			сбисПараметрыСоздания= Новый Структура("Кэш, ОписаниеДокумента, Результат, ОбработчикРезультата", Кэш, ОписаниеДокумента, Результат, ДопПараметры.ОбработчикРезультата);
			СоздатьЧерновик(КодВозвратаДиалога.Да, СбисПараметрыСоздания);   
			Возврат;
		КонецЕсли;
		Если ПараметрыДокумента.Свойство("СтарыйИдСессии") Тогда
			Кэш.Парам.ИдентиФикаторСессии = ПараметрыДокумента.СтарыйИдСессии;
		КонецЕсли;	
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		Результат = Кэш.ОбщиеФункции.сбисИсключение(ИнфОбОшибке, "МодульОбъектаКлиент.ОткрытьДокументОнлайн");
		ДопПараметры.ОбработчикРезультата.ДополнительныеПараметры.Отказ = Истина;
	КонецПопытки;
	ВыполнитьСбисОписаниеОповещения(Результат, ДопПараметры.ОбработчикРезультата);

КонецПроцедуры	

&НаКлиенте
Процедура СоздатьЧерновик(Ответ, СбисПараметрыСоздания) Экспорт 
	Кэш = сбисПараметрыСоздания.Кэш;
	Попытка
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			ВыполнитьСбисОписаниеОповещения("Отменено пользователем", сбисПараметрыСоздания.ОбработчикРезультата);
			Возврат;
		КонецЕсли;
		Пакет = сбисПараметрыСоздания.ОписаниеДокумента.Пакет;
		Результат = сбисПараметрыСоздания.Результат;
		ИниТекущегоРеестра = сбисПараметрыСоздания.Кэш.Текущий.ТипДок;
		ЗначениеИниТекущегоРеестра = сбисПараметрыСоздания.Кэш.ФормаНастроек.Ини(сбисПараметрыСоздания.Кэш, ИниТекущегоРеестра);
		Если  ЗначениеИниТекущегоРеестра.свойство("НеЗапускатьВДокументооборот") тогда
			СохранитьНеЗапускатьВДокументооборот=ЗначениеИниТекущегоРеестра.НеЗапускатьВДокументооборот;
		Иначе 
			СохранитьНеЗапускатьВДокументооборот=неопределено;
		КонецЕсли;
		ЗначениеИниТекущегоРеестра.Вставить("НеЗапускатьВДокументооборот", Новый Структура("Значение,РассчитанноеЗначение", Истина, Истина));
		СписокОтмеченныхДокументов = Новый СписокЗначений;
		СписокОтмеченныхДокументов.Добавить(сбисПараметрыСоздания.Кэш.ТаблДок.ТекущиеДанные);
		фрмОД = ГлавноеОкно.сбисНайтиФормуФункции("ОтправитьДокументы","Документ_"+сбисПараметрыСоздания.Кэш.Текущий.ТипДок,"Документ_Шаблон",сбисПараметрыСоздания.Кэш);
		фрмОД.ОтправитьДокументы(Кэш,СписокОтмеченныхДокументов);
		Если  СохранитьНеЗапускатьВДокументооборот = Неопределено Тогда
			ЗначениеИниТекущегоРеестра.удалить("НеЗапускатьВДокументооборот");
		Иначе
			ЗначениеИниТекущегоРеестра.НеЗапускатьВДокументооборот = СохранитьНеЗапускатьВДокументооборот;
		КонецЕсли;
		Если сбисПараметрыСоздания.Кэш.РезультатОтправки.Отправлено Тогда
			фрм = ГлавноеОкно.СбисНайтиФормуФункции("СбисПрочитатьСведенияОПакете", сбисПараметрыСоздания.Кэш.ФормаРаботыСоСтатусами, "");
			ИдДокументаАккаунта	= фрм.СбисПрочитатьСведенияОПакете(Новый Структура("ДокументСсылка", Пакет), Кэш);
			Если ЗначениеЗаполнено(ИдДокументаАккаунта.ИдДокумента) Тогда
				СоставПакета		= сбисПараметрыСоздания.Кэш.Интеграция.ПрочитатьДокумент(сбисПараметрыСоздания.Кэш, ИдДокументаАккаунта.ИдДокумента);
				ПараметрыДокумента	= Кэш.Интеграция.СБИС_ПолучитьПараметрыПакетаДляОткрытияОнлайн(ИдДокументаАккаунта, Новый Структура("Кэш", Кэш));
				Если ТипЗнч(СоставПакета)= Тип("Структура") И СоставПакета.Свойство("СсылкаДляНашаОрганизация") Тогда
					Результат.Ссылка = СоставПакета.СсылкаДляНашаОрганизация;
					Если ЗначениеЗаполнено(Результат.Ссылка) И Не ПараметрыДокумента.Тикет = "" Тогда
						Результат.Ссылка = Результат.Ссылка + "&ticket=" + ПараметрыДокумента.Тикет + "&nocheck=1";
					КонецЕсли;
				КонецЕсли;
				Если ПараметрыДокумента.Свойство("СтарыйИдСессии") Тогда
					Кэш.Парам.ИдентиФикаторСессии = ПараметрыДокумента.СтарыйИдСессии;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Исключение
		ИнфОбОшибке = ИнформацияОбОшибке();
		Результат = НовыйСбисИсключение(ИнфОбОшибке, "МодульОбъектаКлиент.СоздатьЧерновик");
		СбисПараметрыСоздания.ОбработчикРезультата.ДополнительныеПараметры.Отказ = Истина;
	КонецПопытки;
	ВыполнитьСбисОписаниеОповещения(Результат, СбисПараметрыСоздания.ОбработчикРезультата);

КонецПроцедуры

