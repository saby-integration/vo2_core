
&НаКлиенте
Функция ПрименятьФункционалНовыеКонтрагенты(Данные, ДопПараметры = Неопределено) Экспорт
	
	ФорматыДокументов = ПолучитьЗначениеПараметраСбис("ДокументыДляНовыхКонтрагентов");
	
	Если Данные.Свойство("Вложения")
		И ТипЗнч(Данные.Вложения) = Тип("Структура") Тогда
		
		МассивВложений = Новый Массив;
		МассивВложений.Добавить(Данные.Вложения);
	ИначеЕсли Данные.Свойство("Вложения")
		И ТипЗнч(Данные.Вложения) = Тип("Массив") Тогда
		
		МассивВложений = Данные.Вложения;
	ИначеЕсли Данные.Свойство("СоставПакета")
		И Данные.СоставПакета.Свойство("Вложение") Тогда
		
		МассивВложений = Данные.СоставПакета.Вложение;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Ложь;
	Для Каждого Вложение Из МассивВложений Цикл
		
		Для Каждого ДостуныйФормат Из ФорматыДокументов Цикл 
			
			ПредставлениеТипа = ?(Вложение.Тип = Неопределено, "", Вложение.Тип)
				+ "_" + ?(Вложение.ВерсияФормата = Неопределено, "", Вложение.ВерсияФормата);
			ФорматВложения = ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов.СбисЗаменитьНедопустимыеСимволы(ПредставлениеТипа);
			Если ДостуныйФормат = ФорматВложения Тогда
				Результат = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Результат Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПрименятьФункционалНовыеКонтрагенты()

// Вызывает поиск массива сторон по их данным
//
// Параметры:
//  ДанныеДляПоиска  - Массив - Тип элементов - Структура, содержащие 
//                 ИНН, КПП, Тип, ВидИД (0 - 1С, 1 - СБИС), КодФилиала, GLN
//  ДопПараметры  - Неопределено - Прозапас
//
// Возвращаемое значение:
//   Массив   - Объекты маппинга
//
&НаКлиенте
Функция НайтиСтороныНаМаппинге(ДанныеДляПоиска, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш;
	
	Отказ = Ложь;
	ConnectionId = ПолучитьИдКоннекшена(Отказ);
	Если Отказ Тогда  
		СбисИсключение = НовыйСбисИсключение(ConnectionId, "МодульОбъектаКлиента.НайтиСтороныНаМаппинге");
		СбисСтатистика_СформироватьИЗаписать(Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение));
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыПолучения = Новый Структура;
	
	ПараметрыПолучения.Вставить("ConnectionId", ConnectionId);
	ПараметрыПолучения.Вставить("IdType", ДопПараметры.ВидИД);
	ПараметрыПолучения.Вставить("Filter", Новый Массив);
	
	Для каждого Сторона Из ДанныеДляПоиска Цикл
		ДанныеСтороны = Новый Структура;
		
		ДанныеСтороны.Вставить("Type", Сторона.Тип);
		
		СведенияОСтороне = ?(ТипЗнч(Сторона) = Тип("КлючИЗначение"), Сторона.Значение, Сторона);
		Если ТипЗнч(СведенияОСтороне) <> Тип("Структура") Тогда
			Продолжить;
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("ИНН") Тогда
			ДанныеСтороны.Вставить("Key1_1", СведенияОСтороне.ИНН);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("КПП") Тогда
			ДанныеСтороны.Вставить("Key1_2", СведенияОСтороне.КПП);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("КодФилиала") Тогда
			ДанныеСтороны.Вставить("Key1_3", СведенияОСтороне.КодФилиала);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("GLN") Тогда
			ДанныеСтороны.Вставить("Key2", СведенияОСтороне.GLN);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("Тип1С") Тогда
			ДанныеСтороны.Вставить("ClientType", СведенияОСтороне.Тип1С);
		КонецЕсли;
		
		ПараметрыПолучения.Filter.Добавить(ДанныеСтороны);
	КонецЦикла;
	
	Отказ = Ложь;
	СопоставленныеДанныеСторон = Кэш.Интеграция.СБИС_ПолучитьСопоставлениеСторон(Кэш, ПараметрыПолучения, , Отказ);
	
	Если Отказ Тогда   
		ВызватьСбисИсключение(СопоставленныеДанныеСторон, Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ПолучитьСопоставлениеСторон");
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат СопоставленныеДанныеСторон;

КонецФункции // НайтиМаппингОбъекты()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция НайтиОбновитьСторонуМаппинга(Данные, ДопПараметры) Экспорт 
    
	Кэш = ГлавноеОкно.Кэш;
	ИниКонфигурации = Кэш.ини.Конфигурация;
	Сторона = Данные.СведенияСтороны;
	ОбъектМаппинга = Данные.ОбъектМаппинга;
	
	Отказ = Ложь;
	ConnectionId = ПолучитьИдКоннекшена(Отказ);
	Если Отказ Тогда                                                                                              
		СбисИсключение = НовыйСбисИсключение(ConnectionId, "МодульОбъектаКлиент.НайтиОбновитьСторонуМаппинга");
		СбисСтатистика_СформироватьИЗаписать(Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение));
		Возврат Ложь;
	КонецЕсли;
	
	Фильтр = Новый Структура;
	
	Фильтр.Вставить("ConnectionId", ConnectionId);
	Фильтр.Вставить("IdType", ?(ДопПараметры.ВидОбъекта = "Client", 0, 1));
	Фильтр.Вставить("Id", ОбъектМаппинга[?(ДопПараметры.ВидОбъекта = "Client", "Client", "Sbis") + "Id"]);
	
	ДанныеСтороны = Новый Структура;
	
	Если Сторона.Свойство("Тип") Тогда
		ТипОбъекта = Сторона.Тип;
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "Ссылка."))  Тогда
		ТипОбъекта = "НашаОрганизация";                	
	Иначе
		ТипОбъекта = "Контрагент";
	КонецЕсли;              
	
	Если  ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "Ссылка.")) Тогда 
		Тип1С = СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "и.");
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Контрагенты.Значение, ".", "Ссылка.")) Тогда 
		Тип1С = СтрЗаменить(ИниКонфигурации.Контрагенты.Значение, ".", "и.");
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Партнеры.Значение, ".", "Ссылка.")) Тогда
		Тип1С = СтрЗаменить(ИниКонфигурации.Партнеры.Значение, ".", "и.");
	КонецЕсли;	
		
	Фильтр.Вставить("Type", ТипОбъекта);
	
	Если ТипЗнч(Сторона) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Сторона.Свойство("ИНН") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_1", Сторона.ИНН);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Если Сторона.Свойство("КПП") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_2", Сторона.КПП);
	КонецЕсли;
	
	Если Сторона.Свойство("КодФилиала") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_3", Сторона.КодФилиала);
	КонецЕсли;
	
	Если Сторона.Свойство("GLN") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_2", Сторона.GLN);
	КонецЕсли;
		
	Если Сторона.Свойство("Тип1С") Тогда
		ДанныеСтороны.Вставить("ClientType", Сторона.Тип1С);
	КонецЕсли;
	
	Если ДопПараметры.ВидОбъекта = "Client" Тогда 
		ДанныеСтороны.Вставить("ClientId", Строка(Сторона.Ссылка.УникальныйИдентификатор()));
		ДанныеСтороны.Вставить("ClientName", Строка(Сторона.Ссылка));
		ДанныеСтороны.Вставить("ClientType", Тип1С); 
	Иначе
		ДанныеСтороны.Вставить("SbisId", Сторона.Id);
		ДанныеСтороны.Вставить("SbisName", Сторона.Name);
	КонецЕсли;
	
	ДанныеСтороны.Вставить("Status", 1);
	ДанныеСтороны.Вставить("Status_msg", "Сопоставлено");
	
	Отказ = Ложь;
	СопоставленныеДанныеСторон = Кэш.Интеграция.ОбновитьЗаписьСопоставления(Кэш, Фильтр, ДанныеСтороны, Отказ);
	
	Если Отказ Тогда   
		Кэш.СБИС.МодульОбъектаКлиент.ВызватьСбисИсключение(СопоставленныеДанныеСторон, Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ПолучитьСопоставлениеСторон");
		Возврат Ложь;
	КонецЕсли;

КонецФункции // НайтиОбновитьСторонуМаппинга()


&НаСервереБезКонтекста
Функция ПолучитьУчастникаПоИд(Идентификатор, Тип)
	Возврат Справочники[Сред(Тип, Найти(Тип, ".") + 1)].ПолучитьСсылку(Новый УникальныйИдентификатор(Идентификатор));
КонецФункции

// Сохраняет сопоставление сторона в маппинге
//
// Параметры:
//  ПараметрыФункции  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  ДопПараметры  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Функция Маппинг_ОбновитьСторону1С(СведенияМаппинга, ДопПараметры = Неопределено) Экспорт 

	Кэш = ГлавноеОкно.Кэш; 
	Отказ = Ложь;
    
	ПараметрыПолучения = Новый Массив;  
	ТипыДанныхСторон = ТипыСторонДляМаппинга();
		
	ПараметрыПолучения.Добавить(Новый Структура);   
	Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ПараметрыПолучения[0], СведенияМаппинга);
	ПараметрыПолучения[0].Вставить("Тип", СведенияМаппинга.Тип);
	ПараметрыПолучения[0].Вставить("Тип1С", ТипыДанныхСторон[СведенияМаппинга.ТипДанныхСтороны]);	
	
	СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
	
	Если Не СопоставленныеДанныеСторон = Ложь
		И СопоставленныеДанныеСторон.Количество() Тогда 
		
		Для Каждого СопоставленнаяСторона Из СопоставленныеДанныеСторон Цикл
			Если Не ЗначениеЗаполнено(СопоставленнаяСторона.ClientType) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(СведенияМаппинга.Ссылка) = Тип(СтрЗаменить(СопоставленнаяСторона.ClientType, "и.", "Ссылка.")) Тогда
				СтрокаМаппинга = СопоставленнаяСторона;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	СтруктураОбъекта1С = Кэш.ОбщиеФункции.СбисПолучитьСтруктуруОбъекта1С(СведенияМаппинга.Ссылка, Новый Структура("ИмяСБИС", СведенияМаппинга.Тип), Ложь);
	       
	
	СведенияОбъектаСБИС = Новый Структура;
	Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(СведенияОбъектаСБИС, СведенияМаппинга);  
	
	СБИС_UUID = "";
	
	Если ТипЗнч(СтрокаМаппинга) = Тип("Структура")
		И СтрокаМаппинга.Свойство("UUID") Тогда
		
		СБИС_UUID = СтрокаМаппинга.UUID;
	КонецЕсли;
	
	Если ТипЗнч(СтрокаМаппинга) = Тип("Структура")
		И СтрокаМаппинга.Свойство("SbisId")
		И ЗначениеЗаполнено(СтрокаМаппинга.SbisId) Тогда
		
		СведенияОбъектаСБИС.Вставить("ИдСБИС", СтрокаМаппинга.SbisId);
		
	Иначе  
		
		ОбъектAPI = ПолучитьAPIОбъектСтороны(СведенияМаппинга.Тип, СведенияМаппинга);
		
		Если Не (ТипЗнч(ОбъектAPI) = Тип("Массив")
			И ОбъектAPI.Количество()) Тогда 
			
			Возврат Ложь;
		КонецЕсли;
		СведенияОбъектаСБИС.Вставить("ИдСБИС", ОбъектAPI[0].ИдСБИС);
	
	КонецЕсли;         
	
	СведенияОбъектаСБИС.Вставить("Название", ГлавноеОкно.Кэш.ОбщиеФункции.сбисНазваниеСтороны(ДопПараметры.СторонаСБИС));
	
	РезультатОбновления = Маппинг_ОбновитьИзДанныхСтороны(СведенияМаппинга.Тип, Новый Структура("СБИС, ИС, УИД, Статус", СведенияОбъектаСБИС, СтруктураОбъекта1С, СБИС_UUID, Новый Структура("Ид, Сообщение", 1, "Сопоставлено")));
	
	Если ТипЗнч(РезультатОбновления) = Тип("Число") И СведенияОбъектаСБИС.Тип = "Контрагент" Тогда 
		
		Если СведенияМаппинга.ТипДанныхСтороны = "ДанныеКонтрагента"
			Или ТипыДанныхСторон.ДанныеГрузополучателя = ТипыДанныхСторон.ДанныеКонтрагента Тогда 
			
			Действие = "Контрагент сопоставлен";
			
		ИначеЕсли СведенияМаппинга.ТипДанныхСтороны = "ДанныеГрузополучателя" Тогда 
			
			Действие = "Партнер сопоставлен";
			
		Иначе 
			
			Возврат Неопределено;
			
		КонецЕсли;
		
		СоставСтатистики = Новый Структура;
		СоставСтатистики.Вставить("Контекст", "Загрузка заказа");
		СоставСтатистики.Вставить("Действие", Действие);
		
		ПараметрыСтатистики = Новый Структура("Действие, Сообщения", "ПрикладнаяСтатистика", Новый Массив);
		ПараметрыСтатистики.Сообщения.Добавить(СоставСтатистики);
		
		Попытка
			
			СбисСтатистика_СформироватьИЗаписать(ПараметрыСтатистики);
			
		
		Исключение
			
			СообщитьСбисИсключение(ИнформацияОбОшибке(), "ПолучитьПротоколПроверкиВложения");     
			
		КонецПопытки;
	
	КонецЕсли;

КонецФункции // Маппинг_ОбновитьСторону1С()

// Возвращает результат метода MappingObject.List
//
// Параметры:
//  ПараметрыСписка  - Структура - Параметры маппинга:
//					Тип - Тип MappingObject
//					ФильтрГлавноеОкно - Параметры фильра с главного окна
//  ДопПараметры  - Структура, Неопределено - Дополнительные параметры
//                 (ДопПоля - получение дополнительынх полей)
//
// Возвращаемое значение:
//   Массив   - Список маппинг объектов
//
&НаКлиенте
Функция ПолучитьСписокМаппинга(ПараметрыСписка, ДопПараметры = Неопределено) Экспорт 

	Перем ДопПоля;
	
	Кэш = ГлавноеОкно.Кэш;        
	Отказ = Ложь;
	ConnectionId = ПолучитьИдКоннекшена(Отказ);
	Если Отказ Тогда                                                                                              
		СбисИсключение = НовыйСбисИсключение(ConnectionId, "МодульОбъектаКлиент.ПолучитьСписокМаппинга");
		СбисСтатистика_СформироватьИЗаписать(Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение));
        СписокМаппинга = Новый Структура("Данные, Навигация", Новый Массив, Новый Структура);
        СписокМаппинга.Навигация.Вставить("ЕстьЕще", Ложь);
		Возврат СписокМаппинга;
	КонецЕсли;
	
	Фильтр = Новый Структура;       
	Фильтр.Вставить("ConnectionId",	ConnectionId);
	Фильтр.Вставить("SettingId",	ПараметрыСписка.Тип);  
	Если ЗначениеЗаполнено(ПараметрыСписка.ФильтрГлавноеОкно.ФильтрРодитель) Тогда
		Фильтр.Вставить("ClientParentUid", ПараметрыСписка.ФильтрГлавноеОкно.ФильтрРодитель);
	КонецЕсли; 
	
	Навигация = Новый Структура;
	Навигация.Вставить("PageSize",		ПараметрыСписка.ФильтрГлавноеОкно.ЗаписейНаСтранице);
	Навигация.Вставить("Page",	ПараметрыСписка.ФильтрГлавноеОкно.ФильтрСтраница); 
	
	Если	ТипЗнч(ДопПараметры) = Тип("Структура")
		И	ДопПараметры.Свойство("ДопПоля") Тогда
		
		ДопПоля = ДопПараметры.ДопПоля;
	КонецЕсли;
	
	Отказ = Ложь;
	СписокМаппинга = Кэш.Интеграция.MappingObject_List(Кэш, ДопПоля, Фильтр, Навигация, Отказ);
	
	Если Отказ Тогда
        СписокМаппинга = Новый Структура("Данные, Навигация", Новый Массив, Новый Структура);
        СписокМаппинга.Навигация.Вставить("ЕстьЕще", Ложь);
	КонецЕсли;
	
	Возврат СписокМаппинга;

КонецФункции // ПолучитьСписокМаппинга()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ОбогатитьОбъектМаппинга(СтруктураОбъекта, СторонаСБИС)
	
	СведенияОСтороне = Неопределено;
	Если Не СторонаСБИС.Свойство("СвЮЛ", СведенияОСтороне) Тогда 
		СведенияОСтороне = СторонаСБИС.СвФЛ;
	КонецЕсли;
	
	СтруктураОбъекта.ИНН = СведенияОСтороне.ИНН;
	СтруктураОбъекта.Название = ГлавноеОкно.Кэш.ОбщиеФункции.сбисНазваниеСтороны(СторонаСБИС);
	
	Если СведенияОСтороне.Свойство("КПП") Тогда  
		СтруктураОбъекта.Вставить("КПП", СведенияОСтороне.КПП);
	Иначе
		СтруктураОбъекта.Вставить("КПП", "");
	КонецЕсли; 
	
	Если СторонаСБИС.Свойство("КодФилиала") Тогда  
		СтруктураОбъекта.Вставить("КодФилиала", СторонаСБИС.КодФилиала);
	Иначе
		СтруктураОбъекта.Вставить("КодФилиала", "");
	КонецЕсли;

КонецПроцедуры // ОбогатитьОбъектМаппинга()

&НаКлиенте 
Функция ПолучитьТип1СДляМаппинга(ИниКонфигурации, ИмяУзла)
	
	Если ИниКонфигурации.Свойство(ИмяУзла) Тогда
		ЗначениеУзла = СтрЗаменить(ИниКонфигурации[ИмяУзла].Значение, """", "");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		Если Лев(ЗначениеУзла, 1) = "[" Тогда
			Возврат ПолучитьТипМетаданных(ИниКонфигурации,	Сред(ЗначениеУзла, 2, Найти(ЗначениеУзла, "]") - 2));
				 
		ИначеЕсли	ТипЗнч(ЗначениеУзла) = Тип("Строка")
			И		Найти(ЗначениеУзла, ".") Тогда 
			      
			Если Лев(ЗначениеУзла, 10) = "Справочник" Тогда                      
				Возврат "Справочники." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			ИначеЕсли Лев(ЗначениеУзла, 8) = "Документ" Тогда
				Возврат "Документы." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			ИначеЕсли Лев(ЗначениеУзла, 23) = "ПланыВидовХарактеристик" Тогда
				Возврат "ПланыВидовХарактеристик." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			КонецЕсли;
				 
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Возврат Неопределено;        
	
КонецФункции

&НаКлиенте
Функция ТипыСторонИзИниДляМаппинга(ИниКонфигурации)
	
	ОписаниеТипов = Новый Структура;
	ОписаниеТипов.Вставить("Организации",	ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Организации"));
	ОписаниеТипов.Вставить("Контрагенты",	ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Контрагенты"));
	ОписаниеТипов.Вставить("Партнеры",		ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Партнеры"));
	
	Возврат ОписаниеТипов;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ТипыСторонДляМаппинга()

	ОписаниеКонфигурации = ГлавноеОкно.Кэш.Ини.Конфигурация;
	
	ОписаниеТипов = ТипыСторонИзИниДляМаппинга(ОписаниеКонфигурации);
	
	ТипыСторон = Новый Структура;
	ТипыСторон.Вставить("ДанныеОрганизации", ОписаниеТипов.Организации);
	ТипыСторон.Вставить("ДанныеКонтрагента", ОписаниеТипов.Контрагенты);
	
	ТипГрузополучателя = ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	
	Если ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Контрагенты);
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Партнеры);
		
	Иначе 
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", Неопределено);
		
	КонецЕсли;
	
	Возврат ТипыСторон;

КонецФункции // ТипыСторонДляМаппинга()

&НаКлиенте
Функция ПолучитьAPIОбъектСтороны(ТипAPIОбъекта, ДанныеСтороны) Экспорт 
	
	Filter = Новый Структура;
	
	Filter.Вставить("Ключ1_1", ?(ДанныеСтороны.Свойство("ИНН") И ЗначениеЗаполнено(ДанныеСтороны.ИНН), ДанныеСтороны.ИНН, Неопределено));
	Filter.Вставить("Ключ1_2", ?(ДанныеСтороны.Свойство("КПП") И ЗначениеЗаполнено(ДанныеСтороны.КПП), ДанныеСтороны.КПП, Неопределено));
	Filter.Вставить("Ключ1_3", ?(ДанныеСтороны.Свойство("КодФилиала") И ЗначениеЗаполнено(ДанныеСтороны.КодФилиала), ДанныеСтороны.КодФилиала, Неопределено));
	
	ПараметрыМетода = Новый Структура("Type, Filter", ТипAPIОбъекта, Filter);
	Возврат ГлавноеОкно.Кэш.Интеграция.API3_FindSbisObject(ГлавноеОкно.Кэш, ПараметрыМетода, Новый Структура);
	
КонецФункции

&НаКлиенте
Функция Маппинг_ОбновитьИзДанныхСтороны(ТипAPIОбъекта, ДанныеСтороны) Экспорт 
	
	Отказ = Ложь;
	ConnectionId = ПолучитьИдКоннекшена(Отказ);                     
	Если Отказ Тогда
		СбисИсключение = НовыйСбисИсключение(ConnectionId, "МодульОбъектаКлиента.Маппинг_ОбновитьИзДанныхСтороны");
		СбисСтатистика_СформироватьИЗаписать(Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение));
		Возврат Неопределено;
	КонецЕсли;
	
	param = Новый Структура("ConnectionId, Type", ConnectionId, ТипAPIОбъекта);
	
	Если ДанныеСтороны.Свойство("ИС") Тогда
		
		Если ДанныеСтороны.ИС.Свойство("ИдИС") Тогда
		
			param.Вставить("ClientId", ДанныеСтороны.ИС.ИдИС);
			
		КонецЕсли;
		
		Если ДанныеСтороны.ИС.Свойство("ИмяИС") Тогда
		
			param.Вставить("ClientType", ДанныеСтороны.ИС.ИмяИС);
			
		КонецЕсли;
		
		Если ДанныеСтороны.ИС.Свойство("Название") Тогда
		
			param.Вставить("ClientName", ДанныеСтороны.ИС.Название);
			
		КонецЕсли;
		
		Если ДанныеСтороны.ИС.Свойство("ИНН") Тогда
		
			param.Вставить("ClientParam_1_1", ДанныеСтороны.ИС.ИНН);
			
		КонецЕсли;
		
		Если ДанныеСтороны.ИС.Свойство("КПП") Тогда
		
			param.Вставить("ClientParam_1_2", ДанныеСтороны.ИС.КПП);
			
		КонецЕсли;
		
		Если ДанныеСтороны.ИС.Свойство("КодФилиала") Тогда
		
			param.Вставить("ClientParam_1_3", ДанныеСтороны.ИС.КодФилиала);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДанныеСтороны.Свойство("СБИС") Тогда
		
		Если ДанныеСтороны.СБИС.Свойство("ИдСБИС") Тогда
		
			param.Вставить("SbisId", ДанныеСтороны.СБИС.ИдСБИС);
			
		КонецЕсли;
		
		Если ДанныеСтороны.СБИС.Свойство("Название") Тогда
		
			param.Вставить("SbisName", ДанныеСтороны.СБИС.Название);
			
		КонецЕсли;
		
		Если ДанныеСтороны.СБИС.Свойство("ИНН") Тогда
		
			param.Вставить("SbisParam_1_1", ДанныеСтороны.СБИС.ИНН);
			
		КонецЕсли;
		
		Если ДанныеСтороны.СБИС.Свойство("КПП") Тогда
		
			param.Вставить("SbisParam_1_2", ДанныеСтороны.СБИС.КПП);
			
		КонецЕсли;
		
		Если ДанныеСтороны.СБИС.Свойство("КодФилиала") Тогда
		
			param.Вставить("SbisParam_1_3", ДанныеСтороны.СБИС.КодФилиала);
			
		КонецЕсли;
		
	КонецЕсли; 
	
	Если ДанныеСтороны.Свойство("УИД") 
		И ЗначениеЗаполнено(ДанныеСтороны.УИД) Тогда
		
		param.Вставить("Uuid", ДанныеСтороны.УИД);

	КонецЕсли; 
	
	Если ДанныеСтороны.Свойство("Статус") Тогда
		
		param.Вставить("Status", ДанныеСтороны.Статус.Ид);
		param.Вставить("Status_msg", ДанныеСтороны.Статус.Сообщение);

	КонецЕсли;
	
	ПараметрыМетода = Новый Структура("param", param);
	
	Возврат ГлавноеОкно.Кэш.Интеграция.MappingObject_UpdateFromData(ГлавноеОкно.Кэш, ПараметрыМетода, Новый Структура);
	
КонецФункции

