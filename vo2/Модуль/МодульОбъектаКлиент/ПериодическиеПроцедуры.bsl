
//НЕ РАБОТА ПО РАСПИСАНИЮ. Это обработчик периодических операций - раз в пару минут, +-10 секунд. Гарантированной точности в промежутках нет
&НаКлиенте
Процедура ВыполнитьОтложенныеПроцедуры() Экспорт

	сбисОтложенныеОперации	= ГлобальныйКэш.ТекущийСеанс.сбисОтложенныеОперации;
	ОтложенныеПроцедуры		= сбисОтложенныеОперации.Процедуры;
	РежимОтладки			= ПолучитьЗначениеПараметраСбис("РежимОтладки");
	ФункцииДокументов		= ПолучитьЗначениеПараметраСбис("ФункцииДокументов");
	
	Если Не сбисОтложенныеОперации.Запущено Тогда
		Возврат;
	КонецЕсли;
	//Начало обработки
	сбисОтложенныеОперации.ПоследнийВызовМС = ПолучитьДатуВМиллисекундах(); 
	Если РежимОтладки Тогда
		лОтладочныеДанные = Новый Структура(
		"Тип,		Модуль,					Вызов,							Время,			Идентификатор,	Сообщение", 
		"START",	"МодульОбъектаКлиент",	"ВыполнитьОтложенныеПроцедуры",	ТекущаяДата(),	"Begin",		"");
		ДанныеВЛог = Новый Массив;
		ДанныеВЛог.Добавить(лОтладочныеДанные);
		СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
	КонецЕсли;
	ОтложенныеПроцедурыОчистить = Новый Массив;
	СледующийВызов = сбисОтложенныеОперации.МаксимальныйПериод;
	//Выполним что можно
	Для Каждого КлючИЗначение Из ОтложенныеПроцедуры Цикл
		ВыполняемаяОперация = КлючИЗначение.Значение;
		Если	ВыполняемаяОперация.Запущен // Операция уже выполняется
			Или	ВыполняемаяОперация.СледующийВызовМС > сбисОтложенныеОперации.ПоследнийВызовМС Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			ВремяНачала = ТекущаяДата(); 
			ВыполняемаяОперация.ПоследнийВызовМС = ПолучитьДатуВМиллисекундах();
			ВыполняемаяОперация.Запущен = Истина;
			ВыполнитьСбисОписаниеОповещения(ВыполняемаяОперация.Аргумент, ВыполняемаяОперация.ОписаниеОповещения);
			ВыполняемаяОперация.Запущен = Ложь;
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			РезультатОшибка = НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.ВыполнитьОтложенныеПроцедуры");
			Если сбисОтложенныеОперации.СообщатьПриОшибке Тогда
				СообщитьСбисИсключение(РезультатОшибка, Новый Структура("ФормаВладелец", ГлавноеОкно));
			КонецЕсли;
			Если РежимОтладки Тогда
				лОтладочныеДанные = Новый Структура(
				"Тип,		Модуль,					Вызов,												Время,			Идентификатор,					Сообщение", 
				"ERROR",	"МодульОбъектаКлиент",	ВыполняемаяОперация.ОписаниеОповещения.ИмяПроцедуры,ТекущаяДата(),	ВыполняемаяОперация.ИдДействия,	РезультатОшибка);
				ДанныеВЛог = Новый Массив;
				ДанныеВЛог.Добавить(лОтладочныеДанные);
				СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
			КонецЕсли;
			//В случае ошибки - падения выполнения кода, удалить обработчик
			ОтложенныеПроцедурыОчистить.Добавить(КлючИЗначение.Ключ);
			Продолжить;
		КонецПопытки;
		Если Не ВыполняемаяОперация.ЧислоВызовов = Неопределено Тогда
			ВыполняемаяОперация.ЧислоВызовов = ВыполняемаяОперация.ЧислоВызовов - 1;
		КонецЕсли;
		Если РежимОтладки Тогда
			ТекстСообщенияЛог = "Время выполнения: " + Окр(((ПолучитьДатуВМиллисекундах() - ВыполняемаяОперация.ПоследнийВызовМС)/1000), 2) + ".";
			Если ВыполняемаяОперация.ЧислоВызовов = Неопределено Тогда
				ТекстСообщенияЛог = ТекстСообщенияЛог + " Выполняется бесконечно.";
			Иначе
				ТекстСообщенияЛог = ТекстСообщенияЛог + " Осталось вызовов: " + ВыполняемаяОперация.ЧислоВызовов;
			КонецЕсли;
			лОтладочныеДанные = Новый Структура(
			"Тип,		Модуль,					Вызов,												Время,			Идентификатор,					Сообщение", 
			"SUСCESS",	"МодульОбъектаКлиент",	ВыполняемаяОперация.ОписаниеОповещения.ИмяПроцедуры,ВремяНачала,	ВыполняемаяОперация.ИдДействия,	ТекстСообщенияЛог);
			ДанныеВЛог = Новый Массив;
			ДанныеВЛог.Добавить(лОтладочныеДанные);
			СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
		КонецЕсли;
		Если	Не	ВыполняемаяОперация.ЧислоВызовов = Неопределено
			И		ВыполняемаяОперация.ЧислоВызовов < 1 Тогда
			ОтложенныеПроцедурыОчистить.Добавить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	//Очистим те, что уже отработали, либо упали с ошибкой
	Для Каждого КлючОчистить Из ОтложенныеПроцедурыОчистить Цикл
		ОтложенныеПроцедуры.Удалить(КлючОчистить);
	КонецЦикла;
	
	//Обновить сроки вызова с учетом задержки выполнения
	//сбисОтложенныеОперации.ПоследнийВызовМС = ПолучитьДатуВМиллисекундах(); 
	Если ОтложенныеПроцедуры.Количество() Тогда
		//Операции могли в процессе появится. Обновим периоды с их учетом
		Для Каждого КлючИЗначение Из ОтложенныеПроцедуры Цикл
			ВыполняемаяОперация = КлючИЗначение.Значение;
			
			Если ВыполняемаяОперация.Запущен Тогда
				
				Продолжить; // Если операция запущена, то она не учитывается в рассчете периода запуска
				
			КонецЕсли;
			Если ВыполняемаяОперация.СледующийВызовМС > сбисОтложенныеОперации.ПоследнийВызовМС Тогда
				ОбновитьПериодСледующегоВызова(СледующийВызов, ВыполняемаяОперация, сбисОтложенныеОперации);
				Продолжить;
			КонецЕсли;
			Если ВыполняемаяОперация.ПоследнийВызовМС = Неопределено Тогда
				СледующийВызов = 0;//Сразу вызываем, т.к. есть команда, которая ещё не обрабатывалась
				Прервать;
			КонецЕсли;
			//Операция требуется ещё, определим время следующего вызова, но не более максимального срока.
			ВыполняемаяОперация.СледующийВызовМС = ВыполняемаяОперация.ПоследнийВызовМС + ВыполняемаяОперация.ПериодичностьМС;
			ОбновитьПериодСледующегоВызова(СледующийВызов, ВыполняемаяОперация, сбисОтложенныеОперации);
		КонецЦикла;
	
		ВремяОбработки = Окр((ПолучитьДатуВМиллисекундах() - сбисОтложенныеОперации.ПоследнийВызовМС)/1000, 2);
		СледующийВызов = СледующийВызов - ВремяОбработки;
		Если СледующийВызов <= 0 Тогда
			СледующийВызов = 0.1;
		КонецЕсли;
		ГлавноеОкно.ПодключитьОбработчикОжидания("ВыполнениеОтложенныхПроцедур", СледующийВызов, Истина);
		Если РежимОтладки Тогда
			лОтладочныеДанные = Новый Структура(
			"Тип,	Модуль,					Вызов,							Время,			Идентификатор,		Сообщение", 
			"END",	"МодульОбъектаКлиент",	"ВыполнитьОтложенныеПроцедуры",	ТекущаяДата(),	"That's all folks",	"Следующий вызов: " + СледующийВызов);
			ДанныеВЛог = Новый Массив;
			ДанныеВЛог.Добавить(лОтладочныеДанные);
			СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
		КонецЕсли;
	Иначе
		сбисОтложенныеОперации.Запущено = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПериодСледующегоВызова(СледующийВызов, ВыполняемаяОперация, сбисОтложенныеОперации)
	СледующийВызовДляОперацииПотребуется = Окр((ВыполняемаяОперация.СледующийВызовМС - сбисОтложенныеОперации.ПоследнийВызовМС)/1000, 2);
	//СледующийВызовДляОперацииПотребуется = Окр((ВыполняемаяОперация.ПериодичностьМС - (Кэш.ОбщиеФункции.СбисТекущаяДатаВМиллисекундах(Кэш) - ВыполняемаяОперация.ПоследнийВызовМС))/1000, 2);
	Если СледующийВызов > СледующийВызовДляОперацииПотребуется Тогда
		СледующийВызов = СледующийВызовДляОперацииПотребуется;
	КонецЕсли;
КонецПроцедуры

