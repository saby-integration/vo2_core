
// Вызывает поиск массива сторон по их данным
//
// Параметры:
//  ДанныеДляПоиска  - Массив - Тип элементов - Структура, содержащие 
//                 ИНН, КПП, Тип, ВидИД (0 - 1С, 1 - СБИС), КодФилиала, GLN
//  ДопПараметры  - Неопределено - Прозапас
//
// Возвращаемое значение:
//   Массив   - Объекты маппинга
//
&НаКлиенте
Функция НайтиСтороныНаМаппинге(ДанныеДляПоиска, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш;
	
	ПараметрыПолучения = Новый Структура;
	
	ПараметрыПолучения.Вставить("ConnectionId", Кэш.Парам.ИдентификаторНастроек);
	ПараметрыПолучения.Вставить("IdType", ДопПараметры.ВидИД);
	ПараметрыПолучения.Вставить("Filter", Новый Массив);
	
	Для каждого Сторона Из ДанныеДляПоиска Цикл
		ДанныеСтороны = Новый Структура;
		
		ДанныеСтороны.Вставить("Type", Сторона.Тип);
		
		СведенияОСтороне = ?(ТипЗнч(Сторона) = Тип("КлючИЗначение"), Сторона.Значение, Сторона);
		Если ТипЗнч(СведенияОСтороне) <> Тип("Структура") Тогда
			Продолжить;
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("ИНН") Тогда
			ДанныеСтороны.Вставить("Key1_1", СведенияОСтороне.ИНН);
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("КПП") Тогда
			ДанныеСтороны.Вставить("Key1_2", СведенияОСтороне.КПП);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("КодФилиала") Тогда
			ДанныеСтороны.Вставить("Key1_3", СведенияОСтороне.КодФилиала);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("GLN") Тогда
			ДанныеСтороны.Вставить("Key2", СведенияОСтороне.GLN);
		КонецЕсли;
		
		Если СведенияОСтороне.Свойство("Тип1С") Тогда
			ДанныеСтороны.Вставить("ClientType", СведенияОСтороне.Тип1С);
		КонецЕсли;
		
		ПараметрыПолучения.Filter.Добавить(ДанныеСтороны);
	КонецЦикла;
	
	Отказ = Ложь;
	СопоставленныеДанныеСторон = Кэш.Интеграция.СБИС_ПолучитьСопоставлениеСторон(Кэш, ПараметрыПолучения, , Отказ);
	
	Если Отказ Тогда   
		Кэш.СБИС.МодульОбъектаКлиент.ВызватьСбисИсключение(СопоставленныеДанныеСторон, Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ПолучитьСопоставлениеСторон");
		Возврат Ложь;
	КонецЕсли; 
	
	Возврат СопоставленныеДанныеСторон;

КонецФункции // НайтиМаппингОбъекты()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция НайтиОбновитьСторонуМаппинга(Данные, ДопПараметры) Экспорт 
    
	Кэш = ГлавноеОкно.Кэш;
	ИниКонфигурации = Кэш.ини.Конфигурация;
	Сторона = Данные.СведенияСтороны;
	ОбъектМаппинга = Данные.ОбъектМаппинга;
	
	Фильтр = Новый Структура;
	
	Фильтр.Вставить("ConnectionId", Кэш.Парам.ИдентификаторНастроек);
	Фильтр.Вставить("IdType", ?(ДопПараметры.ВидОбъекта = "Client", 0, 1));
	Фильтр.Вставить("Id", ОбъектМаппинга[?(ДопПараметры.ВидОбъекта = "Client", "Client", "Sbis") + "Id"]);
	
	ДанныеСтороны = Новый Структура;
	
	Если Сторона.Свойство("Тип") Тогда
		ТипОбъекта = Сторона.Тип;
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "Ссылка."))  Тогда
		ТипОбъекта = "НашаОрганизация";                	
	Иначе
		ТипОбъекта = "Контрагент";
	КонецЕсли;              
	
	Если  ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "Ссылка.")) Тогда 
		Тип1С = СтрЗаменить(ИниКонфигурации.Организации.Значение, ".", "и.");
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Контрагенты.Значение, ".", "Ссылка.")) Тогда 
		Тип1С = СтрЗаменить(ИниКонфигурации.Контрагенты.Значение, ".", "и.");
	ИначеЕсли ТипЗнч(Сторона.Ссылка) = Тип(СтрЗаменить(ИниКонфигурации.Партнеры.Значение, ".", "Ссылка.")) Тогда
		Тип1С = СтрЗаменить(ИниКонфигурации.Партнеры.Значение, ".", "и.");
	КонецЕсли;	
		
	Фильтр.Вставить("Type", ТипОбъекта);
	
	Если ТипЗнч(Сторона) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Сторона.Свойство("ИНН") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_1", Сторона.ИНН);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Если Сторона.Свойство("КПП") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_2", Сторона.КПП);
	КонецЕсли;
	
	Если Сторона.Свойство("КодФилиала") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_1_3", Сторона.КодФилиала);
	КонецЕсли;
	
	Если Сторона.Свойство("GLN") Тогда
		ДанныеСтороны.Вставить(ДопПараметры.ВидОбъекта + "Param_2", Сторона.GLN);
	КонецЕсли;
		
	Если Сторона.Свойство("Тип1С") Тогда
		ДанныеСтороны.Вставить("ClientType", Сторона.Тип1С);
	КонецЕсли;
	
	Если ДопПараметры.ВидОбъекта = "Client" Тогда 
		ДанныеСтороны.Вставить("ClientId", Строка(Сторона.Ссылка.УникальныйИдентификатор()));
		ДанныеСтороны.Вставить("ClientName", Строка(Сторона.Ссылка));
		ДанныеСтороны.Вставить("ClientType", Тип1С); 
	Иначе
		ДанныеСтороны.Вставить("SbisId", Сторона.Id);
		ДанныеСтороны.Вставить("SbisName", Сторона.Name);
	КонецЕсли;
	
	ДанныеСтороны.Вставить("Status", 1);
	ДанныеСтороны.Вставить("Status_msg", "Сопоставлено");
	
	Отказ = Ложь;
	СопоставленныеДанныеСторон = Кэш.Интеграция.ОбновитьЗаписьСопоставления(Кэш, Фильтр, ДанныеСтороны, Отказ);
	
	Если Отказ Тогда   
		Кэш.СБИС.МодульОбъектаКлиент.ВызватьСбисИсключение(СопоставленныеДанныеСторон, Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ПолучитьСопоставлениеСторон");
		Возврат Ложь;
	КонецЕсли;

КонецФункции // НайтиОбновитьСторонуМаппинга()


&НаСервереБезКонтекста
Функция ПолучитьУчастникаПоИд(Идентификатор, Тип)
	Возврат Справочники[Сред(Тип, Найти(Тип, ".") + 1)].ПолучитьСсылку(Новый УникальныйИдентификатор(Идентификатор));
КонецФункции

// Сохраняет сопоставление сторона в маппинге
//
// Параметры:
//  ПараметрыФункции  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  ДопПараметры  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Функция Маппинг_ОбновитьСторону1С(СведенияМаппинга, ДопПараметры = Неопределено) Экспорт 

	Кэш = ГлавноеОкно.Кэш; 
	Отказ = Ложь;

	Если Кэш.Парам.СпособХраненияНастроек <> 1 Тогда
		Возврат Ложь;
	КонецЕсли;
    
	ПараметрыПолучения = Новый Массив;  
	ТипыДанныхСторон = ТипыСторонДляМаппинга();
		
	ПараметрыПолучения.Добавить(Новый Структура);   
	Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ПараметрыПолучения[0], СведенияМаппинга);
	ПараметрыПолучения[0].Вставить("Тип", СведенияМаппинга.Тип);
	ПараметрыПолучения[0].Вставить("Тип1С", ТипыДанныхСторон[СведенияМаппинга.ТипДанныхСтороны]);	
	
	СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
	НужноСоздатьЗапись = Истина;
	
	Если Не СопоставленныеДанныеСторон = Ложь
		И СопоставленныеДанныеСторон.Количество() Тогда 
		
		Для Каждого СопоставленнаяСторона Из СопоставленныеДанныеСторон Цикл
			Если ТипЗнч(СведенияМаппинга.Ссылка) = Тип(СтрЗаменить(СопоставленнаяСторона.ClientType, "и.", "Ссылка.")) Тогда
				НужноСоздатьЗапись = Ложь;
				СтрокаМаппинга = СопоставленнаяСторона;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если НужноСоздатьЗапись Тогда
		
		СтруктураОбъекта = Кэш.ОбщиеФункции.СбисПолучитьСтруктуруОбъекта1С(СведенияМаппинга.Ссылка, Новый Структура("ИмяСБИС", СведенияМаппинга.Тип), Ложь);
		
		ПараметрыОбновления = Новый Структура("СтруктураОбъекта, ИмяИни, Статус", СтруктураОбъекта, "СинхВыгрузка_" + СведенияМаппинга.Тип, "Получен");
		Если	ТипЗнч(ДопПараметры) = Тип("Структура")
			И	ДопПараметры.Свойство("СторонаСБИС") Тогда
			
			ОбогатитьОбъектМаппинга(ПараметрыОбновления.СтруктураОбъекта, ДопПараметры.СторонаСБИС);
		КонецЕсли;
		
		НовДопПараметры = Новый Структура("Отказ", Ложь);
		УИДЗаписиДокумента = ОбновитьОбъектСБИСИзОбъекта1С(ПараметрыОбновления, НовДопПараметры);
		РкзультатПодготовки = ПодготовитьОбъектМаппинга(УИДЗаписиДокумента);
		РезультатОбновления = ЗавершитьОбновитьОбъектСБИСИзОбъекта1С(УИДЗаписиДокумента, Отказ);
		ПараметрыПолучения[0].Вставить("Тип", СведенияМаппинга.Тип);       
		ЗаполнитьЗначенияСвойств(ПараметрыПолучения[0], ПараметрыОбновления.СтруктураОбъекта);
		СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
		СтрокаМаппинга = СопоставленныеДанныеСторон[0];
		Если Отказ Тогда
		    РезультатОбновления = Кэш.ОбщиеФункции.СбисИсключение(РезультатОбновления, "МодульОбъектаКлиент.ОбновитьОбъектСБИСИзОбъекта1С");	
		КонецЕсли;
	
	КонецЕсли;
		
	ДанныеОбновления = Новый Структура("ОбъектМаппинга, СведенияСтороны", СтрокаМаппинга, СведенияМаппинга);
	
	НайтиОбновитьСторонуМаппинга(ДанныеОбновления, Новый Структура("ВидОбъекта", "Client"));	     

КонецФункции // Маппинг_ОбновитьСторону1С()

// Возвращает результат метода MappingObject.List
//
// Параметры:
//  ПараметрыСписка  - Структура - Параметры маппинга:
//					Тип - Тип MappingObject
//					ФильтрГлавноеОкно - Параметры фильра с главного окна
//  ДопПараметры  - Структура, Неопределено - Дополнительные параметры
//                 (ДопПоля - получение дополнительынх полей)
//
// Возвращаемое значение:
//   Массив   - Список маппинг объектов
//
&НаКлиенте
Функция ПолучитьСписокМаппинга(ПараметрыСписка, ДопПараметры = Неопределено) Экспорт 

	Перем ДопПоля;
	
	Кэш = ГлавноеОкно.Кэш;
	
	Фильтр = Новый Структура;
	Фильтр.Вставить("ConnectionId",	Кэш.Парам.ИдентификаторНастроек);
	Фильтр.Вставить("SettingId",	ПараметрыСписка.Тип);  
	Если ЗначениеЗаполнено(ПараметрыСписка.ФильтрГлавноеОкно.ФильтрРодитель) Тогда
		Фильтр.Вставить("ClientParentUid", ПараметрыСписка.ФильтрГлавноеОкно.ФильтрРодитель);
	КонецЕсли; 
	
	Навигация = Новый Структура;
	Навигация.Вставить("PageSize",		ПараметрыСписка.ФильтрГлавноеОкно.ЗаписейНаСтранице);
	Навигация.Вставить("Page",	ПараметрыСписка.ФильтрГлавноеОкно.ФильтрСтраница); 
	
	Если	ТипЗнч(ДопПараметры) = Тип("Структура")
		И	ДопПараметры.Свойство("ДопПоля") Тогда
		
		ДопПоля = ДопПараметры.ДопПоля;
	КонецЕсли;
	
	Отказ = Ложь;
	СписокМаппинга = Кэш.Интеграция.MappingObject_List(Кэш, ДопПоля, Фильтр, Навигация, Отказ);
	
	Если Отказ Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат СписокМаппинга;

КонецФункции // ПолучитьСписокМаппинга()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ОбогатитьОбъектМаппинга(СтруктураОбъекта, СторонаСБИС)
	
	Если СторонаСБИС.Свойство("СвЮЛ") Тогда
		ЗаполнитьЗначенияСвойств(СтруктураОбъекта, СторонаСБИС.СвЮЛ);
	Иначе
		ЗаполнитьЗначенияСвойств(СтруктураОбъекта, СторонаСБИС.СвФЛ);
	КонецЕсли;

КонецПроцедуры // ОбогатитьОбъектМаппинга()

&НаКлиенте 
Функция ПолучитьТип1СДляМаппинга(ИниКонфигурации, ИмяУзла)
	
	Если ИниКонфигурации.Свойство(ИмяУзла) Тогда
		ЗначениеУзла = СтрЗаменить(ИниКонфигурации[ИмяУзла].Значение, """", "");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		Если Лев(ЗначениеУзла, 1) = "[" Тогда
			Возврат ПолучитьТипМетоаданных(ИниКонфигурации,	Сред(ЗначениеУзла, 2, Найти(ЗначениеУзла, "]") - 2));
				 
		ИначеЕсли	ТипЗнч(ЗначениеУзла) = Тип("Строка")
			И		Найти(ЗначениеУзла, ".") Тогда 
			      
			Если Лев(ЗначениеУзла, 10) = "Справочник" Тогда                      
				Возврат "Справочники." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			ИначеЕсли Лев(ЗначениеУзла, 8) = "Документ" Тогда
				Возврат "Документы." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			ИначеЕсли Лев(ЗначениеУзла, 23) = "ПланыВидовХарактеристик" Тогда
				Возврат "ПланыВидовХарактеристик." + Сред(ЗначениеУзла, Найти(ЗначениеУзла, ".") + 1);
			КонецЕсли;
				 
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Возврат Неопределено;        
	
КонецФункции

&НаКлиенте
Функция ТипыСторонИзИниДляМаппинга(ИниКонфигурации)
	
	ОписаниеТипов = Новый Структура;
	ОписаниеТипов.Вставить("Организации",	ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Организации"));
	ОписаниеТипов.Вставить("Контрагенты",	ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Контрагенты"));
	ОписаниеТипов.Вставить("Партнеры",		ПолучитьТип1СДляМаппинга(ИниКонфигурации, "Партнеры"));
	
	Возврат ОписаниеТипов;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ТипыСторонДляМаппинга()

	ОписаниеКонфигурации = ГлавноеОкно.Кэш.Ини.Конфигурация;
	
	ОписаниеТипов = ТипыСторонИзИниДляМаппинга(ОписаниеКонфигурации);
	
	ТипыСторон = Новый Структура;
	ТипыСторон.Вставить("ДанныеОрганизации", ОписаниеТипов.Организации);
	ТипыСторон.Вставить("ДанныеКонтрагента", ОписаниеТипов.Контрагенты);
	
	ТипГрузополучателя = ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	
	Если ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Контрагенты);
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Партнеры);
		
	Иначе 
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", Неопределено);
		
	КонецЕсли;
	
	Возврат ТипыСторон;

КонецФункции // ТипыСторонДляМаппинга()


