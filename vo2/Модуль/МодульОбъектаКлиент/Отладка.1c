
&НаКлиенте
Процедура СохранитьОтладочныеДанныеСБИС(ДанныеЗаписать, ДопПараметры=Неопределено) Экспорт
	Перем ПараметрКЗаписи;	
	ОбщиеФункцииДокументов = ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов;
	Если ДанныеЗаписать.Свойство("XML", ПараметрКЗаписи) Тогда
		Для Каждого ЗаписьПараметра Из ПараметрКЗаписи Цикл
			ШаблонXML = ЗаписьПараметра.Данные;
			Если ЗаписьПараметра.Отказ Тогда
				ШаблонXML = СбисРаботаСJson.ПреобразоватьЗначениеВJson(ШаблонXML);
			КонецЕсли;
			ОшибкаЗаписи	= Ложь;
			сбисПутьЗаписи	= ГлобальныйКэш.Парам.КаталогОтладки;
			Если	ЗаписьПараметра.Свойство("Папка")
				И	ЗначениеЗаполнено(ЗаписьПараметра.Папка) Тогда
				сбисПутьЗаписи = ОбщиеФункцииДокументов.СбисФорматКаталога(сбисПутьЗаписи + ЗаписьПараметра.Папка, ГлобальныйКэш.ПараметрыСистемы.Клиент);
			КонецЕсли;
			РезультатЗаписи = ОбщиеФункцииДокументов.сбисЗаписатьФайл_Клиент(ГлобальныйКэш, Новый Структура("Путь, Имя, Расширение, Данные, Кодировка", сбисПутьЗаписи, ЗаписьПараметра.Имя, "xml", ШаблонXML, "windows-1251"), ОшибкаЗаписи);
			Если ОшибкаЗаписи Тогда
				СообщитьСбисИсключение(РезультатЗаписи);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ДанныеЗаписать.Свойство("XSLT", ПараметрКЗаписи) Тогда
		Для Каждого ЗаписьПараметра Из ПараметрКЗаписи Цикл
			ОшибкаЗаписи	= Ложь;
			сбисПутьЗаписи	= ГлобальныйКэш.Парам.КаталогОтладки;
			Если	ЗаписьПараметра.Свойство("Папка")
				И	ЗначениеЗаполнено(ЗаписьПараметра.Папка) Тогда
				сбисПутьЗаписи = ОбщиеФункцииДокументов.сбисФорматКаталога(сбисПутьЗаписи + ЗаписьПараметра.Папка, ГлобальныйКэш.ПараметрыСистемы.Клиент);
			КонецЕсли;
			РезультатЗаписи = ОбщиеФункцииДокументов.СбисЗаписатьФайл_Клиент(ГлобальныйКэш, Новый Структура("Путь, Имя, Расширение, Данные, Кодировка", сбисПутьЗаписи, ЗаписьПараметра.Имя, "xslt", ЗаписьПараметра.Данные,  КодировкаТекста.UTF8), ОшибкаЗаписи);
			Если ОшибкаЗаписи Тогда
				СообщитьСбисИсключение(РезультатЗаписи);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если ДанныеЗаписать.Свойство("Log", ПараметрКЗаписи) Тогда
		СбисИмяМодуля	= Неопределено;
		ОшибкаЗаписи	= Ложь;
		СбисИмяПапкиЛог	= Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
		СбисПутьЗаписи	= ОбщиеФункцииДокументов.сбисФорматКаталога(ОбщиеФункцииДокументов.сбисФорматКаталога(ГлобальныйКэш.Парам.КаталогОтладки + "Log", ГлобальныйКэш.ПараметрыСистемы.Клиент) + СбисИмяПапкиЛог, ГлобальныйКэш.ПараметрыСистемы.Клиент);
		//Если Не	ЗаписьПараметра.Свойство("Модуль", СбисИмяМодуля) Тогда
		//	СБисИмяМодуля = "Неизвестно";
		//КонецЕсли;
		ФайлТест = Новый Файл(СбисПутьЗаписи);
		Если	Не ФайлТест.Существует()
			Или	Не ФайлТест.ЭтоКаталог() Тогда 
			Попытка
				СоздатьКаталог(СбисПутьЗаписи);
			Исключение
				ГлобальныйКэш.Парам.РежимОтладки = Ложь;
				СтруктураОшибки = НовыйСбисИсключение(,"МодульОбъектаКлиент.СбисСохранитьОтладочныеДанные", 772, "Ошибка работы с файловой системой", "Ошибка доступа к каталогу записи логов " + СбисПутьЗаписи + ". Детально: " + ИнформацияОбОшибке().Описание);
				СообщитьСбисИсключение(СтруктураОшибки);
				Возврат;
			КонецПопытки;
		КонецЕсли;
		СбисФорматЛога = "{Время}{Тип}{Вызов}{Идентификатор}{Сообщение}";
		Для Каждого ЗаписьПараметра Из ПараметрКЗаписи Цикл
			СбисИмяМодуля = ЗаписьПараметра.Модуль + ".txt";
			СтрокаНаВывод = СтрЗаменить(СтрЗаменить(СтрЗаменить(СбисФорматЛога, 
			"{Время}",		СбисДополнитьСтроку(Формат(ЗаписьПараметра.Время, "ДФ=HH:mm:ss"),10)),
			"{Тип}",		СбисДополнитьСтроку(ЗаписьПараметра.Тип, 10)),
			"{Сообщение}",	ЗаписьПараметра.Сообщение);
			Если ЗаписьПараметра.Свойство("Идентификатор") Тогда
				СтрокаНаВывод = СтрЗаменить(СтрЗаменить(СтрокаНаВывод, 
				"{Вызов}",			СбисДополнитьСтроку(ЗаписьПараметра.Вызов, 40)),
				"{Идентификатор}",	СбисДополнитьСтроку(ЗаписьПараметра.Идентификатор, 40));
			Иначе
				СтрокаНаВывод = СтрЗаменить(СтрЗаменить(СтрокаНаВывод, 
				"{Вызов}",			СбисДополнитьСтроку(ЗаписьПараметра.Вызов, 70)),
				"{Идентификатор}",	"");
			КонецЕсли;
			ТекстДок = Новый ТекстовыйДокумент;
			ФайлТест = Новый Файл(СбисПутьЗаписи + СбисИмяМодуля);
			Если ФайлТест.Существует() Тогда
				ТекстДок.Прочитать(СбисПутьЗаписи + СбисИмяМодуля);
			КонецЕсли;							
			ТекстДок.ДобавитьСтроку(СтрокаНаВывод);
			ТекстДок.Записать(СбисПутьЗаписи + СбисИмяМодуля);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция СбисДополнитьСтроку(СтрокаИсх, ДлинаСтрокиДополнить, СимволДополнить = " ")
	СтрокаРезультат = Лев(СтрокаИсх, ДлинаСтрокиДополнить);
	Пока  СтрДлина(СтрокаРезультат) < ДлинаСтрокиДополнить Цикл
		СтрокаРезультат = СтрокаРезультат + СимволДополнить;
	КонецЦикла;
	Возврат СтрокаРезультат;
КонецФункции

