
// Функция возвращает результат поиска значения в массиве структур
//
// Параметры:
//  МассивДляПоиска		 - Массив - Массив для поиска
//  ЗначениеСтруктуры	 - Произвольный - Значение для поиска
//  КлючСтруктуры		 - Строка - Ключ структуры для поиска
// 
// Возвращаемое значение:
//  Структура - Найденное значение (ЭлементМассива) или Неопределено
//
&НаКлиенте
Функция НайтиВМассивеСтруктурПоКлючу(МассивДляПоиска, ЗначениеСтруктуры, КлючСтруктуры) Экспорт	
	Результат = Неопределено;	
	Для Каждого ЭлементМассива Из МассивДляПоиска Цикл
		Если ЗначениеЗаполнено(Результат) Тогда Прервать; КонецЕсли;
		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			Для Каждого ЭлементСтруктуры Из ЭлементМассива Цикл
				Если ЭлементСтруктуры.Ключ = КлючСтруктуры
					И ЭлементСтруктуры.Значение = ЗначениеСтруктуры Тогда
					Результат = ЭлементМассива;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;	
КонецФункции

// Функция возвращает массив уникальных значений по ключу структуры
//
// Параметры:
//  МассивИсточник	 - Массив - Массив для поиска 
//  КлючСтруктуры	 - Строка - Ключ структуры для поиска
// 
// Возвращаемое значение:
//  Массив - Найденное значение (ЭлементМассива) или пустой массив
//
&НаКлиенте
Функция СвернутьМассивСтруктурПоКлючу(МассивИсточник, КлючСтруктуры) Экспорт
			
	УникальныеЗначения = Новый Соответствие;  
	МассивПриемник = Новый Массив;
			
	Для Каждого Значение Из МассивИсточник Цикл
		Если УникальныеЗначения[Значение[КлючСтруктуры]] = Неопределено Тогда
			МассивПриемник.Добавить(Значение);
			УникальныеЗначения.Вставить(Значение[КлючСтруктуры], Истина);
		КонецЕсли;
	КонецЦикла; 
	
	Возврат МассивПриемник;		
	
КонецФункции 

// Разбивает строку на несколько строк по указанному разделителю. Разделитель может иметь любую длину.
// Читай доп. описание "СбисРазложитьСтрокуВМассивПодстрок" в модуле объекта
&НаСервереБезКонтекста
Функция СбисРазложитьСтрокуВМассивПодстрокНаСервереБезКонтекста(Знач Значение, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено,
	СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Возврат МодульОбъектаСерверБезКонтекста().СбисРазложитьСтрокуВМассивПодстрок(Значение, Разделитель, ПропускатьПустыеСтроки, СокращатьНепечатаемыеСимволы);
	
КонецФункции

// Функция Находит первое вхождение искомой строки как подстроки в исходной строке. Сравнение выполняется с учетом регистра.
//
// Параметры:
//  Строка				 - Строка	- Исходная строка.
//  ПодстрокаПоиска		 - Строка	- Искомая подстрока.
//  НаправлениеПоиска	 - Строка	- Указывает направление поиска подстроки в строке. По умолчанию: СНачала
//  НачальнаяПозиция	 - Число	- Указывает позицию в строке, с которой начинается поиск.
//  НомерВхождения		 - Число	- Указывает номер вхождения искомой подстроки в исходной строке.
// 
// Возвращаемое значение:
//  Число - Результат вычмсления функции.
//
&НаКлиенте
Функция СбисСтрНайти(Строка, ПодстрокаПоиска, НаправлениеПоиска = Неопределено, НачальнаяПозиция = Неопределено, НомерВхождения = 1) Экспорт
    
    Если Строка = "" И ПодстрокаПоиска = "" Тогда
        // чтобы отрабатывало как в платформе
        Если НаправлениеПоиска = "СКонца" Тогда
            Если НомерВхождения = 1 Тогда
                Возврат 1;
            Иначе
                Возврат 0;
            КонецЕсли;
        Иначе
            Возврат Мин(НомерВхождения, ?(НачальнаяПозиция = Неопределено, 1, НачальнаяПозиция));
        КонецЕсли;
    КонецЕсли;
    
    Если НачальнаяПозиция = Неопределено Тогда
        Если НаправлениеПоиска = "СКонца" Тогда
            лНачальнаяПозиция = СтрДлина(Строка);
        Иначе
            лНачальнаяПозиция = 1;
        КонецЕсли;
    Иначе
        лНачальнаяПозиция = НачальнаяПозиция;
    КонецЕсли;
    
    Если НаправлениеПоиска = "СКонца" Тогда
        лСтрока = "";
        Для сч = 1 По СтрДлина(Строка) Цикл
            лСтрока = Сред(Строка, сч, 1) + лСтрока;
        КонецЦикла;
        лПодстрокаПоиска = "";
        Для сч = 1 По СтрДлина(ПодстрокаПоиска) Цикл
            лПодстрокаПоиска = Сред(ПодстрокаПоиска, сч, 1) + лПодстрокаПоиска;
        КонецЦикла;
        лНачальнаяПозиция = Макс(1, СтрДлина(Строка) - лНачальнаяПозиция - СтрДлина(ПодстрокаПоиска) + 2);
    Иначе
        лСтрока = Строка;
        лПодстрокаПоиска = ПодстрокаПоиска;
    КонецЕсли;
    
    лНомерВхождения = 0;
    Результат = Найти(Сред(лСтрока, лНачальнаяПозиция), лПодстрокаПоиска);
    Пока Результат Цикл
        лНачальнаяПозиция = Результат + лНачальнаяПозиция + СтрДлина(ПодстрокаПоиска) - 1;
        лНомерВхождения = лНомерВхождения + 1;
        Если лНомерВхождения = НомерВхождения Тогда
            Прервать;
        КонецЕсли;
        Результат = Найти(Сред(лСтрока, лНачальнаяПозиция), лПодстрокаПоиска);
    КонецЦикла;
    
    Если лНомерВхождения = НомерВхождения Тогда
        Результат = лНачальнаяПозиция - СтрДлина(ПодстрокаПоиска);
    Иначе
        Результат = 0;
    КонецЕсли;
        
    Если НаправлениеПоиска = "СКонца" И Результат <> 0 Тогда
        Результат = СтрДлина(Строка) - Результат - СтрДлина(ПодстрокаПоиска) + 2;
    КонецЕсли;
    
    Возврат Результат;
    
КонецФункции  

// Функция аналог платформееной функции СтрСоединить, возвращает строку, содержащуя соединенные исходные строки с разделителем между ними. 
//
// Параметры:
//  МассивСтрок	 - Массив - Массив, содержащий объединяемые строки.
//  Разделитель	 - Строка - Строка, которая будет вставлена между объединяемыми строками.
// 
// Возвращаемое значение:
//  Строка - Строка, содержащая соединенные исходные строки с разделителем между ними.
//
&НаКлиенте
Функция СбисСтрСоединить(МассивСтрок, Разделитель = "") Экспорт
    
    Результат = "";
    
    Для Каждого ЭлементМассива Из МассивСтрок Цикл
        
        Результат = Результат + ЭлементМассива + Разделитель;    
        
    КонецЦикла;
    
    ОтрезатьСимволов = СтрДлина(Разделитель);
    
    ОставитьСимволов = СтрДлина(Результат) - ОтрезатьСимволов;
    
    Результат = Лев(Результат, ОставитьСимволов);
    
    Возврат Результат;
    
КонецФункции

