
// Функция - выгружает данные стороны в плоском формате 
//
// Параметры:
//  ДанныеСтороны	 - экземпляр класса сторона	 - Структура СфЮл/СвФЛ
// 
// Возвращаемое значение:
//  Структура - формат с полями "ИНН, КПП, КодФилиала". Если чего-то не хватает, то ""
//
&НаКлиенте
Функция Сторона_Выгрузить(ДанныеСтороны) Экспорт
	Перем СвЮлФлСтороны;
	
	ДанныеСтороныПлоские = Новый Структура("ИНН, КПП, КодФилиала", "", "", "");
	Если		ДанныеСтороны = Неопределено Тогда
		
		Возврат ДанныеСтороныПлоские;
		
	ИначеЕсли	ДанныеСтороны.Свойство("СвЮЛ", СвЮлФлСтороны) Тогда
		
		Если СвЮлФлСтороны.Свойство("КПП") Тогда
			ДанныеСтороныПлоские.КПП = СвЮлФлСтороны.КПП;
		КонецЕсли;
		
	ИначеЕсли	ДанныеСтороны.Свойство("СвФЛ", СвЮлФлСтороны) Тогда 
		
		//Есть СвФЛ
		
	Иначе
		
		//Нет данных стороны
		ВызватьСбисИсключение(724, "РаботаСДокументами1С.СгенерироватьПакет",, "Сторона не определена", "Отсутствует ИНН/КПП");
		
	КонецЕсли;
	
	ДанныеСтороныПлоские.ИНН = СвЮлФлСтороны.ИНН;
	Если	СвЮлФлСтороны.Свойство("КодФилиала")
		И	ЗначениеЗаполнено(СвЮлФлСтороны.КодФилиала) Тогда
		ДанныеСтороныПлоские.КодФилиала = СвЮлФлСтороны.КодФилиала;
	КонецЕсли;
	
	Возврат ДанныеСтороныПлоские;
	
КонецФункции
	
// Функция ищет элемент справочника в базе 1С по данным участника в универсальном формате
//
// Параметры:
//  оУчастник	 - Структура	 - класс стороны
//  ДопПараметры - Струкутра	 - расширение поиска
//		УзелИниПоиска	- 
//		ТипСтороны		-
//		Тип1С			-
// 
// Возвращаемое значение:
//  Массив - Список найденныхссылок
//
&НаКлиенте
Функция Сторона_НайтиКарточки1С(оУчастник, ДопПараметры) Экспорт

	Возврат Сторона_НайтиКарточки1СЗапросом(оУчастник, ДопПараметры);
	
КонецФункции

// Функция ищет элемент справочника в базе 1С по данным участника в универсальном формате
//
// Параметры:
//  оУчастник	 - Структура	 - класс стороны
//  ДопПараметры - Струкутра	 - расширение поиска
//		УзелИниПоиска	- Структура, узел ини из мДокумент для поиска стороны под определенный документ
//		ТипСтороны		- Строка Контрагент/Организация. Должно быть определено в ини Конфигураици 
// 
// Возвращаемое значение:
//  Массив - Список найденных ссылок
//
&НаКлиенте
Функция Сторона_НайтиКарточки1СЗапросом(оУчастник, ДопПараметры) Экспорт
	Перем СвФлЮл, УзелИниПоиска, ТекстЗапроса, ТолькоПоИНН;

	Результат	= Новый Массив;
	Если	Не	ТипЗнч(оУчастник) = Тип("Структура")
		Или		оУчастник = Неопределено Тогда 
		Возврат Результат;
	КонецЕсли;
	ДопПараметры.Свойство("ТолькоПоИНН", ТолькоПоИНН);
	
	ТипСтороны					= ДопПараметры.ТипСтороны;
	ПараметрыПоискаРеквизиты	= ПолучитьЗначениеПараметраСбис("РеквизитыСторонДляПоиска");
	
	Если Не ПараметрыПоискаРеквизиты.Свойство(ТипСтороны, ПараметрыПоискаРеквизиты) Тогда
		ВызватьСбисИсключение(760, "МодульОбъектаКлиент.Сторона_НайтиКарточки1С",,, "Отсутствует описание стороны " + ТипСтороны + " в ини Конфигурация для поиска.");
	КонецЕсли;
	
	КлючЗапроса					= ПараметрыПоискаРеквизиты.КлючЗапроса;
	ТолькоПоИНН					= ПараметрыПоискаРеквизиты.ПоискТолькоПоИНН;
	ПараметрыПостроенияЗапроса	= Новый Структура;
	
	Если		оУчастник.Свойство("СвФЛ", СвФлЮл) Тогда
		ТолькоПоИНН = Истина;
		ПараметрыПостроенияЗапроса.Вставить("ИНН", СвФлЮл.ИНН);
	ИначеЕсли	оУчастник.Свойство("СвЮЛ", СвФлЮл) Тогда
		ПараметрыПостроенияЗапроса.Вставить("КПП", СвФлЮл.КПП);
		ПараметрыПостроенияЗапроса.Вставить("ИНН", СвФлЮл.ИНН);
	КонецЕсли;
		
	//Определить текст запроса
	СтрокаФильтрКПП = "И Участник." + ПараметрыПоискаРеквизиты.КПП + "=&КПП";
	Если  ДопПараметры.Свойство("УзелИниПоиска", УзелИниПоиска)
		И УзелИниПоиска.Свойство(КлючЗапроса) Тогда
		//В ини на поиск есть свой запрос для соответствующей стороны
		ТекстЗапроса = ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов.РассчитатьЗначение(КлючЗапроса, УзелИниПоиска);
	Иначе
		ИниКОнфигурации = ИниПоПараметрам("Конфигурация");
		Если ИниКОнфигурации.Свойство(КлючЗапроса) Тогда
			ТекстЗапроса = ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов.РассчитатьЗначение(КлючЗапроса, ИниКОнфигурации);
		КонецЕсли;
	КонецЕсли;
	
	Если	ТекстЗапроса = Неопределено Тогда
		
		ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Участник.Ссылка
		|ИЗ
		|	Справочник." + ПараметрыПоискаРеквизиты.Тип + " КАК Участник
		|ГДЕ
		|	НЕ Участник.ПометкаУдаления 
		|	И Участник." + ПараметрыПоискаРеквизиты.ИНН + "=&ИНН";
		
		Если Не ТолькоПоИНН Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	" + СтрокаФильтрКПП;
		КонецЕсли;
	ИначеЕсли ТолькоПоИНН Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, СтрокаФильтрКПП, "");
		
	КонецЕсли;
	
	//Подразделение, если есть
	Если	оУчастник.Свойство("Подразделение") 
		И	оУчастник.Подразделение.Свойство("Идентификатор") Тогда
		ПараметрыПостроенияЗапроса.Вставить("КодФилиала", оУчастник.Подразделение.Идентификатор);
	Иначе
		ПараметрыПостроенияЗапроса.Вставить("КодФилиала", "");
	КонецЕсли;
	
	//GLN, если есть
	Если	оУчастник.Свойство("GLN") Тогда
		ПараметрыПостроенияЗапроса.Вставить("GLN",	оУчастник.GLN);
	Иначе
		ПараметрыПостроенияЗапроса.Вставить("GLN",	"");
	КонецЕсли;
	
	//Пользовательские органичения
	Если оУчастник.Свойство("Ограничения") Тогда
		Для Каждого Параметр Из оУчастник.Ограничения Цикл
			ПараметрыПостроенияЗапроса.Вставить(Параметр.Ключ, Параметр.Значение);
		КонецЦикла;	
	КонецЕсли; 
	
	РезультатПоиска = Сторона_НайтиКарточки1СЗапросомСервер(ТекстЗапроса, ПараметрыПостроенияЗапроса);
	РезультатИтог	= Новый Массив;
	
	Для Каждого РезультатСтрока Из РезультатПоиска Цикл 
		Если ТипЗнч(РезультатСтрока) = Тип("Структура") Тогда
			РезультатИтог.Добавить(РезультатСтрока.Ссылка);
		Иначе
			РезультатИтог.Добавить(РезультатСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РезультатИтог;
	
КонецФункции

&НаСервере
Функция Сторона_НайтиКарточки1СЗапросомСервер(ТекстЗапроса, ПараметрыЗапроса)
	
	Возврат МодульОбъектаСервер().ВыполнитьЗапросСПараметрами(ТекстЗапроса, ПараметрыЗапроса);
	
КонецФункции

