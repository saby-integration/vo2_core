
&НаКлиенте
Процедура СоставПакета_ОбновитьНоменклатуру(СоставПакета, Изменения)

	Для Каждого ТекущееВложение Из СоставПакета.Вложение Цикл
		ВложениеСБИС_Обновить(ТекущееВложение, Изменения);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СоставПакета_ОбновитьВложения(СоставПакета, Изменения)
	Перем ВложенияПакета;

	Если НЕ СоставПакета.Свойство("Вложение", ВложенияПакета)
		ИЛИ НЕ ЗначениеЗаполнено(Изменения) Тогда
		Возврат;
	КонецЕсли;

	Для каждого ТекущееВложение Из Изменения Цикл

		ПараметрыВложения = Новый Структура;
		ПараметрыВложения.Вставить("Тип",				ВложениеСБИС_Получить(ТекущееВложение, "Тип"));
		ПараметрыВложения.Вставить("ПодТип",			ВложениеСБИС_Получить(ТекущееВложение, "ПодТип"));
		ПараметрыВложения.Вставить("ВерсияФормата",		ВложениеСБИС_Получить(ТекущееВложение, "ВерсияФормата"));
		ПараметрыВложения.Вставить("ПодверсияФормата",	ВложениеСБИС_Получить(ТекущееВложение, "ПодверсияФормата"));
		ПараметрыВложения.Вставить("Дата",				ВложениеСБИС_Получить(ТекущееВложение, "Дата"));
		ПараметрыВложения.Вставить("Номер",				ВложениеСБИС_Получить(ТекущееВложение, "Номер"));
		ПараметрыВложения.Вставить("Идентификатор",		ВложениеСБИС_Получить(ТекущееВложение, "Идентификатор"));
		
		ОбновляемоеВложение = СоставПакета_Получить(СоставПакета, "Вложение", ПараметрыВложения);

		Если ОбновляемоеВложение = Неопределено Тогда
			ОбновляемоеВложение = НовыйВложениеСБИС(ТекущееВложение);
			СоставПакета.Вложение.Добавить(ОбновляемоеВложение);
		Иначе
			ЗаполнитьЗначенияСвойств(ОбновляемоеВложение, ТекущееВложение);
			ОбновляемоеВложение.Вставить("Модифицирован", Ложь);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Функция СоставПакета_НайтиВложение(СоставПакета, ДопПараметры)
	
	Если НЕ СоставПакета.Свойство("Вложение") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Нет доп. параметров, нечего и отбирать, потому возврат всех
	Если ДопПараметры = Неопределено Тогда
		Возврат СоставПакета.Вложение;
	КонецЕсли;

	Если ДопПараметры.Свойство("Идентификатор")
		И ЗначениеЗаполнено(ДопПараметры.Идентификатор) Тогда
		Возврат СоставПакета_НайтиВложениеПоИдентификатору(СоставПакета, ДопПараметры.Идентификатор);
	Иначе
		Возврат СоставПакета_НайтиВложениеПоПараметрам(СоставПакета, ДопПараметры);
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция СоставПакета_НайтиВложениеПоИдентификатору(СоставПакета, ИдентификаторВложения)
		
	Для каждого Вложение Из СоставПакета.Вложение Цикл

		Если ВложениеСБИС_Получить(Вложение, "Идентификатор") <> ИдентификаторВложения Тогда
			Продолжить;
		КонецЕсли;

		Возврат Вложение;

	КонецЦикла;

	Возврат Неопределено;

КонецФункции

&НаКлиенте
Функция СоставПакета_НайтиВложениеПоПараметрам(СоставПакета, ПараметрыВложения)
		
	Для каждого Вложение Из СоставПакета.Вложение Цикл

		ЧислоСовпадений = 0;

		Для каждого Параметр Из ПараметрыВложения Цикл
			Если Параметр.Ключ = "Идентификатор"
				ИЛИ ВложениеСБИС_Получить(Вложение, Параметр.Ключ) = Параметр.Значение Тогда
				ЧислоСовпадений = ЧислоСовпадений + 1;
			Иначе
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если ЧислоСовпадений = ПараметрыВложения.Количество() Тогда
			Возврат Вложение;
		КонецЕсли;

	КонецЦикла;

	Возврат Неопределено;

КонецФункции

&НаКлиенте
Функция СоставПакета_Модифицирован(СоставПакета)
	Перем Результат;
	ИмяУзла = "Модифицирован";

	Если СоставПакета.Свойство(ИмяУзла, Результат) Тогда
		Возврат Результат = Истина;
	КонецЕсли;

	Для каждого Вложение Из СоставПакета_Получить(СоставПакета, "Вложение") Цикл
		Если ВложениеСБИС_Получить(Вложение, ИмяУзла) Тогда
			
			Результат = Истина;
			Прервать;

		КонецЕсли;
	КонецЦикла;
			
	СоставПакета.Вставить(ИмяУзла, Результат = Истина);

	Возврат Результат = Истина;
	
КонецФункции
