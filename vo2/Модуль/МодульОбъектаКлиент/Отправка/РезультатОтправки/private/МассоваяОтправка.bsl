
&НаКлиенте
Процедура РезультатОтправки_МассоваяОтправка_АктивацияСертификатов(РезультатОтправки, ДопПараметры = Неопределено) Экспорт
	
	РезультатОтправки_ПоказатьСтатус(РезультатОтправки, "Проверка сертификатов");
	ОбработчикПродолжить	= НовыйСбисОписаниеОповещения("РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_Продолжить", МодульОбъектаКлиент(), РезультатОтправки);
	СертификатыАктивировать = РезультатОтправки.ДанныеКОтправке.Сертификаты;
	
	СертификатыАктивировать.Список = ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.ПолучитьСертификатыДляАктивации(ГлавноеОкно.Кэш, СертификатыАктивировать.ИННАктивировать);
	Если СертификатыАктивировать.Список.Количество() Тогда
		СертификатыАктивировать.Вставить("Текущий",				0);
		СертификатыАктивировать.Вставить("ОбработчикАктивации", ОбработчикПродолжить);
		РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_ВводПинКодов(РезультатОтправки);
	Иначе
		ВыполнитьСбисОписаниеОповещения("Не требуется", ОбработчикПродолжить);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_ВводПинКодов(РезультатОтправки) Экспорт
	
	СертификатыАктивировать = РезультатОтправки.ДанныеКОтправке.Сертификаты;
	СертификатТекущий		= СертификатыАктивировать.Список[СертификатыАктивировать.Текущий].Значение;
	
	РезультатОтправки_ПоказатьСтатус(РезультатОтправки, "Активация сертификатов", Окр(СертификатыАктивировать.Текущий*100/СертификатыАктивировать.Список.Количество()));
	Если СертификатТекущий.Ключ.СпособАктивации <> "СтатическийКод" Тогда
		ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.ПолучитьКодАктивацииСертификата(ГлавноеОкно.Кэш, СертификатТекущий);				
	КонецЕсли;
	СертификатИмя			= "Введите код активации сертификата " + ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов.ПолучитьПредставлениеСертификата(СертификатТекущий, "[ФИО].([Должность])., [Название].(ИНН [ИНН])", Истина);
	ОбработчикПродолжить	= НовыйСбисОписаниеОповещения("РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_Продолжить", МодульОбъектаКлиент(), РезультатОтправки);
	ФормаВвода				= ПолучитьФормуОбработки("ФормаВводаПинкода", Новый Структура("Владелец", РезультатОтправки.ДанныеКОтправке.ВладелецОтправки));
	ФормаВвода.ОписаниеОповещенияОЗакрытии = ОбработчикПродолжить;
	ФормаВвода.Показать(Новый Структура("СертификатИмя", СертификатИмя));
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_Продолжить(РезультатАктивации = Неопределено, РезультатОтправки) Экспорт
	
	СертификатыАктивировать = РезультатОтправки.ДанныеКОтправке.Сертификаты;
	Если		РезультатАктивации = "Не требуется" Тогда
		//Не сертификатов для активации
		Для Каждого Элемент Из СертификатыАктивировать.ИННАктивировать Цикл
			СертификатыАктивировать.ИННАктивированы.Добавить(Элемент.Значение);
		КонецЦикла;
	Иначе
		СертификатыАктивировать = РезультатОтправки.ДанныеКОтправке.Сертификаты;
		СертификатТекущий		= СертификатыАктивировать.Список[СертификатыАктивировать.Текущий].Значение;
		Если	РезультатАктивации = Неопределено Тогда
			//Продолжим отправку, пакеты с не активированным ИНН упадут при следующей итерации
			ИННОтмена = СертификатТекущий.ИНН;
			ОшибкаОтмена = НовыйСбисИсключение(755, "МодульОбъектаКлиент.РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_Продолжить",,"Активация отменена пользователем");
			СертификатыАктивировать.ИННОшибки.Вставить(ИННОтмена, ОшибкаОтмена);
			СертификатыАктивировать.Удалить(СертификатыАктивировать.ИННАктивировать.НайтиПоЗначению(ИННОтмена));
		Иначе
			СертификатТекущий		= СертификатыАктивировать.Список[СертификатыАктивировать.Текущий].Значение;
			СертификатТекущий.Вставить("КодАктивации", РезультатАктивации.ПинКод);
			Если СертификатыАктивировать.Текущий = РезультатОтправки.ДанныеКОтправке.Сертификаты.Список.Количество() - 1 Тогда
				
				// если ввели все пин-коды
				Если ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.АктивироватьСерверныеСертификаты(ГлавноеОкно.Кэш, РезультатОтправки.ДанныеКОтправке.Сертификаты.Список) = Ложь Тогда
					//Активация не удалась, на следующей итерации отвалится
					ОшибкаАктивации = НовыйСбисИсключение(755, "МодульОбъектаКлиент.РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_Продолжить",,"Ошибка активации сертификатов");

					Для Каждого Элемент Из СертификатыАктивировать.ИННАктивировать Цикл
						СертификатыАктивировать.ИННОшибки.Вставить(Элемент.Значение, ОшибкаАктивации);
					КонецЦикла;
				Иначе
					
					//Активация успешна
					Для Каждого Элемент Из СертификатыАктивировать.ИННАктивировать Цикл
						РезультатОтправки.ИННАктивированы.Добавить(Элемент.Значение);
					КонецЦикла;
				
				КонецЕсли;
				
			Иначе
				//Продолжаем банкет
				
				СертификатыАктивировать.Текущий = СертификатыАктивировать.Текущий + 1;
				РезультатОтправки_МассоваяОтправка_АктивацияСертификатов_ВводПинКодов(РезультатОтправки);
				Возврат;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//Продолжаем отправку
	СертификатыАктивировать.ИННАктивировать.Очистить();
	РезультатОтправки_СпрятатьСтатус(РезультатОтправки);
	
	ОтложенноеДействие = НовыйСбисОписаниеОповещения("РезультатОтправки_МассоваяОтправка", МодульОбъектаКлиент());
	ОтложенноеДействие = НовыйОтложенноеДействие(Новый Структура("ОписаниеОповещения, ИдентификаторДействия, Аргумент", ОтложенноеДействие, Строка(Новый УникальныйИдентификатор), РезультатОтправки));
	ПодключитьОтложенноеДействие(ОтложенноеДействие);

КонецПроцедуры
	
