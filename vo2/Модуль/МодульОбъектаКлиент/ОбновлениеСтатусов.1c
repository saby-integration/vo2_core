
// Функция - применяет изменения по документам ЭД в 1С
//
// Параметры:
//  ПараметрыОбновленияВходящие	 - 	 - 
//  ДопПараметры				 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ОбновитьИзмененияПоДокументамСбис(ПараметрыОбновленияВходящие, ДопПараметры) Экспорт
	Перем МодульРаботыСоСтатусами1С, МеткиПользовательские, ДопПараметрыФильтра, ДействиеОбновления, ЕстьОбработкаПрерывания;
	Кэш		= ГлавноеОкно.Кэш;
	Отказ	= Ложь;
	ПараметрыБлокировкиСтатусов	= Новый Структура("Ключ, Пользователь, Значение", "status_update",	ГлавноеОкно.Пользователь);
	ПараметрыБлокировкиСтатусов.Вставить("Идентификатор",	Кэш.ТекущийСеанс.Параметры.Идентификатор);
	ПараметрыБлокировкиСтатусов.Вставить("Режим",			Кэш.Парам.СпособХраненияМетокСтатусов);
	ПараметрыБлокировкиСтатусов.Вставить("Аккаунт",			Кэш.Интеграция.ПолучитьИдТекущегоАккаунта(Кэш));
	
	ПараметрыБлокировкиСтатусов.Значение = ПрочитатьОбщиеНастройки(ПараметрыБлокировкиСтатусов.Ключ);
	ДопПараметрыВызовов			= Новый Структура("ВернутьОшибку, СообщатьПриОшибке", Истина, Ложь);
		
	ГлавноеОкно.СбисПоказатьСостояние("Подготовка обновления статусов");

	//Тут ищем новую функцию. Переназначение на старые обработчики происходит внутри типовой формы работы со статусами
	МодульРаботыСоСтатусамиСБИС		= ГлавноеОкно.СбисНайтиФормуФункции("СбисЗаписатьИзмененияПоДокументам1С",	ГлавноеОкно.Кэш.ФормаРаботыСоСтатусами,	"");
	МодульОбработкиСпискаИзменений	= ГлавноеОкно.сбисНайтиФормуФункции("ОбработатьСписокИзменений",			"РаботаСДокументами1С",		"");
	МодульРаботыСоСтатусами1С		= Ложь;
	Если ГлобальныйКэш.Парам.СостояниеЭД Тогда
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ИмяФункции",	"ЗаписатьИзмененияПоДокументам1С");
		ПараметрыПоиска.Вставить("КлючФорм",	"Статусы_СостоянияЭД");
		МодульРаботыСоСтатусами1С = Кэш.ОбщиеФункции.СбисНайтиФормуФункцииПодсистемы(Кэш, ПараметрыПоиска);
	КонецЕсли;
	Если Не ПараметрыОбновленияВходящие.Свойство("РезультатДействия", ДействиеОбновления) Тогда
		ДействиеОбновления = НовыйРезультатДействия(Новый Структура("Тип", "ОбновлениеСтатусов"), Новый Структура);
	КонецЕсли;
		
	ДействиеОбновления.Параметры.Метки = Новый Структура("ДатаПоследнегоЗапросаСтатусов, ИдентификаторПоследнегоСобытия, ДатНачЧтенияСтатусов, ДатКнцЧтенияСтатусов",
			ГлавноеОкно.ДатаПоследнегоЗапросаСтатусов,
			ГлавноеОкно.ИдентификаторПоследнегоСобытия,
			ГлавноеОкно.ДатНачЧтенияСтатусов,
			ГлавноеОкно.ДатКнцЧтенияСтатусов);
	Если ПараметрыОбновленияВходящие.Свойство("Метки", МеткиПользовательские) Тогда
		ЗаполнитьЗначенияСвойств(ДействиеОбновления.Параметры.Метки, МеткиПользовательские);
	КонецЕсли;
	Если Не ПараметрыОбновленияВходящие.Свойство("ДополнительныеПараметрыФильтра",	ДопПараметрыФильтра) Тогда
		ДопПараметрыФильтра = Новый Структура;
	КонецЕсли;
	Если Не ПараметрыОбновленияВходящие.Свойство("ОбработкаПрерывания",	ЕстьОбработкаПрерывания) Тогда
		ЕстьОбработкаПрерывания = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДействиеОбновления.Параметры.Метки.ДатаПоследнегоЗапросаСтатусов) Тогда
		ДействиеОбновления.Параметры.Метки.ДатаПоследнегоЗапросаСтатусов = НачалоДня(Кэш.Интеграция.СБИС_ТекущаяДата(Кэш));
	КонецЕсли;
	
	ДопПараметрыОбновления = Новый Структура("Кэш, ДопПараметрыФильтра", ГлавноеОкно.Кэш, ДопПараметрыФильтра);
	ДопПараметрыОбновления.Вставить("ПараметрыБлокировки",	ПараметрыБлокировкиСтатусов);
	Если МодульРаботыСоСтатусамиСБИС = Ложь Тогда
		СбисИсключение = НовыйСбисИсключение(, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеСтатусов",779,,"Не удалось определить модуль для обработки статусов СБИС");
		СтрокаДетализации = Кэш.ОбщиеФункции.РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ОбновлениеСтатусов", Новый Структура("Название", "Обновление статусов"));
		Кэш.ОбщиеФункции.РезультатДействия_ДобавитьОшибку(Кэш, ДействиеОбновления, СтрокаДетализации, СбисИсключение);
		Возврат ДействиеОбновления;
	Иначе
		ДопПараметрыОбновления.Вставить("МодульСтатусовСбис",	МодульРаботыСоСтатусамиСБИС);
	КонецЕсли;
	Если Не МодульРаботыСоСтатусами1С = Ложь Тогда
		ДопПараметрыОбновления.Вставить("МодульСтатусов1С",		МодульРаботыСоСтатусами1С);
	КонецЕсли;
	Если Не МодульОбработкиСпискаИзменений = Ложь Тогда
		ДопПараметрыОбновления.Вставить("МодульОбработкиСписка",МодульОбработкиСпискаИзменений);
	КонецЕсли;
	Если ПараметрыОбновленияВходящие.Свойство("ОбработчикЗавершения") Тогда
		ДопПараметрыОбновления.Вставить("ОбработчикПослеЗавершения", ПараметрыОбновленияВходящие.ОбработчикЗавершения);
	КонецЕсли;
	
	ОбработкаЗавершения		= НовыйСбисОписаниеОповещения("ОбновитьИзмененияПоДокументамСбис_Завершение", ГлавноеОкно.МодульОбъектаКлиент(), ДопПараметрыОбновления);
	ОтложенноеЗавершение	= НовыйОтложенноеДействие(Новый Структура("ОписаниеОповещения, Аргумент", ОбработкаЗавершения, ДействиеОбновления));
	Если ЕстьОбработкаПрерывания Тогда
		//На случай прерывания пользователем, отложенное завершение обновления
		ПодключитьОтложенноеДействие(ОтложенноеЗавершение);
	КонецЕсли;
	Пока ДействиеОбновления.Параметры.ПродолжатьЗапрос Цикл
		Попытка
			СбисВыполнитьОбновлениеПачкиСтатусов(ДействиеОбновления, ДопПараметрыОбновления);
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СтрокаДетализации = Кэш.ОбщиеФункции.РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ОбновлениеСтатусов", Новый Структура("Название", "Обновление статусов"));
			Кэш.ОбщиеФункции.РезультатДействия_ДобавитьОшибку(Кэш, ДействиеОбновления, СтрокаДетализации, НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеСтатусов"));
			Прервать;
		КонецПопытки;
		//СохранитьМеткиСтатусов(Кэш);
		Если ЕстьОбработкаПрерывания Тогда
			ОбработкаПрерыванияПользователя();
		КонецЕсли;
	КонецЦикла;
	Если ЕстьОбработкаПрерывания Тогда
		//Если не прерывалось, то отключить отложенное действие и выполнить завершение в обычном режиме.
		ОтключитьОтложенноеДействие(Новый Структура("ОтложенноеДействие", ОтложенноеЗавершение));
	КонецЕсли;
	ВыполнитьСбисОписаниеОповещения(ДействиеОбновления, ОбработкаЗавершения); 
	Возврат ДействиеОбновления;
КонецФункции

// Процедура - завершает обновление статусов - снимает блокировку на чтение изменений, обновляет метки
//
// Параметры:
//  ДействиеОбновления	 - 	 - 
//  ДопПараметры				 - 	 - 
//
&НаКлиенте
Процедура  ОбновитьИзмененияПоДокументамСбис_Завершение(ДействиеОбновления, ДопПараметры) Экспорт
	Кэш = ДопПараметры.Кэш;
	Попытка	
		РазблокироватьСтатусыСбис(ДопПараметры.ПараметрыБлокировки);
	Исключение
		СтрокаДетализации = Кэш.ОбщиеФункции.РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ОбновлениеСтатусов", Новый Структура("Название", "Обновление статусов"));
		ИнфоОбОшибке = ИнформацияОбОшибке();
		Кэш.ОбщиеФункции.РезультатДействия_ДобавитьОшибку(Кэш, ДействиеОбновления, СтрокаДетализации, НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеСтатусов_Завершение"));
	КонецПопытки;
	
	//При успешном выполнении добавить строку в результат для вывода сообщения 
	Если Не ДействиеОбновления.Всего.ОшибокВыполнения И Не ДействиеОбновления.Всего.ОшибокПодготовки Тогда
		СтрокаДетализации = Кэш.ОбщиеФункции.РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ОбновлениеСтатусов", Новый Структура("Название", "Обновление статусов"));
		СтрокаДетализации.Состояние = "Завершено";
		СтрокаДетализации.Сообщение = "Статусы обновлены до " + Формат(ДействиеОбновления.Параметры.Метки.ДатаПоследнегоЗапросаСтатусов, "ДФ=dd.MM.yyyy");
		Кэш.ОбщиеФункции.РезультатДействия_ДобавитьРезультат(Кэш, ДействиеОбновления, СтрокаДетализации, Новый Структура("Выполнено, КлючГруппировки, Считать", Истина, "Статусы обработаны", Ложь));
	КонецЕсли;

	ЗаполнитьЗначенияСвойств(ГлавноеОкно, ДействиеОбновления.Параметры.Метки);
	СохранитьМеткиСтатусов(Кэш);
	ГлавноеОкно.СбисСпрятатьСостояние(ГлавноеОкно);
	Если ДопПараметры.Свойство("ОбработчикПослеЗавершения") Тогда
		ВыполнитьСбисОписаниеОповещения(ДействиеОбновления, ДопПараметры.ОбработчикПослеЗавершения);
	КонецЕсли;
КонецПроцедуры

// Процедура - выполняет обновление пачки статусов
//
// Параметры:
//  ДействиеОбновления	 - объект РезультатДействия	 - описание и параметры запущенной операции обновления
//  ДопПараметры		 - Структура	 - Кэш, ПараметрыБлокировки, модули для записи изменений в 1С
//
&НаКлиенте
Процедура СбисВыполнитьОбновлениеПачкиСтатусов(ДействиеОбновления, ДопПараметры) Экспорт
	Перем 	ПоследнееСобытие, ПоследнееСобытиеСИД, ТекущееСобытие; 
	
	Кэш					= ДопПараметры.Кэш;
	СтруктураНастроек	= ДействиеОбновления.Параметры.Метки;	

	ГлавноеОкно.СбисПоказатьСостояние(СтрЗаменить(ДействиеОбновления.Параметры.СтрокаСостояния, "{счетчик}", ДействиеОбновления.Параметры.СчетчикСобытий), ГлавноеОкно,, "(прервать -  Ctrl+Break)");

	СтруктураНастроек.ДатНачЧтенияСтатусов = Кэш.Интеграция.СБИС_ТекущаяДата(Кэш);
	СтрокаДетализации = Кэш.ОбщиеФункции.РезультатДействия_СформироватьСтрокуДетализации(Кэш, "ОбновлениеСтатусов", Новый Структура("Название", "Обновление статусов"));

	Попытка	
		ЗаблокироватьСтатусыСбис(СтруктураНастроек, ДопПараметры.ПараметрыБлокировки);
		ДатаДоЗапросаСписка = Кэш.Интеграция.СБИС_ТекущаяДата(Кэш);
		СписокИзменений = СбисВыполнитьЧтениеИзменений(ДействиеОбновления, ДопПараметры);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеПачкиСтатусов");
	КонецПопытки;
	
	ДействиеОбновления.Параметры.СчетчикПачек		= ДействиеОбновления.Параметры.СчетчикПачек + 1;
	ДействиеОбновления.Параметры.ПродолжатьЗапрос	= СписокИзменений.Навигация.ЕстьЕще = "Да";

	МассивДокументов = Новый Массив;

#Область include_core_ТребуетРефактор_Модуль_ОбновлениеСтатусов
#КонецОбласти

	СтруктураНастроек.ДатКнцЧтенияСтатусов = Кэш.Интеграция.СБИС_ТекущаяДата(Кэш);
	
	ГлавноеОкно.СбисПоказатьСостояние(СтрЗаменить(ДействиеОбновления.Параметры.СтрокаСостояния, "{счетчик}", ДействиеОбновления.Параметры.СчетчикСобытий),,, "(прервать -  Ctrl+Break)");
	
	//Взять с последнего обработанного события его ИД и дату время для метки. В случае, даже если ИД потрётся, запрос продолжится от даты последнего события
	Если ЗначениеЗаполнено(ПоследнееСобытие) Тогда
		Если ПоследнееСобытиеСИД = Неопределено Тогда
			//События есть, но в них нет ИД и времени. Поставить для фильтра дату.
			СообщениеДеталиазции = "Неверный формат списка: отсутствует описание событий документов. Часть статусов в диапазоне от "+ СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов + " до " + ДатаДоЗапросаСписка + " может быть пропущена.";
			СтруктураНастроек.ИдентификаторПоследнегоСобытия	= "";
			СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов		= ДатаДоЗапросаСписка;
			ВызватьСбисИсключение(, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеПачкиСтатусов",726,,СообщениеДеталиазции);
		Иначе
			СтруктураНастроек.ИдентификаторПоследнегоСобытия	= ПоследнееСобытиеСИД.Идентификатор;
			СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов		= ПоследнееСобытиеСИД.ДатаВремя;
		КонецЕсли;
		ДействиеОбновления.Параметры.ЕстьИзменения = Истина;
	ИначеЕсли Не СписокИзменений.Документ.Количество() Тогда
		Возврат;
	Иначе
		//Либо список документов есть, но у всех список событий пуст, дату/идентификатор никак не обновить.
		СообщениеДеталиазции = "Неверный формат списка: отсутствует описание событий документов. Часть статусов в диапазоне от "+ СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов + " до " + ДатаДоЗапросаСписка + " может быть пропущена.";
		СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов		= ДатаДоЗапросаСписка;
		СтруктураНастроек.ИдентификаторПоследнегоСобытия	= "";
		ВызватьСбисИсключение(, "МодульОбъектаКлиент.СбисВыполнитьОбновлениеПачкиСтатусов",726,,СообщениеДеталиазции);
	КонецЕсли;
	
	ДопПараметры.МодульСтатусовСбис.СбисЗаписатьИзмененияПоДокументам1С(Кэш, МассивДокументов, Новый Структура("ИдАккаунта", Кэш.Интеграция.ПолучитьИдТекущегоАккаунта(Кэш)));
	Если ДопПараметры.Свойство("МодульСтатусов1С") Тогда        
		ДопПараметры.МодульСтатусов1С.ЗаписатьИзмененияПоДокументам1С(МассивДокументов, Кэш.Ини, ГлавноеОкно.Кэш.Парам.КаталогНастроек);
	КонецЕсли;                             
	Если ДопПараметры.Свойство("МодульОбработкиСписка") Тогда
		ДопПараметры.МодульОбработкиСписка.ОбработатьСписокИзменений(МассивДокументов, Кэш);	
	КонецЕсли;
	//Считаем без детализации, т.к. пока нечего детализировать
	Кэш.ОбщиеФункции.РезультатДействия_ДобавитьРезультат(Кэш, ДействиеОбновления,, Новый Структура("Выполнено, КлючГруппировки", Истина, "Статусы обработаны"));
	
	СтруктураНастроек.ДатКнцЧтенияСтатусов = Кэш.Интеграция.СБИС_ТекущаяДата(Кэш);
	Если СписокИзменений.Свойство("ОбработчикПослеИзменений") Тогда
		//Для интеграции через каталог надо почистить файлы после обработки
		ВыполнитьСбисОписаниеОповещения(ДействиеОбновления, СписокИзменений.ОбработчикПослеИзменений);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СбисВыполнитьЧтениеИзменений(ДействиеОбновления, ДопПараметры) Экспорт
	
	Кэш		= ДопПараметры.Кэш;
	Отказ	= Ложь;
	СтруктураНастроек = ДействиеОбновления.Параметры.Метки;
	
	filter = Новый Структура("ПолныйСертификатЭП", "Нет"); 
	Если ЗначениеЗаполнено(СтруктураНастроек.ИдентификаторПоследнегоСобытия) Тогда
		filter.Вставить("ИдентификаторСобытия", СтруктураНастроек.ИдентификаторПоследнегоСобытия);	
	Иначе
		filter.Вставить("ДатаВремяС", Формат(СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов, "ДФ=""дд.ММ.гггг ЧЧ.мм.сс""")); 
	КонецЕсли;
	Для Каждого ДопПарам Из ДопПараметры.ДопПараметрыФильтра Цикл
		filter.Вставить(ДопПарам.Ключ, ДопПарам.Значение);     
	КонецЦикла;
	
	navigation = Новый Структура; 
	navigation.Вставить("РазмерСтраницы", "100"); 
	filter.Вставить("Навигация", navigation);
	//navigation.Вставить( "ВернутьРазмерСписка", "Да" );
	
	Результат = Кэш.Интеграция.СБИС_СписокИзменений(Кэш, filter, Новый Структура, Отказ);
	Если Отказ Тогда
		//Если проблемы с соединением, то просто закончим работу.
		Если	Результат.code = 775
			Или	Результат.code = 400 Тогда
			ВызватьСбисИсключение(Результат, "МодульОбъектаКлиент.СбисВыполнитьЧтениеИзменений");
		КонецЕсли;
		
		//Пытаемся воостановить цепочку по дату, если в первый проход событие не было найдено (возможно, было удалено).
		Если	Не	(	ЗначениеЗаполнено(СтруктураНастроек.ИдентификаторПоследнегоСобытия)
					И	ДействиеОбновления.Параметры.ЕстьИзменения) Тогда
			//СохранитьМеткиСтатусов(Кэш);
			ВызватьСбисИсключение(Результат, "МодульОбъектаКлиент.СбисВыполнитьЧтениеИзменений");
		КонецЕсли;
		
		//Если событие на онлайне удалили, то пытаемся по дате запросить
		filter = Новый Структура;
		filter.Вставить("ПолныйСертификатЭП",	"Нет");
		filter.Вставить("ДатаВремяС",			Формат(СтруктураНастроек.ДатаПоследнегоЗапросаСтатусов,"ДФ=""дд.ММ.гггг ЧЧ.мм.сс""") );
		filter.Вставить("Навигация",			navigation );
		Для Каждого ДопПарам Из ДопПараметры.ДопПараметрыФильтра Цикл
			filter.Вставить( ДопПарам.Ключ, ДопПарам.Значение);     
		КонецЦикла;
		
		Отказ = Ложь;
		Результат = Кэш.Интеграция.СБИС_СписокИзменений(Кэш, filter, Новый Структура, Отказ);
		Если Отказ Тогда
			ВызватьСбисИсключение(Результат, "МодульОбъектаКлиент.СбисВыполнитьЧтениеИзменений");
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции
	
//Проверка блокировки обновления статусов. Если другой пользователь запустил обработку статусов.
&НаКлиенте
Процедура РазблокироватьСтатусыСбис(ПараметрыБлокировкиСтатусов)
	Попытка
		Если ПараметрыБлокировкиСтатусов.Значение = Неопределено Тогда
			ПараметрыБлокировкиСтатусов.Значение = Новый Соответствие;
		КонецЕсли;
		ПараметрыБлокировкиСтатусов.Значение.Удалить(ПараметрыБлокировкиСтатусов.Идентификатор);
		СохранитьОбщуюНастройку(ПараметрыБлокировкиСтатусов.Ключ, ПараметрыБлокировкиСтатусов.Значение);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисЗаблокироватьСтатусы");		
	КонецПопытки;
КонецПроцедуры

//Проверка блокировки обновления статусов. Если другой пользователь запустил обработку статусов.
&НаКлиенте
Процедура ЗаблокироватьСтатусыСбис(СтруктураМетокСтатусов, ПараметрыБлокировкиСтатусов)
	Попытка
		Если ПараметрыБлокировкиСтатусов.Значение = Неопределено Тогда
			ПараметрыБлокировкиСтатусов.Значение = Новый Соответствие;
		Иначе
			ПроверитьБлокировкуСтатусовСбис(СтруктураМетокСтатусов, ПараметрыБлокировкиСтатусов);
		КонецЕсли;
		ОбновлениеЗапущено	= ПараметрыБлокировкиСтатусов.Значение;
		ТекущаяБлокировка = ОбновлениеЗапущено.Получить(ПараметрыБлокировкиСтатусов.Идентификатор);
		Если ТекущаяБлокировка = Неопределено Тогда
			//Таймаут 10 минут на блокировку.
			ТекущаяБлокировка = Новый Структура("user, account, timeout, date_begin", ПараметрыБлокировкиСтатусов.Пользователь, ПараметрыБлокировкиСтатусов.Аккаунт, 600);
		КонецЕсли;
		//Обновить дату начала по текущим меткам
		ТекущаяБлокировка.date_begin = СтруктураМетокСтатусов.ДатНачЧтенияСтатусов;
		ОбновлениеЗапущено.Вставить(ПараметрыБлокировкиСтатусов.Идентификатор, ТекущаяБлокировка);
		СохранитьОбщуюНастройку(ПараметрыБлокировкиСтатусов.Ключ, ПараметрыБлокировкиСтатусов.Значение);
	Исключение
		ИнфоОбОшибке = ИнформацияОбОшибке();
		ВызватьСбисИсключение(ИнфоОбОшибке, "МодульОбъектаКлиент.СбисЗаблокироватьСтатусы");		
	КонецПопытки;
КонецПроцедуры

//Проверка блокировки обновления статусов. Если другой пользователь запустил обработку статусов.
&НаКлиенте
Процедура ПроверитьБлокировкуСтатусовСбис(СтруктураМетокСтатусов, ПараметрыБлокировкиСтатусов)
    Перем ОперацияПроверкиСтатусов, ОбновлениеЗапущено;
	
	ДатаПроверки = ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.СБИС_ТекущаяДата(ГлавноеОкно.Кэш);
	КлючиИстекли = Новый Массив;
	ОбновлениеЗапущено = ПараметрыБлокировкиСтатусов.Значение;
	Для Каждого КлючИЗначениеБлокировки Из ОбновлениеЗапущено Цикл
		Если		КлючИЗначениеБлокировки.Ключ = ПараметрыБлокировкиСтатусов.Идентификатор Тогда
			//Это текущий сеанс
			Продолжить;
		ИначеЕсли	ДатаПроверки - КлючИЗначениеБлокировки.Значение.date_begin >= КлючИЗначениеБлокировки.Значение.timeout Тогда
			//У блокировки истёк таймаут
			КлючиИстекли.Добавить(КлючИЗначениеБлокировки.Ключ);
		ИначеЕсли	ПараметрыБлокировкиСтатусов.Режим	= 2 Тогда
			//В рамках ИС - обновление блокируется при любом пользователе
			ВызватьСбисИсключение(,"МодульОбъектаКлиент.СбисПроверитьБлокировкуСтатусов", 710, "Ошибка блокировки данных", "Обновление статусов уже выполняется по запросу пользователя: " + КлючИЗначениеБлокировки.Значение.user); 
		ИначеЕсли	ПараметрыБлокировкиСтатусов.Режим	= 1 Тогда
			//В рамках аккаунта - если уже запущено от того же аккаунта
			Если	ПараметрыБлокировкиСтатусов.Аккаунт	= КлючИЗначениеБлокировки.Значение.account Тогда
				ВызватьСбисИсключение(,"МодульОбъектаКлиент.СбисПроверитьБлокировкуСтатусов", 710, "Ошибка блокировки данных", "Обновление статусов уже выполняется по запросу Вашего аккаунта."); 
			КонецЕсли;
		//В рамках пользователя
		ИначеЕсли	ПараметрыБлокировкиСтатусов.Пользователь= КлючИЗначениеБлокировки.Значение.user Тогда
			ВызватьСбисИсключение(,"МодульОбъектаКлиент.СбисПроверитьБлокировкуСтатусов", 710, "Ошибка блокировки данных", "Обновление статусов уже выполняется по запросу Вашего пользователя."); 
		//Иначе
		//	ВызватьСбисИсключение(,"МодульОбъектаКлиент.СбисПроверитьБлокировкуСтатусов", 710, "Ошибка блокировки данных", "Обновление статусов уже выполняется по запросу пользователя: " + КлючИЗначениеБлокировки.Значение.Пользователь); 
		КонецЕсли;
	КонецЦикла;
	Для Каждого КлючИстек Из КлючиИстекли Цикл 
		ОбновлениеЗапущено.Удалить(КлючИстек);
	КонецЦикла;
КонецПроцедуры

