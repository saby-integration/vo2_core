
// Процедура - Сообщает сбис исключение
//
// Параметры:
//  СбисИсключение	 - Структура	 - экземпляр ExtSysException(СбисИсключение)
//  ДопПараметры	 - Структура	 - 
//		СтатусСообщения		- Строка	- статус сообщения: "warning" - показать форму предупреждения со ссылкой на решение проблемы. "attention" - показать форму ошибки, "message" - вывод в обычном режиме
//		Отправлять			- Булево, признак отключения отправки ошибки в статистику
//
&НаКлиенте
Процедура СообщитьСбисИсключение(ИсключениеВходящее, ДопПараметры=Неопределено) Экспорт
	Перем СтатусОшибки, лРешениеПроблемы, лФормаВладелец, лОтправлятьОшибку;
	Если		ТипЗнч(ИсключениеВходящее) = Тип("ИнформацияОбОшибке") Тогда
		СбисИсключение = НовыйСбисИсключение(ИсключениеВходящее, ДопПараметры.ИмяКоманды);
	ИначеЕсли 	Не	ТипЗнч(ИсключениеВходящее) = Тип("Структура")
			Или Не	ИсключениеВходящее.Свойство("message")
			Или	Не	ИсключениеВходящее.Свойство("details") Тогда
		Возврат;
	Иначе
		СбисИсключение = ИсключениеВходящее;
	КонецЕсли;
	ТекстОшибки = СбисИсключение_Представление(ИсключениеВходящее);
	Если ГлобальныйКэш.Парам.РежимОтладки Тогда
		
		Попытка
			СбисПоследняяЗаписьСтек = СбисИсключение.stack[0].methodName;
		Исключение
			СбисПоследняяЗаписьСтек	= "МодульОбъектаКлиент.СообщитьСбисИсключение";
		КонецПопытки;
		ИмяМодуля = СтрПолучитьСтроку(СтрЗаменить(СбисПоследняяЗаписьСтек, ".", Символы.ПС), 1);
		ИмяВызова = СтрПолучитьСтроку(СтрЗаменить(СбисПоследняяЗаписьСтек, ".", Символы.ПС), 2);
		ПолныйТекстСообщения = СбисРаботаСJson.ПреобразоватьЗначениеВJson(СбисИсключение);
		лОтладочныеДанные = Новый Структура(
		"Тип,		Модуль,		Вызов,		Время,			Идентификатор,		Сообщение", 
		"ERROR",	ИмяМодуля,	ИмяВызова,	ТекущаяДата(),	СбисИсключение.code,ПолныйТекстСообщения);
		ДанныеВЛог = Новый Массив;
		ДанныеВЛог.Добавить(лОтладочныеДанные);
		СохранитьОтладочныеДанныеСБИС(Новый Структура("Log", ДанныеВЛог));
		
	КонецЕсли;
	
	Если ГлобальныйКэш.ТихийРежим Тогда
		Возврат;
	КонецЕсли;
	
	Если	ДопПараметры = Неопределено
		Или Не	ДопПараметры.Свойство("СтатусСообщения", СтатусОшибки) Тогда
		
		Если СбисИсключение.Свойство("help", лРешениеПроблемы)
			И	ЗначениеЗаполнено(лРешениеПроблемы) Тогда
			СтатусОшибки = "warning";
		Иначе
			СтатусОшибки = "attention";
		КонецЕсли;
		
	КонецЕсли;
	Если 		ДопПараметры = Неопределено
		Или	Не	ДопПараметры.Свойство("ФормаВладелец", лФормаВладелец) Тогда
		//лФормаВладелец = ГлавноеОкно;
	КонецЕсли;
	Если 		ДопПараметры = Неопределено
		Или	Не	ДопПараметры.Свойство("Отправлять", лОтправлятьОшибку) Тогда
		лОтправлятьОшибку = Истина;
	КонецЕсли;
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("ТекстСсылка",		"Решение проблемы");
	ПараметрыСообщения.Вставить("Текст",			ТекстОшибки);
	ПараметрыСообщения.Вставить("АдресСсылка",		лРешениеПроблемы);
	ПараметрыСообщения.Вставить("ФормаВладелец",	лФормаВладелец);
	лОтправлятьОшибку = лОтправлятьОшибку И Не СбисИсключение.code = 775;
	Если		СтатусОшибки = "warning" Тогда
		ФормаПредупреждение = ГлавноеОкно.СбисПолучитьФорму("ФормаПредупреждения",,,лФормаВладелец);
		ФормаПредупреждение.Показать(ГлобальныйКэш, ПараметрыСообщения);
	ИначеЕсли	СтатусОшибки = "attention" Тогда
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			фрм						= ГлавноеОкно.СбисПолучитьФорму("ФормаОшибка",,,лФормаВладелец);
			фрм.ТекстОшибки			= ТекстОшибки;
			фрм.ИнформацияОбОшибке	= "";
			фрм.ОткрытьМодально(60);
		#Иначе
			СбисСообщить(ПараметрыСообщения); 
		#КонецЕсли
	ИначеЕсли СтатусОшибки = "platform_warning" Тогда
		
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Предупреждение(ТекстОшибки);
		#Иначе
			ПоказатьПредупреждение(,ТекстОшибки);
		#КонецЕсли
		
	Иначе
		СбисСообщить(ПараметрыСообщения); 
	КонецЕсли;
	//Если не отключено, то отправим информацию о возникшей ошибке
	Если лОтправлятьОшибку Тогда	
		сбисПараметрыСтатистики = Новый Структура("Действие, Ошибка", "Ошибка", СбисИсключение);
		Попытка
			СбисСтатистика_СформироватьИЗаписать(сбисПараметрыСтатистики, Новый Структура);	
		Исключение
			ИнфоОбОшибке = ИнформацияОбОшибке();
			СообщитьСбисИсключение(НовыйСбисИсключение(ИнфоОбОшибке, "МодульОбъектКлиент.СформироватьИЗаписатьСтатистикуНаСервис"), Новый Структура("Отправлять", Ложь));
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры

// Функция - Конструктор ExtSysException с проброской через ВызватьИсключение
//
// Параметры:
//  БазоваяОшибка	- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//  СбисИмяКоманды	- Имя команды в стек
//  СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100.				если в БазовойОшибке неопределен код
//  СбисСообщение	- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределено сообщение 
//  СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределена детализация
//  СбисДамп		- (необяз)дамп ошибки
//  СбисХелп		- (необяз)ссылка на решение проблемы
//
&НаСервере
Процедура ВызватьСбисИсключение(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
								СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено,
								СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
								
	МодульОбъектаСервер().ВызватьСбисИсключениеСервер(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	
КонецПроцедуры

// Функция - Конструктор ExtSysException
//
// Параметры:
//  БазоваяОшибка	- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//  СбисИмяКоманды	- Имя команды в стек
//  СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100.				если в БазовойОшибке неопределен код
//  СбисСообщение	- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределено сообщение 
//  СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду.	если в БазовойОшибке неопределена детализация
//  СбисДамп		- (необяз)дамп ошибки
//  СбисХелп		- (необяз)ссылка на решение проблемы
// 
// Возвращаемое значение:
//  Структура - ExtSysException - code, message, detail, dump, help, stack
//
&НаСервере
Функция НовыйСбисИсключение(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
							СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено, 
							СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
							
	Возврат МодульОбъектаСервер().НовыйСбисИсключениеСервер(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	
КонецФункции


&НаКлиенте
Функция СбисИсключение_Представление(СбисИсключение) Экспорт
	
	Результат = СбисИсключение.message;
	Если	СбисИсключение.Свойство("details")
		И	СбисИсключение.message <> СбисИсключение.details Тогда 
		Результат = Результат + " (" + СбисИсключение.details + ")";
	КонецЕсли;
	Возврат Результат;

	
КонецФункции

