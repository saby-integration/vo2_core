
// Функция получает значение по указанному пути	
//
// Параметры:
//  ПараметрыДанные	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ПолучитьДанныеПоПути(ПараметрыДанные, ДопПараметры = Неопределено) Экспорт
	
	ПутьКДаннымФайла	= СтрЗаменить(СтрЗаменить(СтрЗаменить(ПараметрыДанные.Путь, ".", Символы.ПС), "[", Символы.ПС), "]", "");
	ЗначениеРеквизита	= ПараметрыДанные.Данные;
	
	Для НомерСтроки = 1 По СтрЧислоСтрок(ПутьКДаннымФайла) Цикл
		Узел = СтрПолучитьСтроку(ПутьКДаннымФайла, НомерСтроки);
		Если ТипЗнч(ЗначениеРеквизита) = Тип("Структура") Тогда
			ЗначениеРеквизита.Свойство(Узел, ЗначениеРеквизита);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Соответствие") Тогда
			ЗначениеРеквизита = ЗначениеРеквизита.Получить(Узел);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Массив") Тогда 
			//1190217292    
			Попытка
				ЗначениеРеквизита = ЗначениеРеквизита.Получить(Число(Узел));  
			Исключение
				Возврат Неопределено;
			КонецПопытки;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

&НаКлиенте
Процедура СформироватьВходящийКонтекстНаВложении(Параметры, ДопПараметры = Неопределено) Экспорт
	
	ПодготовленныеПараметрыКонтекста = Параметры.ПодготовленныеПараметрыКонтекста;
	
	Если НЕ Параметры.Вложение = Неопределено Тогда		
		Если Не Параметры.Вложение.Свойство("ВходящийКонтекст") Тогда
			Параметры.Вложение.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
		КонецЕсли;
		
		Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
			
			Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И Параметры.Вложение.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
				Продолжить;	
			КонецЕсли;
			
			Параметры.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
			
		КонецЦикла;
	Иначе
		
		Для Каждого ВложениеПакета Из Параметры.СоставПакета.Вложение Цикл
			
			Если Не ВложениеПакета.Свойство("ВходящийКонтекст") Тогда
				ВложениеПакета.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
			КонецЕсли;
			
			Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
				
				Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И ВложениеПакета.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
					Продолжить;	
				КонецЕсли;
				
				ВложениеПакета.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Дополняет данные сторон по пакету данными, сопоставленными в маппинге
//
// Параметры:
//  ДанныеСторон  - <Структура> - данные сторон:
//						- ДанныеКонтрагента 	- <Структура> - ИНН, КПП, GLN, КодФилиала 
//						- ДанныеОрганизации 	- <Структура> - ИНН, КПП, GLN, КодФилиала
//						- ДанныеГрузополучателя - <Структура> - ИНН, КПП, GLN, КодФилиала
//
&НаКлиенте
Процедура ОбогатитьСсылкиСторонПоКлючам(ДанныеСторон, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш;
	
	ПараметрыПолучения	= Новый Массив;
	ТипыСторон			= ТипыСторонДляМаппинга();
	
	Для Каждого КлючИЗначениеСторона Из ДанныеСторон Цикл
		
		СторонаОписание = КлючИЗначениеСторона.Значение;
		Если СторонаОписание = Неопределено Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ПараметрыПолучитьСторону = Новый Структура("Данные, Сторона");
		ЗаполнитьЗначенияСвойств(ПараметрыПолучитьСторону, СторонаОписание);
		
		Если КлючИЗначениеСторона.Ключ = "ДанныеОрганизации" Тогда
			
			ТипОбъекта = "НашаОрганизация";
			
		Иначе
			
			ТипОбъекта = "Контрагент";
			
		КонецЕсли;
		ПараметрыПолучитьСторону.Вставить("Тип",	ТипОбъекта);
		ПараметрыПолучитьСторону.Вставить("Тип1С",	ТипыСторон[КлючИЗначениеСторона.Ключ]);
		ПараметрыПолучения.Добавить(ПараметрыПолучитьСторону);
		
	КонецЦикла;
	
	СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
	
	// Переделать обрабокту ошибок по маппингу
	Если Не СопоставленныеДанныеСторон = Ложь Тогда
		
		Для Каждого СопоставленнаяСторона Из СопоставленныеДанныеСторон Цикл
			Если	Не ЗначениеЗаполнено(СопоставленнаяСторона.ClientId)
				Или Не ЗначениеЗаполнено(СопоставленнаяСторона.ClientType) Тогда 
				
				Продолжить;
				
			КонецЕсли;
			
			Сторона1С = ПолучитьУчастникаПоИд(СопоставленнаяСторона.ClientId, СопоставленнаяСторона.ClientType);
			Для Каждого КлючИЗначениеСторона Из ДанныеСторон Цикл
				СторонаОписание = КлючИЗначениеСторона.Значение;
				Если СторонаОписание = Неопределено Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				Сторона = СторонаОписание.Данные;
				Если	ТипыСторон[КлючИЗначениеСторона.Ключ] = СопоставленнаяСторона.ClientType
					И	Сторона.ИНН = СопоставленнаяСторона.SbisParam_1_1
					И	(		Сторона.КПП = СопоставленнаяСторона.SbisParam_1_2
						Или	Не	ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_2))
					И	(		Сторона.КодФилиала = СопоставленнаяСторона.SbisParam_1_3
						Или	Не	ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_3))
					// GLN нет на сторонах пакета, но вдруг появится...
					//И	?(Сторона.Значение.Свойство("GLN"),
					//	Сторона.Значение.GLN = СопоставленнаяСторона.SbisParam_2,
					//	НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_2)) 
					Тогда
					
					СторонаОписание.Ссылка = Сторона1С;
					Прервать;
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	
	КонецЕсли;
	
	МодульФайлШаблон	= ПолучитьФормуОбработки("Файл_Шаблон");
	ОбщиеФункции		= ПолучитьЗначениеПараметраТекущегоСеанса("ФункцииДокументов");
	
	ОбновитьОрганизация		= Ложь;
	ОбновитьКонтрагента		= Ложь;
	ОбновитьГрузополучателя	= Ложь;
	
	ДанныеОрганизации		= ДанныеСторон.ДанныеОрганизации;
	ДанныеКонтрагента		= ДанныеСторон.ДанныеКонтрагента;
	ДанныеГрузополучателя	= ДанныеСторон.ДанныеГрузополучателя;
	// Нет по маппингу, значит поищем сами в 1С
	Если НЕ ЗначениеЗаполнено(ДанныеОрганизации.Ссылка) Тогда
		
		ДанныеОрганизации.Ссылка	= Сторона_НайтиКарточку1С(ДанныеОрганизации.Сторона, Новый Структура("ТипСтороны", "Организация"));
		ОбновитьОрганизация			= ЗначениеЗаполнено(ДанныеОрганизации.Ссылка);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеКонтрагента.Ссылка) Тогда
		
		ДанныеКонтрагента.Ссылка	= Сторона_НайтиКарточку1С(ДанныеКонтрагента.Сторона, Новый Структура("ТипСтороны", "Контрагент"));
		ОбновитьКонтрагента			= ЗначениеЗаполнено(ДанныеКонтрагента.Ссылка);
		
	КонецЕсли;
	
	СравнениеКА_И_ГП = ПолучитьРасхождениеОбъектов(ДанныеКонтрагента.Данные, ДанныеГрузополучателя.Данные, Новый Структура);

	Если	НЕ ЗначениеЗаполнено(ДанныеГрузополучателя.Ссылка)
		И	НЕ ЗначениеЗаполнено(СравнениеКА_И_ГП) Тогда
		
		ДанныеГрузополучателя.Ссылка = ДанныеКонтрагента.Ссылка;
		
	ИначеЕсли НЕ	ЗначениеЗаполнено(ДанныеГрузополучателя.Ссылка)
			И		ПолучитьЗначениеПараметраСбис("ЗаполнениеКонтрагента1С") <> "ГрузополучательСБИС" Тогда
		
		ДанныеГрузополучателя.Ссылка = Сторона_НайтиКарточку1С(ДанныеГрузополучателя.Сторона, Новый Структура("ТипСтороны", "Контрагент"));
		ОбновитьГрузополучателя = ЗначениеЗаполнено(ДанныеГрузополучателя.Ссылка);
		
	Иначе
		
		ДанныеГрузополучателя.Ссылка = ДанныеКонтрагента.Ссылка;
		
	КонецЕсли;

	Если ПолучитьЗначениеПараметраСбис("ТипГрузополучателя") = "ГрузополучательПартнер" Тогда
		
		ДанныеГрузополучателя.Ссылка = ПолучитьПартнераПоКонтрагенту(ДанныеГрузополучателя.Ссылка);
	
	КонецЕсли;
	
	// Обновление на маппинге
	Если ОбновитьОрганизация Тогда

		ДанныеДляОбновления = Новый Структура("Данные, Ссылка, Сторона");
		ЗаполнитьЗначенияСвойств(ДанныеДляОбновления, ДанныеОрганизации);
		ДанныеДляОбновления.Вставить("Тип",					"НашаОрганизация"); 
		ДанныеДляОбновления.Вставить("ТипДанныхСтороны",	"ДанныеОрганизации");
		
		Маппинг_ОбновитьСторону1С(ДанныеДляОбновления);
		
	КонецЕсли;
		
	Если ОбновитьКонтрагента Тогда

		ДанныеДляОбновления = Новый Структура("Данные, Ссылка, Сторона");
		ЗаполнитьЗначенияСвойств(ДанныеДляОбновления, ДанныеКонтрагента);
		ДанныеДляОбновления.Вставить("Тип",					"Контрагент"); 
		ДанныеДляОбновления.Вставить("ТипДанныхСтороны",	"ДанныеКонтрагента");
		
		Маппинг_ОбновитьСторону1С(ДанныеДляОбновления);
		
	КонецЕсли;
		
	Если ОбновитьГрузополучателя Тогда

		ДанныеДляОбновления = Новый Структура("Данные, Ссылка, Сторона");
		ЗаполнитьЗначенияСвойств(ДанныеДляОбновления, ДанныеГрузополучателя);
		ДанныеДляОбновления.Вставить("Тип",					"Контрагент"); 
		ДанныеДляОбновления.Вставить("ТипДанныхСтороны",	"ДанныеГрузополучателя");
		
		Маппинг_ОбновитьСторону1С(ДанныеДляОбновления);
		
	КонецЕсли;

КонецПроцедуры
 
&НаКлиенте
Функция ТипыСторонИзИни(ИниКонфигурации)
	
	ОписаниеТипов = Новый Структура;
	ОписаниеТипов.Вставить("Организации",	ПолучитьТипМетаданных(ИниКонфигурации, "Организации"));
	ОписаниеТипов.Вставить("Контрагенты",	ПолучитьТипМетаданных(ИниКонфигурации, "Контрагенты"));
	ОписаниеТипов.Вставить("Партнеры",		ПолучитьТипМетаданных(ИниКонфигурации, "Партнеры"));
	
	Возврат ОписаниеТипов;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ТипыСторонСопоставления() Экспорт 

	ОписаниеКонфигурации = ИниПоПараметрам("Конфигурация");
	
	ОписаниеТипов = ТипыСторонИзИни(ОписаниеКонфигурации);
	
	ТипыСторон = Новый Структура;
	ТипыСторон.Вставить("ДанныеОрганизации", ОписаниеТипов.Организации);
	ТипыСторон.Вставить("ДанныеКонтрагента", ОписаниеТипов.Контрагенты);
	
	ТипГрузополучателя = ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	
	Если ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Контрагенты);
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Партнеры);
		
	Иначе 
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", Неопределено);
		
	КонецЕсли;
	
	Возврат ТипыСторон;

КонецФункции // ТипыСторонСопоставления()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПодготовитьСтороныКЗагрузкеДокумента(ДанныеСторон, ДопПараметры = Неопределено) Экспорт 

	ДанныеСторонСБИС	= ДанныеСторон.ДанныеСторонСБИС;
	ДанныеСтороны1С		= ДанныеСторон.ДанныеСторон1С;
	
	ЗаполнениеКонтрагента1С = ПолучитьЗначениеПараметраСбис("ЗаполнениеКонтрагента1С");
	ТипГрузополучателя		= ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	ЕстьПартнеры			=	ТипЗнч(ДопПараметры) = Тип("Структура")
							И	ДопПараметры.Свойство("ЕстьПартнеры")
							И	ДопПараметры.ЕстьПартнеры = Истина;
	
	Если ЗаполнениеКонтрагента1С = "ГрузополучательСБИС" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка), Неопределено));
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательНеВедется" Тогда 
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка), Неопределено)); 
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка), Неопределено)); 
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
		Если ЕстьПартнеры Тогда
			ПартнерыКонтрагента = ПолучитьКонтрагентовПоПартнеру(ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        	ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", ?(ПартнерыКонтрагента.Количество(), ПартнерыКонтрагента[0], Неопределено)); 
		Иначе 
			ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ПодготовитьСтороны()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПолучитьПартнераПоКонтрагенту(Контрагент)
	
	Попытка
	
		Возврат Контрагент.Партнер;
	
	Исключение
		
		Возврат Неопределено;
		
	КонецПопытки;

КонецФункции // ПолучитьПартнера()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПолучитьКонтрагентовПоПартнеру(Партнер)
	
	Результат = Новый Массив;
	Попытка
		Запрос = Новый Запрос("ВЫБРАТЬ
							  |	Контрагенты.Ссылка КАК Ссылка
							  |ИЗ
							  |	Справочник.Контрагенты КАК Контрагенты
							  |ГДЕ
							  |	Контрагенты.Партнер = &ТекущийЭлементНоменклатуры");
		Запрос.УстановитьПараметр("ТекущийЭлементНоменклатуры", Партнер);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Возврат Результат;

КонецФункции // ПолучитьПартнера()

&НаКлиенте
Функция ДоступнаПодстановкаСторонИзПакета(СоставПакета, ДопПараметры = Неопределено) Экспорт

	Результат = Истина;
	
	Если СоставПакета.Свойство("ДоступнаПодстановкаСторонИзПакета")  Тогда 
		
		Результат = СоставПакета.ДоступнаПодстановкаСторонИзПакета;
		
	Иначе 
		
		СписокТиповДокументов = Новый СписокЗначений;
		
		Для Каждого Вложение Из СоставПакета.Вложение Цикл
			
			ТипВложения = ФорматВложения(Вложение);
			
			Если ТипВложения = "_" Тогда
			
				Продолжить;
			
			КонецЕсли;
			
			Если СписокТиповДокументов.НайтиПоЗначению(ТипВложения) = Неопределено Тогда 
				
				СписокТиповДокументов.Добавить(ТипВложения);
				
			Иначе 
				
				Результат = Ложь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СоставПакета.Вставить("ДоступнаПодстановкаСторонИзПакета", Результат);
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ПроверитьВложенияПакетаДляСторонПоПакету()

