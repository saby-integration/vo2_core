
// Функция получает значение по указанному пути	
//
// Параметры:
//  ПараметрыДанные	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ПолучитьДанныеПоПути(ПараметрыДанные, ДопПараметры = Неопределено) Экспорт
	
	ПутьКДаннымФайла	= СтрЗаменить(СтрЗаменить(СтрЗаменить(ПараметрыДанные.Путь, ".", Символы.ПС), "[", Символы.ПС), "]", "");
	ЗначениеРеквизита	= ПараметрыДанные.Данные;
	
	Для НомерСтроки = 1 По СтрЧислоСтрок(ПутьКДаннымФайла) Цикл
		Узел = СтрПолучитьСтроку(ПутьКДаннымФайла, НомерСтроки);
		Если ТипЗнч(ЗначениеРеквизита) = Тип("Структура") Тогда
			ЗначениеРеквизита.Свойство(Узел, ЗначениеРеквизита);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Соответствие") Тогда
			ЗначениеРеквизита = ЗначениеРеквизита.Получить(Узел);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Массив") Тогда 
			//1190217292    
			Попытка
				ЗначениеРеквизита = ЗначениеРеквизита.Получить(Число(Узел));  
			Исключение
				Возврат Неопределено;
			КонецПопытки;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеСторонИзПакета(СоставПакета, ДопПараметры = Неопределено) Экспорт
		
	ДанныеОрганизации 	  = Сторона_Выгрузить(СоставПакета_Получить(СоставПакета, "НашаОрганизация"));
    ДанныеКонтрагента 	  = Сторона_Выгрузить(СоставПакета_Получить(СоставПакета, "Контрагент")); 
	ДанныеГрузополучателя = Сторона_Выгрузить(СоставПакета_Получить(СоставПакета, "Грузополучатель"));

	Если ЗначениеЗаполнено(ДанныеОрганизации) Тогда
		ДанныеОрганизации.Вставить("Ссылка");
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеКонтрагента) Тогда
		ДанныеКонтрагента.Вставить("Ссылка");
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеГрузополучателя) Тогда
		ДанныеГрузополучателя.Вставить("Ссылка");
	КонецЕсли;
	
	ДанныеСторон = Новый Структура;
	ДанныеСторон.Вставить("ДанныеКонтрагента",		ДанныеКонтрагента);
	ДанныеСторон.Вставить("ДанныеОрганизации",		ДанныеОрганизации);
	ДанныеСторон.Вставить("ДанныеГрузополучателя",	ДанныеГрузополучателя);
	
	Возврат ДанныеСторон;

КонецФункции

&НаКлиенте
Процедура СформироватьВходящийКонтекстНаВложении(Параметры, ДопПараметры = Неопределено) Экспорт
	
	ПодготовленныеПараметрыКонтекста = Параметры.ПодготовленныеПараметрыКонтекста;
	
	Если НЕ Параметры.Вложение = Неопределено Тогда		
		Если Не Параметры.Вложение.Свойство("ВходящийКонтекст") Тогда
			Параметры.Вложение.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
		КонецЕсли;
		
		Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
			
			Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И Параметры.Вложение.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
				Продолжить;	
			КонецЕсли;
			
			Параметры.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
			
		КонецЦикла;
	Иначе
		
		Для Каждого ВложениеПакета Из Параметры.СоставПакета.Вложение Цикл
			
			Если Не ВложениеПакета.Свойство("ВходящийКонтекст") Тогда
				ВложениеПакета.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
			КонецЕсли;
			
			Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
				
				Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И ВложениеПакета.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
					Продолжить;	
				КонецЕсли;
				
				ВложениеПакета.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьВходящийКонтекстСогласноНастройкам(ПараметрыФормированияВходящегоКонтекста, ДопПараметры = Неопределено) Экспорт
	
	МестныйКэш = ПараметрыФормированияВходящегоКонтекста.МестныйКэш;
	
	Если НЕ ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("ВходящийКонтекст") Тогда
		ПараметрыФормированияВходящегоКонтекста.Вложение.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
	КонецЕсли;
	
	Если МестныйКэш.Парам.ЗаполнениеКонтрагента1С = "ГрузополучательСБИС" Тогда  
		
		Контрагент_Роль = "Грузополучатель";
				
		Если ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Свойство("Контрагент_Роль")
			И ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Контрагент_Роль.Свойство("Значение") 
			И ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("Контрагент1С") Тогда
			
				КонтрагентРоль = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Контрагент_Роль", ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла, МестныйКэш);
				ИмяРеквизита = Сред(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение, 
											Найти(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение,".")+1);
											
				ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(ИмяРеквизита, Контрагент_Роль);			
						
		КонецЕсли;
	Иначе
		
		Контрагент_Роль = "Покупатель";
		
		Если ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Свойство("Контрагент_Роль")
			И ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Контрагент_Роль.Свойство("Значение") 
			И ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("Контрагент1С") Тогда
			
				КонтрагентРоль = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Контрагент_Роль", ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла, МестныйКэш);
				ИмяРеквизита = Сред(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение, 
											Найти(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение,".")+1);
				
				ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(ИмяРеквизита, Контрагент_Роль);							
						
		КонецЕсли;
				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестныйКэш.Парам.СкладПоУмолчанию) Тогда
		
		ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить("Склад", МестныйКэш.Парам.СкладПоУмолчанию);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестныйКэш.Парам.РасСчетПоУмолчанию) Тогда
		
		ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить("РасСчет", МестныйКэш.Парам.РасСчетПоУмолчанию);	
		
	КонецЕсли;
		
КонецПроцедуры

// Дополняет данные сторон по пакету данными, сопоставленными в маппинге
//
// Параметры:
//  ДанныеСторон  - <Структура> - данные сторон:
//						- ДанныеКонтрагента 	- <Структура> - ИНН, КПП, GLN, КодФилиала 
//						- ДанныеОрганизации 	- <Структура> - ИНН, КПП, GLN, КодФилиала
//						- ДанныеГрузополучателя - <Структура> - ИНН, КПП, GLN, КодФилиала
//
&НаКлиенте
Процедура ДополнитьДанныеСторонСопоставлением(ДанныеСторон, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш;
	
	ПараметрыПолучения = Новый Массив;
	СчСторона = 0;
	ТипыСторон = ТипыСторонДляМаппинга();
	
	Для каждого Сторона Из ДанныеСторон Цикл
		
		ПараметрыПолучения.Добавить(Новый Структура);   
		Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ПараметрыПолучения[СчСторона], Сторона.Значение);
		Если	ТипЗнч(Сторона) = Тип("КлючИЗначение")
			И	Сторона.Ключ = "ДанныеОрганизации" Тогда
			
			ТипОбъекта = "НашаОрганизация";	
		Иначе
			ТипОбъекта = "Контрагент";
		КонецЕсли;
		ПараметрыПолучения[СчСторона].Вставить("Тип", ТипОбъекта);
		ПараметрыПолучения[СчСторона].Вставить("Тип1С", ТипыСторон[Сторона.Ключ]);
		СчСторона = СчСторона + 1;
		
	КонецЦикла;
	
	СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
	
	Если СопоставленныеДанныеСторон = Ложь Тогда   
		Возврат;
	КонецЕсли;
	
	Для каждого СопоставленнаяСторона Из СопоставленныеДанныеСторон Цикл
		Если Не ЗначениеЗаполнено(СопоставленнаяСторона.ClientId)
			Или Не ЗначениеЗаполнено(СопоставленнаяСторона.ClientType) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		Сторона1С = ПолучитьУчастникаПоИд(СопоставленнаяСторона.ClientId, СопоставленнаяСторона.ClientType);
		Для каждого Сторона Из ДанныеСторон Цикл
			Если	?(Сторона.Значение.Свойство("ИНН"),
					Сторона.Значение.ИНН = СопоставленнаяСторона.SbisParam_1_1,
					Ложь)
				И	?(Сторона.Значение.Свойство("КПП"),
					Сторона.Значение.КПП = СопоставленнаяСторона.SbisParam_1_2,
					НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_2))
				И	?(Сторона.Значение.Свойство("КодФилиала") И ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_3),
					Сторона.Значение.КодФилиала = СопоставленнаяСторона.SbisParam_1_3,
					Истина)
				// GLN нет на сторонах пакета, но вдруг появится...
				//И	?(Сторона.Значение.Свойство("GLN"),
				//	Сторона.Значение.GLN = СопоставленнаяСторона.SbisParam_2,
				//	НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_2)) 
				И	ТипыСторон[Сторона.Ключ] = СопоставленнаяСторона.ClientType Тогда
				
				Сторона.Значение.Вставить("Ссылка", Сторона1С);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры
 
&НаКлиенте
Функция ТипыСторонИзИни(ИниКонфигурации)
	
	ОписаниеТипов = Новый Структура;
	ОписаниеТипов.Вставить("Организации",	ПолучитьТипМетаданных(ИниКонфигурации, "Организации"));
	ОписаниеТипов.Вставить("Контрагенты",	ПолучитьТипМетаданных(ИниКонфигурации, "Контрагенты"));
	ОписаниеТипов.Вставить("Партнеры",		ПолучитьТипМетаданных(ИниКонфигурации, "Партнеры"));
	
	Возврат ОписаниеТипов;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ТипыСторонСопоставления() Экспорт 

	ОписаниеКонфигурации = ГлавноеОкно.Кэш.Ини.Конфигурация;
	
	ОписаниеТипов = ТипыСторонИзИни(ОписаниеКонфигурации);
	
	ТипыСторон = Новый Структура;
	ТипыСторон.Вставить("ДанныеОрганизации", ОписаниеТипов.Организации);
	ТипыСторон.Вставить("ДанныеКонтрагента", ОписаниеТипов.Контрагенты);
	
	ТипГрузополучателя = ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	
	Если ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Контрагенты);
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", ОписаниеТипов.Партнеры);
		
	Иначе 
		
		ТипыСторон.Вставить("ДанныеГрузополучателя", Неопределено);
		
	КонецЕсли;
	
	Возврат ТипыСторон;

КонецФункции // ТипыСторонСопоставления()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПодготовитьСтороныКЗагррузкеДокумента(ДанныеСторон, ДопПараметры = Неопределено) Экспорт 

	ДанныеСторонСБИС	= ДанныеСторон.ДанныеСторонСБИС;
	ДанныеСтороны1С		= ДанныеСторон.ДанныеСторон1С;
	
	ЗаполнениеКонтрагента1С = ПолучитьЗначениеПараметраСбис("ЗаполнениеКонтрагента1С");
	ТипГрузополучателя		= ПолучитьЗначениеПараметраСбис("ТипГрузополучателя");
	ЕстьПартнеры = ТипЗнч(ДопПараметры) = Тип("Структура") И  ДопПараметры.Свойство("ЕстьПартнеры") И ДопПараметры.ЕстьПартнеры = Истина;
	
	Если ЗаполнениеКонтрагента1С = "ГрузополучательСБИС" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка), Неопределено));
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательНеВедется" Тогда 
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка), Неопределено)); 
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательКонтрагент" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ?(ЕстьПартнеры, ПолучитьПартнераПоКонтрагенту(ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка), Неопределено)); 
		
	ИначеЕсли ТипГрузополучателя = "ГрузополучательПартнер" Тогда
		
        ДанныеСтороны1С.Вставить("ДанныеКонтрагента", ДанныеСторонСБИС.ДанныеКонтрагента.Ссылка);
        ДанныеСтороны1С.Вставить("ДанныеПартнера", ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
		Если ЕстьПартнеры Тогда
			ПартнерыКонтрагента = ПолучитьКонтрагентовПоПартнеру(ДанныеСторонСБИС.ДанныеГрузополучателя.Ссылка);
        	ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", ?(ПартнерыКонтрагента.Количество(), ПартнерыКонтрагента[0], Неопределено)); 
		Иначе 
			ДанныеСтороны1С.Вставить("ДанныеГрузополучателя", Неопределено);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры // ПодготовитьСтороны()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПолучитьПартнераПоКонтрагенту(Контрагент)
	
	Попытка
	
		Возврат Контрагент.Партнер;
	
	Исключение
		
		Возврат Неопределено;
		
	КонецПопытки;

КонецФункции // ПолучитьПартнера()

// <Описание функции>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервереБезКонтекста
Функция ПолучитьКонтрагентовПоПартнеру(Партнер)
	
	Результат = Новый Массив;
	Попытка
		Запрос = Новый Запрос("ВЫБРАТЬ
							  |	Контрагенты.Ссылка КАК Ссылка
							  |ИЗ
							  |	Справочник.Контрагенты КАК Контрагенты
							  |ГДЕ
							  |	Контрагенты.Партнер = &ТекущийЭлементНоменклатуры");
		Запрос.УстановитьПараметр("ТекущийЭлементНоменклатуры", Партнер);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.Добавить(Выборка.Ссылка);
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Возврат Результат;

КонецФункции // ПолучитьПартнера()

&НаКлиенте
Функция ДоступнаПодстановкаСторонИзПакета(СоставПакета, ДопПараметры = Неопределено) Экспорт

	Результат = Истина;
	
	Если СоставПакета.Свойство("ДоступнаПодстановкаСторонИзПакета")  Тогда 
		
		Результат = СоставПакета.ДоступнаПодстановкаСторонИзПакета;
		
	Иначе 
		
		СписокТиповДокументов = Новый СписокЗначений;
		
		Для Каждого Вложение Из СоставПакета.Вложение Цикл
			
			ТипВложения = Вложение.Тип + "_" + Вложение.ВерсияФормата;
			Если СписокТиповДокументов.НайтиПоЗначению(ТипВложения) = Неопределено Тогда 
				
				СписокТиповДокументов.Добавить(ТипВложения);
				
			Иначе 
				
				Результат = Ложь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
		СоставПакета.Вставить("ДоступнаПодстановкаСторонИзПакета", Результат);
		
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ПроверитьВложенияПакетаДляСторонПоПакету()

