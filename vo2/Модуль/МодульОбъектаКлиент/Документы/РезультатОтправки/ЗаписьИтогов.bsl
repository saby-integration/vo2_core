
//Записываем статусы из полученных ответов
&НаКлиенте
Процедура РезультатОтправки_ЗаписатьНакопленныеСтатусы(РезультатОтправки) Экспорт
	Перем лНаЗаписьСтатусов, СостояниеДокументаОтправки;
	
	Если Не РезультатОтправки.Свойство("НаЗаписьСтатусов", лНаЗаписьСтатусов) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФормыСтатусов	= ПолучитьЗначениеПараметраСбис("ИмяМодуляРаботыСоСтатусами");
	ЕстьСостянияЭД		= ПолучитьЗначениеПараметраСбис("СостояниеЭД") = Истина;
	КаталогХраненияСБИС	= ПолучитьЗначениеПараметраСбис("КаталогНастроек");
	
	МодульЗаписатьПараметрыСБИС = НайтиФункциюСеансаОбработки("ЗаписатьПараметрыДокументовСБИС", ИмяФормыСтатусов);

	Если ЕстьСостянияЭД Тогда
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ИмяФункции",	"ЗаписатьПараметрыДокументовСБИС");
		ПараметрыПоиска.Вставить("КлючФорм",	"Статусы_СостоянияЭД");
		МодульСтатусыСостоянияЭД = ГлобальныйКэш.ТекущийСеанс.Модули.ФункцииДокументов.сбисНайтиФормуФункцииПодсистемы(ГлавноеОкно.Кэш, ПараметрыПоиска);
	КонецЕсли;
	
	ИндексыДляУдаления	= Новый СписокЗначений;
	ДанныеПоСтатусам	= Новый Массив;
	Для СчетчикПоСтатусам = 0 По РезультатОтправки.ДанныеПоСтатусам.Количество()-1 Цикл
		ЭлементДанныхСтатусов = РезультатОтправки.ДанныеПоСтатусам[СчетчикПоСтатусам]; 
		
		//Получаем ответ, либо ошибку и пишем в статус
		СообщениеОтправки = РезультатОтправки.НаЗаписьСтатусов.Ответы.Получить(ЭлементДанныхСтатусов.Идентификатор);
		Если		СообщениеОтправки = Неопределено Тогда
			
			СообщениеОтправки = РезультатОтправки.НаЗаписьСтатусов.Ошибки.Получить(ЭлементДанныхСтатусов.Идентификатор);
			Если СообщениеОтправки = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДокументСБИС_Статус = "Ошибка: " + СообщениеОтправки.message;
			
		ИначеЕсли СообщениеОтправки.Свойство("Состояние",СостояниеДокументаОтправки)
			ИЛИ (СообщениеОтправки.Свойство("Result") И СообщениеОтправки.Result.Свойство("Состояние",СостояниеДокументаОтправки)) Тогда  
			
			ДокументСБИС_Статус = СостояниеДокументаОтправки["Название"]; 
			
		Иначе 
			
			ДокументСБИС_Статус = "";
			
		КонецЕсли;
		
		Для Каждого Стр Из ЭлементДанныхСтатусов.Статусы Цикл
			
			СтрокаЗаписьСтатусы = Новый Структура("Регламент, СтруктураСвойств, Документ1С, ИдАккаунта","");
			ЗаполнитьЗначенияСвойств(СтрокаЗаписьСтатусы, Стр);
			
			СтрокаЗаписьСтатусы.Документ1С	= Стр.Документ1С;
			Если Не ЗначениеЗаполнено(СтрокаЗаписьСтатусы.ИдАккаунта) Тогда
				СтрокаЗаписьСтатусы.ИдАккаунта	= ГлобальныйКэш.ТекущийСеанс.Модули.Интеграция.ПолучитьИдТекущегоАккаунта(ГлавноеОкно.Кэш);
			КонецЕсли;
			
			СтрокаЗаписьСтатусы.СтруктураСвойств.ДокументСБИС_Статус = ДокументСБИС_Статус;
			
			ДанныеПоСтатусам.Добавить(СтрокаЗаписьСтатусы);
			
		КонецЦикла;
		
		ИндексыДляУдаления.Добавить(СчетчикПоСтатусам);
	КонецЦикла;
	
	РезультатОтправки.НаЗаписьСтатусов.Ошибки.Очистить();
	РезультатОтправки.НаЗаписьСтатусов.Ответы.Очистить();
	
	Если Не ДанныеПоСтатусам.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНач = ПолучитьДатуВМиллисекундах();
	
	МодульЗаписатьПараметрыСБИС.ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам, ИниПоПараметрам("Конфигурация"), КаталогХраненияСБИС);

	Если ЕстьСостянияЭД Тогда
		Если МодульСтатусыСостоянияЭД = Ложь Тогда
			СбисСообщить(Новый Структура("Текст", "Дублирование событий СБИС в типовых регистрах 1с в данной конфигурации не поддерживается"));
		Иначе
			МодульСтатусыСостоянияЭД.ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам, ИниПоПараметрам("Конфигурация"), КаталогХраненияСБИС);
		КонецЕсли;
	КонецЕсли;	// alo >>  	
	
	//Точка входа после отправки партии пакетов документов с данными по статусам.
	МодульОбработатьСписокОтправленных	= ГлавноеОкно.сбисНайтиФормуФункции("сбисОбработатьСписокОтправленных",	"РаботаСДокументами1С");
	Если Не МодульОбработатьСписокОтправленных = Ложь Тогда
		//Данные по детализации статусов и списка номенклатуры смотреть в кэше.
		Контекст = Новый Структура("ДанныеПоСтатусам", ДанныеПоСтатусам);//Структура для возможности расширения, если понадобится добавить что-то ещё.
		МодульОбработатьСписокОтправленных.сбисОбработатьСписокОтправленных(ГлавноеОкно.Кэш, Контекст);
	КонецЕсли;
	//
	ДатаКнц = ПолучитьДатуВМиллисекундах();
	РезультатОтправки.ВремяЗаписиСтатусов = РезультатОтправки.ВремяЗаписиСтатусов+(ДатаКнц-ДатаНач)/1000;
	
	//Очищаем записанные статусы
	ИндексыДляУдаления.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	Для Каждого Элемент Из ИндексыДляУдаления Цикл
		РезультатОтправки.ДанныеПоСтатусам.Удалить(Элемент.Значение);		
	КонецЦикла;
	
КонецПроцедуры

