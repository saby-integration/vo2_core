
// Функция получает значение по указанному пути	
//
// Параметры:
//  ПараметрыДанные	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
&НаКлиенте
Функция ПолучитьДанныеПоПути(ПараметрыДанные, ДопПараметры = Неопределено) Экспорт
	
	ПутьКДаннымФайла	= СтрЗаменить(СтрЗаменить(СтрЗаменить(ПараметрыДанные.Путь, ".", Символы.ПС), "[", Символы.ПС), "]", "");
	ЗначениеРеквизита	= ПараметрыДанные.Данные;
	
	Для НомерСтроки = 1 По СтрЧислоСтрок(ПутьКДаннымФайла) Цикл
		Узел = СтрПолучитьСтроку(ПутьКДаннымФайла, НомерСтроки);
		Если ТипЗнч(ЗначениеРеквизита) = Тип("Структура") Тогда
			ЗначениеРеквизита.Свойство(Узел, ЗначениеРеквизита);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Соответствие") Тогда
			ЗначениеРеквизита = ЗначениеРеквизита.Получить(Узел);
		ИначеЕсли ТипЗнч(ЗначениеРеквизита) = Тип("Массив") Тогда 
			//1190217292    
			Попытка
				ЗначениеРеквизита = ЗначениеРеквизита.Получить(Число(Узел));  
			Исключение
				Возврат Неопределено;
			КонецПопытки;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеСторонИзПакета(СоставПакета, ДопПараметры = Неопределено) Экспорт
		
	ДанныеОрганизации 	  = ПолучитьДанныеСтороны(СоставПакета.НашаОрганизация);
    ДанныеКонтрагента 	  = ПолучитьДанныеСтороны(СоставПакета.Контрагент); 
	ДанныеГрузополучателя = ПолучитьДанныеСтороны(ПолучитьГрузополучателяПакета(СоставПакета));
	
	ДанныеСторон = Новый Структура("ДанныеКонтрагента, ДанныеОрганизации, ДанныеГрузополучателя",	ДанныеКонтрагента, ДанныеОрганизации, ДанныеГрузополучателя);
	Возврат ДанныеСторон;
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеСтороны(Сторона)
	
	ДанныеСтороны = Новый Структура;
	ДанныеСтороны.Вставить("Ссылка");
	
	Если ЗначениеЗаполнено(Сторона) Тогда
		Если Сторона.Свойство("СвЮЛ") Тогда
			ИНН = Сторона.СвЮЛ.ИНН;
			КПП = Сторона.СвЮЛ.КПП; 
			
			Если Сторона.СвЮЛ.Свойство("КодФилиала") Тогда  
				ДанныеСтороны.Вставить("КодФилиала", Сторона.СвЮЛ.КодФилиала); 
			КонецЕсли;  
			
			Если Сторона.СвЮЛ.Свойство("GLN") Тогда
				ДанныеСтороны.Вставить("GLN", Сторона.СвЮЛ.GLN); 
			КонецЕсли;
			ДанныеСтороны.Вставить("КПП", КПП);
		Иначе
			ИНН = Сторона.СвФЛ.ИНН;
		КонецЕсли;
		ДанныеСтороны.Вставить("ИНН", ИНН);	
	КонецЕсли;
	
	Возврат ДанныеСтороны;
КонецФункции

&НаКлиенте
Функция ПолучитьГрузополучателяПакета(СоставПакета, ДопПараметры = Неопределено) Экспорт
	
	Грузополучатель = Неопределено;
	
	Если СоставПакета.Тип = "ЗаказИсх"
		Или СоставПакета.Тип = "ДокОтгрВх" Тогда
		
		СоставПакета.Участники.Свойство("Лицо3", Грузополучатель);
		
	Иначе
		
		СоставПакета.Участники.Свойство("Лицо2", Грузополучатель);
		
	КонецЕсли;
	
	Возврат Грузополучатель;
	
КонецФункции

&НаКлиенте
Процедура СформироватьВходящийКонтекстНаВложении(Параметры, ДопПараметры = Неопределено) Экспорт
	
	ПодготовленныеПараметрыКонтекста = Параметры.ПодготовленныеПараметрыКонтекста;
	
	Если НЕ Параметры.Вложение = Неопределено Тогда		
		Если Не Параметры.Вложение.Свойство("ВходящийКонтекст") Тогда
			Параметры.Вложение.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
		КонецЕсли;
		
		Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
			
			Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И Параметры.Вложение.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
				Продолжить;	
			КонецЕсли;
			
			Параметры.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
			
		КонецЦикла;
	Иначе
		
		Для Каждого ВложениеПакета Из Параметры.СоставПакета.Вложение Цикл
			
			Если Не ВложениеПакета.Свойство("ВходящийКонтекст") Тогда
				ВложениеПакета.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
			КонецЕсли;
			
			Для Каждого Параметр Из ПодготовленныеПараметрыКонтекста Цикл
				
				Если НЕ Параметры.ЗаменятьЗаполненныеПараметры И ВложениеПакета.ВходящийКонтекст.Свойство(Параметр.Ключ) Тогда
					Продолжить;	
				КонецЕсли;
				
				ВложениеПакета.ВходящийКонтекст.РассчитанноеЗначение.Вставить(Параметр.Ключ, Параметр.Значение); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьВходящийКонтекстСогласноНастройкам(ПараметрыФормированияВходящегоКонтекста, ДопПараметры = Неопределено) Экспорт
	
	МестныйКэш = ПараметрыФормированияВходящегоКонтекста.МестныйКэш;
	
	Если НЕ ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("ВходящийКонтекст") Тогда
		ПараметрыФормированияВходящегоКонтекста.Вложение.Вставить("ВходящийКонтекст", Новый Структура("РассчитанноеЗначение", Новый Структура));
	КонецЕсли;
	
	Если МестныйКэш.Парам.ЗаполнениеКонтрагента1С = "ГрузополучательСБИС" Тогда  
		
		Контрагент_Роль = "Грузополучатель";
				
		Если ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Свойство("Контрагент_Роль")
			И ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Контрагент_Роль.Свойство("Значение") 
			И ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("Контрагент1С") Тогда
			
				КонтрагентРоль = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Контрагент_Роль", ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла, МестныйКэш);
				ИмяРеквизита = Сред(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение, 
											Найти(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение,".")+1);
											
				ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(ИмяРеквизита, Контрагент_Роль);			
						
		КонецЕсли;
	Иначе
		
		Контрагент_Роль = "Покупатель";
		
		Если ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Свойство("Контрагент_Роль")
			И ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.Контрагент_Роль.Свойство("Значение") 
			И ПараметрыФормированияВходящегоКонтекста.Вложение.Свойство("Контрагент1С") Тогда
			
				КонтрагентРоль = МестныйКэш.ОбщиеФункции.РассчитатьЗначение("Контрагент_Роль", ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла, МестныйКэш);
				ИмяРеквизита = Сред(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение, 
											Найти(ПараметрыФормированияВходящегоКонтекста.Вложение.СтруктураИниФайла.мСторона[КонтрагентРоль].Сторона.Значение,".")+1);
				
				ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить(ИмяРеквизита, Контрагент_Роль);							
						
		КонецЕсли;
				
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестныйКэш.Парам.СкладПоУмолчанию) Тогда
		
		ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить("Склад", МестныйКэш.Парам.СкладПоУмолчанию);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестныйКэш.Парам.РасСчетПоУмолчанию) Тогда
		
		ПараметрыФормированияВходящегоКонтекста.Вложение.ВходящийКонтекст.РассчитанноеЗначение.Вставить("РасСчет", МестныйКэш.Парам.РасСчетПоУмолчанию);	
		
	КонецЕсли;
		
КонецПроцедуры

// Дополняет данные сторон по пакету данными, сопоставленными в маппинге
//
// Параметры:
//  ДанныеСторон  - <Структура> - данные сторон:
//						- ДанныеКонтрагента 	- <Структура> - ИНН, КПП, GLN, КодФилиала 
//						- ДанныеОрганизации 	- <Структура> - ИНН, КПП, GLN, КодФилиала
//						- ДанныеГрузополучателя - <Структура> - ИНН, КПП, GLN, КодФилиала
//
&НаКлиенте
Процедура ДополнитьДанныеСторонСопоставлением(ДанныеСторон, ДопПараметры = Неопределено) Экспорт
	
	Кэш = ГлавноеОкно.Кэш;
	
	Если Кэш.Парам.СпособХраненияНастроек <> 1 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПолучения = Новый Массив;
	СчСторона = 0;
	
	Для каждого Сторона Из ДанныеСторон Цикл
		
		ПараметрыПолучения.Добавить(Новый Структура);   
		Кэш.ОбщиеФункции.сбисСкопироватьСтруктуруНаКлиенте(ПараметрыПолучения[СчСторона], Сторона.Значение);
		Если	ТипЗнч(Сторона) = Тип("КлючИЗначение")
			И	Сторона.Ключ = "ДанныеОрганизации" Тогда
			
			ТипОбъекта = "НашаОрганизация";	
		Иначе
			ТипОбъекта = "Контрагент";
		КонецЕсли;
		ПараметрыПолучения[СчСторона].Вставить("Тип", ТипОбъекта);
		СчСторона = СчСторона + 1;
		
	КонецЦикла;
	
	СопоставленныеДанныеСторон = НайтиСтороныНаМаппинге(ПараметрыПолучения, Новый Структура("ВидИД", 1));
	
	Если СопоставленныеДанныеСторон = Ложь Тогда   
		Возврат;
	КонецЕсли;
	
	Для каждого СопоставленнаяСторона Из СопоставленныеДанныеСторон Цикл
		Сторона1С = ПолучитьУчастникаПоИд(СопоставленнаяСторона.ClientId, СопоставленнаяСторона.ClientType);
		Для каждого Сторона Из ДанныеСторон Цикл
			Если	?(Сторона.Значение.Свойство("ИНН"), 		Сторона.Значение.ИНН = СопоставленнаяСторона.SbisParam_1_1,			Ложь)
				И	?(Сторона.Значение.Свойство("КПП"), 		Сторона.Значение.КПП = СопоставленнаяСторона.SbisParam_1_2, 		НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_2))
				И	?(Сторона.Значение.Свойство("КодФилиала"),	Сторона.Значение.КодФилиала = СопоставленнаяСторона.SbisParam_1_3,	НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_1_3))
				И	?(Сторона.Значение.Свойство("GLN"), 		Сторона.Значение.GLN = СопоставленнаяСторона.SbisParam_2,			НЕ ЗначениеЗаполнено(СопоставленнаяСторона.SbisParam_2)) Тогда
				
				Сторона.Значение.Вставить("Ссылка", Сторона1С);
				
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры
 
