
//DynamicDirective

//Процедура генерирует и вызывает ExtSysException(СбисИсключение)
Процедура ВызватьСбисИсключение(БазоваяОшибка=Неопределено, СбисИмяКоманды,
								СбисКод=Неопределено, СбисСообщение=Неопределено, СбисДетализация=Неопределено, СбисДамп=Неопределено, СбисХелп=Неопределено) Экспорт
	ИсключениеВызов = НовыйСбисИсключение(БазоваяОшибка, СбисИмяКоманды, СбисКод, СбисСообщение, СбисДетализация, СбисДамп, СбисХелп);
	ВызватьИсключение(СбисИсключение_ВСтроку(ИсключениеВызов));
КонецПроцедуры

//DynamicDirective

//Конструктор ExtSysException
//БазоваяОшибка		- (необяз) ExtSysException(СбисИсключение)/ИнформацияОбОшибке/Структура("code, message, detail, dump, help")/Строка (в json/произвольная)/Число(код ошибки)
//СбисИмяКоманды	- Имя команды в стек
//Работает если в БазовойОшибке что-то неопределено, иначе берутся значения по-умолчанию
//СбисКод			- (необяз)код для новой ошибки. 		По-умолч 100
//СбисСообщение		- (необяз)сообщение для новой ошибки.	По-умолч сообщение по коду 
//СбисДетализация	- (необяз)детализация для новой ошибки.	По-умолч сообщение по коду
//СбисДамп			- (необяз)дамп ошибки
//СбисХелп			- (необяз)ссылка на решение проблемы
Функция НовыйСбисИсключение(БазоваяОшибка=Неопределено,	СбисИмяКоманды,
							СбисКод=Неопределено,		СбисСообщение=Неопределено, СбисДетализация=Неопределено, 
							СбисДамп=Неопределено,		СбисХелп=Неопределено) Экспорт
	Перем СбисСтек, СбисОсновнаяОшибка, СтрокаРазбора;
	
	СбисИсключение = СбисИсключение_Пустое();
	СбисИсключение.code			= СбисКод;
	СбисИсключение.message		= СбисСообщение;
	СбисИсключение.details		= СбисДетализация;
	СбисИсключение.methodName	= СбисИмяКоманды;
	СбисИсключение.dump			= СбисДамп;
	СбисИсключение.help			= СбисХелп;

	//Проверить перегрузки для конструктора
	Если		ТипЗнч(БазоваяОшибка) = Тип("ИнформацияОбОшибке")	Тогда
		СбисОсновнаяОшибка = СбисИсключение_ИнформацияОбОшибке(БазоваяОшибка);
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Строка")				Тогда
		СбисОсновнаяОшибка = СбисИсключение_Строка(БазоваяОшибка);
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Число")				Тогда
		СбисОсновнаяОшибка = СбисИсключение_Число(БазоваяОшибка);
	ИначеЕсли	ТипЗнч(БазоваяОшибка) = Тип("Структура")			Тогда
		СбисОсновнаяОшибка = СбисИсключение_Структура(БазоваяОшибка);
	Иначе
		//Неизвестная ошибка
		СбисОсновнаяОшибка = СбисИсключение_Пустое();
		Если Не БазоваяОшибка = Неопределено Тогда
			СбисОсновнаяОшибка.dump = Новый Структура("exception_value", БазоваяОшибка);
		КонецЕсли;
	КонецЕсли;
	
	СообщениеПоКоду = Истина;
	//Если не указаны основные поля для новой ошибки
	
	Если СбисИсключение.code = Неопределено Тогда
		
		СбисИсключение.code = СбисОсновнаяОшибка.code;
		
	Иначе
		
		//Если указан код в новой ошибке, то проверить, что если он меняется, то должно обновиться и сообщение ошибки.
		СообщениеПоКоду = Не СбисИсключение.code = СбисОсновнаяОшибка.code;
	
	КонецЕсли;
	
	Если СбисИсключение.message = Неопределено Тогда
		
		Если	Не СбисОсновнаяОшибка.message = Неопределено
			И	Не СообщениеПоКоду Тогда
			
			СбисИсключение.message = СбисОсновнаяОшибка.message;
			
		Иначе
			
			СообщениеПоКоду = Истина;

		КонецЕсли;
		
	Иначе
		
		СообщениеПоКоду = Ложь;
		
	КонецЕсли;
	
	Если СообщениеПоКоду Тогда
		
		СбисИсключение.message = СбисИсключение_СообщениеПоКоду(СбисИсключение.code);
		
	КонецЕсли;
	
	Если СбисИсключение.details = Неопределено Тогда
		
		Если СбисОсновнаяОшибка.details = Неопределено Тогда
		
			СбисИсключение.details = СбисИсключение.message;
			
		Иначе
			
			СбисИсключение.details = СбисОсновнаяОшибка.details;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если СбисИсключение.help = Неопределено Тогда
		Если	СбисОсновнаяОшибка.Свойство("help") Тогда
			СбисИсключение.help = СбисОсновнаяОшибка.help;
		КонецЕсли;
	КонецЕсли;
	
	Если СбисОсновнаяОшибка = Неопределено Тогда
		Возврат СбисИсключение;
	ИначеЕсли Не СбисОсновнаяОшибка.Свойство("base", СбисИсключение.base) Тогда
		СбисИсключение.base = СбисОсновнаяОшибка;
	КонецЕсли;
	//Добавим основную ошибку в стек
	Если СбисОсновнаяОшибка.Свойство("stack", СбисСтек) Тогда
		СбисОсновнаяОшибка.Удалить("stack");
	Иначе
		СбисСтек = Новый Массив;
		СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
		ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисОсновнаяОшибка);
		Если		СбисОсновнаяОшибка.Свойство("method_Name") Тогда
			СбисЗаписьВСтек.methodName = СбисОсновнаяОшибка.method_Name;
		ИначеЕсли	СбисОсновнаяОшибка.Свойство("Action") Тогда
			СбисЗаписьВСтек.methodName = СбисОсновнаяОшибка.Action;
		КонецЕсли;
		СбисСтек.Добавить(СбисЗаписьВСтек);
	КонецЕсли;
	//Добавим обрабатываемую ошибку в стек
	СбисЗаписьВСтек = Новый Структура("methodName, code, message, dump");
	ЗаполнитьЗначенияСвойств(СбисЗаписьВСтек, СбисИсключение);
	СбисСтек.Вставить(0, СбисЗаписьВСтек);
	СбисИсключение.Вставить("stack", СбисСтек);
	Если СбисОсновнаяОшибка.Свойство("data") Тогда
		СбисИсключение.Вставить("data", СбисОсновнаяОшибка.data);
	КонецЕсли;
	//пробросим дамп в основную ошибку, чтоб не потерять
	Если СбисДамп = Неопределено Тогда
		Если СбисОсновнаяОшибка.Свойство("dump", СбисИсключение.dump) Тогда
			СбисОсновнаяОшибка.Удалить("dump");
		КонецЕсли;
	КонецЕсли;           
	        	
	Возврат СбисИсключение;
	
КонецФункции

//DynamicDirective

// Функция - возвращает пустое исключение
// 
// Возвращаемое значение:
//   - 
//
Функция СбисИсключение_Пустое()

	Возврат Новый Структура("code, message, details, methodName, dump, help, base, data", 100);

КонецФункции

//DynamicDirective

// Функция - возвращает пустое исключение
// 
// Возвращаемое значение:
//   - 
//
Функция СбисИсключение_ВСтроку(СбисИсключение, ДопПарамеры = Неопределено) Экспорт 

	Если	Не ТипЗнч(СбисИсключение) = Тип("Структура")
		Или Не СбисИсключение.Свойство("code") 
		Или Не СбисИсключение.Свойство("details") Тогда
		
		ИсключениеВСтроку = НовыйСбисИсключение(СбисИсключение, ДопПарамеры);
		
	Иначе
		
		ИсключениеВСтроку = СбисИсключение;
		
	КонецЕсли;
	
	#Если НаСервере Тогда
		
		Возврат СбисИсключение_ВСтрокуСервер(ИсключениеВСтроку, ДопПарамеры);
		
	#Иначе
		
		Возврат СбисИсключение_ВСтрокуВызовСервера(ИсключениеВСтроку, ДопПарамеры);
		
	#КонецЕсли

КонецФункции

//DynamicDirective

Функция СбисИсключение_ИзСтроки(СтрокаСбисИсключение, ДопПарамеры = Неопределено) Экспорт 

	#Если НаСервере Тогда
		
		Возврат СбисИсключение_ИзСтрокиСервер(СтрокаСбисИсключение, ДопПарамеры);

	#Иначе
		
		Возврат СбисИсключение_ИзСтрокиВызовСервера(СтрокаСбисИсключение, ДопПарамеры);
		
	#КонецЕсли
	
КонецФункции

//DynamicDirective

Функция СбисИсключение_ПрочитатьJSON(СбисИсключение) 
	
	#Если НаСервере Тогда
		
		Возврат сбисПрочитатьJSON(СбисИсключение);
		
	#Иначе
		
		Возврат СбисРаботаСJSON.сбисПрочитатьJSON(СбисИсключение);
		
	#КонецЕсли
	
КонецФункции

//DynamicDirective

// Функция - генерирует ExtSysException из информации об ошибке
//
// Параметры:
//  ВыбранныйИнформацияОбОшибке	 - ИнформацияОбОшибке	 - вызванное исключение, которое не является запакованным ExtSysException
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_ИнформацияОбОшибке(БазоваяОшибка)
	
	Попытка
		Если ТипЗнч(БазоваяОшибка.Описание) = Тип("Строка")
			И	Лев(БазоваяОшибка.Описание, 5) = "{""#""," Тогда
			ВосстановленноеИсключение = СбисИсключение_ИзСтроки(БазоваяОшибка.Описание);
			Если Не ЭтоТипСбис(ВосстановленноеИсключение, "СбисИсключение") Тогда
				НовоеИсключение = СбисИсключение_Пустое();
				ЗаполнитьЗначенияСвойств(НовоеИсключение, ВосстановленноеИсключение);
			Иначе
				НовоеИсключение = ВосстановленноеИсключение;
			КонецЕсли;
			Возврат НовоеИсключение;
		КонецЕсли;
	Исключение
		//Это не завёрнутый ExtSysException, дальше разбираем как 1С-ное исключение
	КонецПопытки;

	СложнаяСтруктура		= Ложь;
	КодНовогоИсключения		= 500;
	
	СтруктураОшибкиСообщения = БазоваяОшибка;
	Пока ТипЗнч(СтруктураОшибкиСообщения.Причина) = Тип("ИнформацияОбОшибке") Цикл
		СтруктураОшибкиСообщения = СтруктураОшибкиСообщения.Причина;
		СложнаяСтруктура = Истина;
	КонецЦикла;
	
	Если СложнаяСтруктура Тогда
		СообщениеОбОшибке = БазоваяОшибка.Описание;
		ДетализацияОшибки = СтруктураОшибкиСообщения.Описание;
	ИначеЕсли БазоваяОшибка.Причина = Неопределено Тогда
		СообщениеОбОшибке = СбисИсключение_СообщениеПоКоду(КодНовогоИсключения);
		ДетализацияОшибки = БазоваяОшибка.Описание;
	Иначе
		СообщениеОбОшибке = БазоваяОшибка.Описание;
		ДетализацияОшибки = БазоваяОшибка.Причина;
	КонецЕсли;
	Если Найти(ДетализацияОшибки, "ODBC") Тогда
		Если Не Найти(ДетализацияОшибки, "dbf' уже существует") Тогда
			КодНовогоИсключения	= 776; 
			СообщениеОбОшибке = ДетализацияОшибки;
		КонецЕсли;
	ИначеЕсли ДетализацияОшибки = "Не подключен файл статусов DBF." Тогда
		КодНовогоИсключения	= 717;
		ДетализацияОшибки	= СообщениеОбОшибке + " " + ДетализацияОшибки;
		СообщениеОбОшибке	= СбисИсключение_СообщениеПоКоду(КодНовогоИсключения);
	КонецЕсли;
	
	СбисДамп = Новый Структура("ИсходнаяСтрока, НомерСтроки, ИмяМодуля");
	ЗаполнитьЗначенияСвойств(СбисДамп, БазоваяОшибка);
	СбисДамп.ИсходнаяСтрока = СокрЛП(СбисДамп.ИсходнаяСтрока);
	СбисДамп.Вставить("ДетализацияОшибки", ДетализацияОшибки);
	СбисОсновнаяОшибка = Новый Структура("code, message, details", КодНовогоИсключения, СообщениеОбОшибке, ДетализацияОшибки);
	СбисОсновнаяОшибка.Вставить("methodName",	БазоваяОшибка.ИмяМодуля);
	СбисОсновнаяОшибка.Вставить("dump",			СбисДамп);
	СбисОсновнаяОшибка.Вставить("help",			СбисИсключение_РешениеПроблемыПоИсключению(СбисОсновнаяОшибка));
	
	//СбисОсновнаяОшибка = Новый Структура("code,details,methodName,dump,message,help", КодНовогоИсключения, ДетализацияОшибки, БазоваяОшибка.ИмяМодуля, СбисДамп, СообщениеОбОшибке, СбисХелп);
	Возврат СбисОсновнаяОшибка;
	
КонецФункции

//DynamicDirective

// Функция - возвращает текст сообщения по коду https://wiki.razgovorov.ru/index.php/Коды_ошибок 
//
// Параметры:
//  СбисКодОшибки	 - Число	 - код ошибки
// 
// Возвращаемое значение:
//  Строка - текст ошибки по коду
//
Функция СбисИсключение_СообщениеПоКоду(СбисКодОшибки) Экспорт
	Если		СбисКодОшибки = 100 Тогда
		Возврат "Неизвестная ошибка системы";
	ИначеЕсли	СбисКодОшибки = 300 Тогда
		Возврат "Неизвестная ошибка БЛ";
	ИначеЕсли	СбисКодОшибки = 301 Тогда
		Возврат "Сервис СБИС.Диск временно недоступен"; 
	ИначеЕсли	СбисКодОшибки = 302 Тогда
		Возврат "Сайт на техническом обслуживании. Повторите попытку позднее";  
	ИначеЕсли	СбисКодОшибки = 303 Тогда	
		Возврат "Аутентификация не выполнена. Требуется подтверждение действия";
	ИначеЕсли	СбисКодОшибки = 304 Тогда
		Возврат "Фатальная ошибка при аутентификации";
	ИначеЕсли	СбисКодОшибки = 305 Тогда
		Возврат "Аутентификация не выполнена. Неправильные логин/пароль.";
	ИначеЕсли	СбисКодОшибки = 310 Тогда
		Возврат "Фатальная ошибка входных параметров";
	ИначеЕсли	СбисКодОшибки = 315 Тогда
		Возврат "Фатальная ошибка криптографии";
	ИначеЕсли	СбисКодОшибки = 320 Тогда
		Возврат "Фатальная ошибка модуля работы с формализованными документами";
	ИначеЕсли 	СбисКодОшибки = 325 Тогда
		Возврат "Фатальная ошибка запуска в документооборот"; 
	ИначеЕсли 	СбисКодОшибки = 330 Тогда
		Возврат "Фатальная ошибка поиска абонентского ящика";
	ИначеЕсли 	СбисКодОшибки = 335 Тогда
		Возврат "Фатальная ошибка лицензирования";
	ИначеЕсли 	СбисКодОшибки = 340 Тогда
		Возврат "Фатальная ошибка ФЛК.";
	ИначеЕсли	СбисКодОшибки = 400 Тогда
		Возврат "Неизвестная ошибка СБИС Плагина";
	ИначеЕсли	СбисКодОшибки = 412 Тогда
		Возврат	"Работа СБИС Плагин остановлена";
	ИначеЕсли	СбисКодОшибки = 409 Тогда
		Возврат "Сеанс с учетной системой завершен";
	ИначеЕсли	СбисКодОшибки = 500 Тогда
		Возврат "Неизвестная ошибка клиента";
	ИначеЕсли	СбисКодОшибки = 600 Тогда
		Возврат "Неизвестная ошибка настроек";
	ИначеЕсли	СбисКодОшибки = 608 Тогда
		Возврат "Некорректное описание параметра в файле настроек";
	ИначеЕсли	СбисКодОшибки = 610 Тогда
		Возврат "Отсутствует файл настроек для данного типа данных";		
	ИначеЕсли	СбисКодОшибки = 700 Тогда
		Возврат "Неизвестная ошибка подключения"; 
	ИначеЕсли 	СбисКодОшибки = 702 Тогда
		Возврат "Неверно указано имя пользователя или пароль";
	ИначеЕсли	СбисКодОшибки = 703 Тогда
		Возврат "Ошибка создания подключения к ИС";
	ИначеЕсли	СбисКодОшибки = 709 Тогда
		Возврат "Ошибка в ограничении доступа к данным";
	ИначеЕсли	СбисКодОшибки = 710 Тогда
		Возврат "Ошибка блокировки данных";
	ИначеЕсли	СбисКодОшибки = 717 Тогда
		Возврат "Несовместимая версия файла базы данных";
	ИначеЕсли	СбисКодОшибки = 721 Тогда
		Возврат "Неверно указан ИНН";
	ИначеЕсли	СбисКодОшибки = 723 Тогда
		Возврат "Идентификатор пакета не определен";
	ИначеЕсли	СбисКодОшибки = 724 Тогда
		Возврат "Организация неопределена";
	ИначеЕсли	СбисКодОшибки = 726 Тогда
		Возврат "Вложения неопределены";
	ИначеЕсли	СбисКодОшибки = 729 Тогда
		Возврат "Ошибка ФЛК";
	ИначеЕсли	СбисКодОшибки = 735 Тогда
		Возврат "Данная операция недоступна";
	ИначеЕсли	СбисКодОшибки = 755 Тогда
		Возврат "Не найден сертификат ЭП";
	ИначеЕсли	СбисКодОшибки = 756 Тогда
		Возврат "Подключение недоступно";
	ИначеЕсли	СбисКодОшибки = 759 Тогда
		Возврат "Невозможно соединиться с удаленным сервером";
	ИначеЕсли	СбисКодОшибки = 760 Тогда
		Возврат "Неверные параметры фильтра";
	ИначеЕсли	СбисКодОшибки = 762 Тогда
		Возврат "Версия системы не поддерживается";
	ИначеЕсли	СбисКодОшибки = 767 Тогда
		Возврат "Ошибка при создании объекта";
	ИначеЕсли	СбисКодОшибки = 770 Тогда
		Возврат "Ошибка XSLT";
	ИначеЕсли	СбисКодОшибки = 772 Тогда
		Возврат "Ошибка работы с файловой системой";
	ИначеЕсли	СбисКодОшибки = 773 Тогда
		Возврат "Неизвестная ошибка при выполнении метода";	
	ИначеЕсли	СбисКодОшибки = 775 Тогда
		Возврат "Не получен ответ от плагина";	
	ИначеЕсли	СбисКодОшибки = 776 Тогда
		Возврат "Запуск программы/функции/метода не удался";	
	ИначеЕсли	СбисКодОшибки = 779 Тогда
		Возврат "Не найден объект";	
	ИначеЕсли	СбисКодОшибки = 780 Тогда
		Возврат "Не заполнено обязательное поле";
	ИначеЕсли 	СбисКодОшибки = 784 Тогда
		Возврат "Ошибка в настройках соединения";
	ИначеЕсли	СбисКодОшибки = 790 Тогда
		Возврат "Обработка прервана пользователем"
	КонецЕсли;
	Возврат "Неизвестная ошибка системы";
КонецФункции
	
//DynamicDirective

// Функция - возвращает код ошибки https://wiki.razgovorov.ru/index.php/Коды_ошибок по https://sbis.ru/help/integration/api/error_code
//
// Параметры:
//  СбисКодОшибки	 - Строка	 - код ошибки Warning
// 
// Возвращаемое значение:
//  Число - коду ошибки
//
Функция СбисИсключение_КодПоAPIСБИС(КодApiSBIS) Экспорт
	КодApiSBIS_33 = Лев(ВРег(КодApiSBIS), 33);   

	Если КодApiSBIS = "{В-0000-1AA0000F1002}" Тогда
		Возврат 710;   
	ИначеЕсли   КодApiSBIS = "{00000000-0000-0000-0000-1FA000001002}" Тогда
		Возврат 303; 
	ИначеЕсли	КодApiSBIS = "{00000000-0000-0000-0000-1FA000001000}" Тогда
		Возврат 304;
	ИначеЕсли   КодApiSBIS = "{00000000-0000-0000-0000-1FA000001001}" Тогда
		Возврат 305;
		
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA00001" Тогда
		Возврат 310;
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA00002" Тогда
		Возврат 315;
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA00003" Тогда
		Возврат 320;
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA00004" Тогда
		Возврат 325; 
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA00008" Тогда
		Возврат 330;
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA0000D" Тогда
		Возврат 335;
	ИначеЕсли   КодApiSBIS_33 = "{00000000-0000-0000-0000-1FA0000F" Тогда
		Возврат 340;		
	Иначе
		Возврат 100;
	КонецЕсли;
КонецФункции
	
//DynamicDirective

// Функция - генерирует ExtSysException из информации об ошибке
//
// Параметры:
//  ВыбранныйИнформацияОбОшибке	 - ИнформацияОбОшибке	 - вызванное исключение, которое не является запакованным ExtSysException
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_РешениеПроблемыПоИсключению(СбисИсключение)
	
	Если СбисИсключение.code = 776 Тогда
		Если	Найти(СбисИсключение.methodName, "ДБФ")
			И	СбисИсключение.message = СбисИсключение.details Тогда 
			Возврат "https://sbis.ru/help/integration/catalog/driver_not_found";
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

//DynamicDirective

// Функция - генерирует ExtSysException из строки
//
// Параметры:
//  БазоваяОшибка	 - Строка	 - исключение, которое может быть сериализованнйо в JSON строкой, либо просто сообщением.
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_Строка(БазоваяОшибка)
    Перем СтрокаРазбора;
	
	СбисОсновнаяОшибка = СбисИсключение_Пустое();
	
	Если Лев(БазоваяОшибка, 1) = "{" Тогда
		//Это JSON - объект с ошибкой
		СтрокаРазбора = БазоваяОшибка;
	ИначеЕсли	Лев(БазоваяОшибка,35) = "callBLObject(): Метод бизнес логики"
		И		Найти(БазоваяОшибка,"вернул ошибку") Тогда
		//Это ошибка от БЛ в формате JSON
		СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{"));
		СтрокаРазбора = Лев(СтрокаРазбора, СтрДлина(СтрокаРазбора)-1);
	ИначеЕсли Найти(БазоваяОшибка,"{""jsonrpc"":") Тогда
		//Это ошибка от БЛ в формате JSON
		СтрокаРазбора = Сред(БазоваяОшибка, Найти(БазоваяОшибка,"{""jsonrpc"":"));
	КонецЕсли;	
	Если СтрокаРазбора = Неопределено Тогда
		//Это сообщение неизвестной ошибки.
		СбисОсновнаяОшибка.message	= БазоваяОшибка;
		СбисОсновнаяОшибка.details	= БазоваяОшибка;
	Иначе
		Попытка
			СбисОсновнаяОшибка = СбисИсключение_ПрочитатьJSON(СтрокаРазбора);
			Если СбисОсновнаяОшибка.Свойство("Error") Тогда
				СбисОсновнаяОшибка = СбисОсновнаяОшибка.Error;
			КонецЕсли;
		Исключение
			СбисОсновнаяОшибка.message	= БазоваяОшибка;
			СбисОсновнаяОшибка.details	= БазоваяОшибка;
		КонецПопытки;
	КонецЕсли;
	Возврат СбисОсновнаяОшибка;
	
КонецФункции	

//DynamicDirective

Функция СбисИсключение_Число(БазоваяОшибка)
	
	СбисОсновнаяОшибка = СбисИсключение_Пустое();
	СбисОсновнаяОшибка.code		= БазоваяОшибка;
	СбисОсновнаяОшибка.message	= СбисИсключение_СообщениеПоКоду(БазоваяОшибка);
	СбисОсновнаяОшибка.details	= СбисОсновнаяОшибка.message;
    Возврат СбисОсновнаяОшибка;
	
КонецФункции

//DynamicDirective

// Функция - генерирует ExtSysException из структуры
//
// Параметры:
//  БазоваяОшибка	 - Строка	 - исключение, которое может быть сериализованнйо в JSON строкой, либо просто сообщением.
// 
// Возвращаемое значение:
//  Структура - ExtSysException
//
Функция СбисИсключение_Структура(БазоваяОшибка)
	
	СбисОсновнаяОшибка = СбисИсключение_Пустое();
	
	Если ЭтоТипСбис(БазоваяОшибка, "SbisWarning") Тогда
		
		СбисОсновнаяОшибка.details	= БазоваяОшибка.message;
		СбисОсновнаяОшибка.code		= СбисИсключение_КодПоAPIСБИС(ВРег(БазоваяОшибка.data.classid));
	
	ИначеЕсли	БазоваяОшибка.Свойство("code") Тогда
				ЗаполнитьЗначенияСвойств(СбисОсновнаяОшибка, БазоваяОшибка);
		СбисТест =	(СбисОсновнаяОшибка.details = Неопределено
				И	БазоваяОшибка.Свойство("detail",		СбисОсновнаяОшибка.details));
		СбисТест =	(СбисОсновнаяОшибка.methodName = Неопределено
				И	БазоваяОшибка.Свойство("method_name",	СбисОсновнаяОшибка.methodName));
	Иначе
		СбисОсновнаяОшибка.dump = Новый Структура("exception_value", БазоваяОшибка);
	КонецЕсли;
	
	Возврат СбисОсновнаяОшибка;
	
КонецФункции

