
&НаКлиенте
Функция СБИС_ПрочитатьПулОтветов(КэшСБИС) Экспорт
	
	Попытка
		СтрокаXML	= КэшСБИС.ДанныеИнтеграции.Объекты.Плагин.ReadAllXml2();
		СбисСобытия	= СБИС_РазобратьОтвет(СтрокаXML);
	Исключение
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнформацияОбОшибке(), МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("ИнтеграцияИмя") + ".СБИС_ПрочитатьПулОтветов",773)
	КонецПопытки;
	Возврат СбисСобытия;
	
КонецФункции

// Разбор сообщения от плагина
//
// Параметры:
//  Сбис3СобытиеОтвет	- ЛокальныйКэш	 - 
// 
// Возвращаемое значение:
// АсинхронноеСбисСобытие  - 
//
&НаКлиенте
Функция СБИС_ОбработатьОтвет(Сбис3СобытиеОтвет, ДопПараметры=Неопределено) Экспорт
	
	Если		Сбис3СобытиеОтвет.type = "Message" Тогда	//parse_Message
		Сбис3СобытиеОтвет.data	= СБИС_РазобратьОтвет(Сбис3СобытиеОтвет.data);
	ИначеЕсли	Сбис3СобытиеОтвет.type = "Event" Тогда	//parse_Event
		Сбис3СобытиеОтвет.data	= СБИС_РазобратьОтвет(Сбис3СобытиеОтвет.data);
		СбисEventName			= Сбис3СобытиеОтвет.data.eventName;
		
		Сбис3СобытиеОтвет.Вставить("queryID", СбисEventName);
		
		РезультатСобытия	= Неопределено;
		ОшибкаОбработки		= Ложь;
		//костылим имя эвента при чтении ответа.
		Если		СбисEventName = "extsdk2.async.error" Тогда
			Сбис3СобытиеОтвет = Новый Структура("type,queryID,data","Error", Сбис3СобытиеОтвет.data.data.QueryId, Сбис3СобытиеОтвет.data.data);
			Если Сбис3СобытиеОтвет.data.Свойство("Error") Тогда
				Сбис3СобытиеОтвет.data = Сбис3СобытиеОтвет.data.Error;
			КонецЕсли;
		ИначеЕсли	СбисEventName = "extsdk2.async.complete" Тогда
			Сбис3СобытиеОтвет = Новый Структура("type,queryID,data","Message",Сбис3СобытиеОтвет.data.data.QueryId, Сбис3СобытиеОтвет.data.data);				 
		Иначе
			//Обычное событие
		КонецЕсли;
	ИначеЕсли	Сбис3СобытиеОтвет.type = "Error" Тогда	//parse_Error
		Если Сбис3СобытиеОтвет.queryID = "ReadAllXml" Тогда//ошибка сериализатора
			Сбис3СобытиеОтвет.type	= "CriticalError";//Переставим тип, чтобы позвать подписочное событие
			Сбис3СобытиеОтвет.data	= МодульОбъектаКлиент().НовыйСбисИсключение(, "ExtSDK2.ReadAllXml2", 700,"Возникла критическая ошибка при чтении ответа." , Сбис3СобытиеОтвет.data);
		Иначе	
			Сбис3СобытиеОтвет.data = СБИС_РазобратьОтвет(Сбис3СобытиеОтвет.data);
			Если ТипЗнч(Сбис3СобытиеОтвет.data) = Тип("Строка") Тогда
				//Отвалился плагин. Останавливаем обмен
				Если	Найти(Сбис3СобытиеОтвет.data, "disconnect")
					Или	Сбис3СобытиеОтвет.data = "Not connected"
					Или	Сбис3СобытиеОтвет.data = "Server not found" Тогда
					Сбис3СобытиеОтвет.data = МодульОбъектаКлиент().НовыйСбисИсключение(
						756,	"МодульОбъектаКлиент.СБИСПлагин_ЧтениеОтветовИВызовСобытий",,
						"Подключение недоступно", "Работа СБИС плагина была остановлена. Перезапустите СБИС Плагин для дальнейшей работы.");
					Сбис3СобытиеОтвет.queryID	= "SbisPluginClientCOM.Disconnected";
					Сбис3СобытиеОтвет.type		= "Event";//Переставим тип, чтобы позвать подписочное событие
				ИначеЕсли Сбис3СобытиеОтвет.data = "Передан недействительный токен" Тогда
					Сбис3СобытиеОтвет.data = МодульОбъектаКлиент().НовыйСбисИсключение(
						411, "МодульОбъектаКлиент.СБИСПлагин_ЧтениеОтветовИВызовСобытий",, 
						"Для выполнения этой операции необходимо авторизоваться в СБИС Плагин", "Работа пользователя была завершена. Требуется повторная авторизация.");
					Сбис3СобытиеОтвет.queryID	= "UnValidToken";
					Сбис3СобытиеОтвет.type		= "CriticalError";//Переставим тип, чтобы позвать подписочное событие
				Иначе
					//Это обычное исключение
					Сбис3СобытиеОтвет.data = МодульОбъектаКлиент().НовыйСбисИсключение(Сбис3СобытиеОтвет.data, "МодульОбъектаКлиент.СБИСПлагин_ЧтениеОтветовИВызовСобытий");
				КонецЕсли;
			ИначеЕсли	Сбис3СобытиеОтвет.data.Свойство("detail")
					И	Сбис3СобытиеОтвет.data.detail = "#ASYNC" Тогда
				Сбис3СобытиеОтвет.type = "Async";	
			Иначе
				//Обычная ошибка
			КонецЕсли;
		КонецЕсли;
	Иначе
		МодульОбъектаКлиент().ВызватьСбисИсключение(773, "ExtSDK2.СБИС_ОбработатьОтвет",,,"Не поддерживаемый формат ответа!");
	КонецЕсли;
	Возврат МодульОбъектаКлиент().НовыйАсинхронноеСбисСобытие(Сбис3СобытиеОтвет.queryID, Сбис3СобытиеОтвет.data, Сбис3СобытиеОтвет.type)
	
КонецФункции
	
&НаКлиенте
Функция СБИС_ИдЗапросаВызова(Кэш) Экспорт
	
	Возврат Строка(Кэш.СБИС.ДанныеИнтеграции.Объекты.Плагин.GenerateQueryID());
	
КонецФункции

//Разбор сообщения от плагина
&НаКлиенте
Функция СБИС_РазобратьОтвет(ДанныеИзПулаОтвета) Экспорт
	
	Node = Новый ЧтениеXML();
	Node.УстановитьСтроку(ДанныеИзПулаОтвета);
	Если Не Node.Прочитать() Тогда
		Возврат Неопределено;
	КонецЕсли;
	Попытка
		Результат = XmlSerializer_DecodeNode(Node, Новый Структура("Тип,Путь",Node.Имя,"Ответ"));
	Исключение
		МодульОбъектаКлиент().ВызватьСбисИсключение(, МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("ИнтеграцияИмя") + ".СБИС_РазобратьОтвет", 773,,ИнформацияОбОшибке().Описание, Новый Структура("message", ДанныеИзПулаОтвета));
	КонецПопытки;
	Node.Закрыть();
	Node = Неопределено;
	Возврат Результат; 
	
КонецФункции

