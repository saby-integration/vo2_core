
&НаКлиенте
Функция XmlSerializer_DecodeNode(Node, Parent)
	ThisElement = Новый Структура("Тип,Путь", Node.Имя, Parent.Путь);
	Если		ThisElement.Тип = "array" Тогда//decode_array
		Результат = Новый Массив;
		СбисИндекс = 0;
		Пока XmlSerializer_ReadSubNode(Node, ThisElement) Цикл
			ThisElement.Путь = Parent.Путь + "[" + СбисИндекс + "]";
			Результат.Добавить(XmlSerializer_DecodeNode(Node, ThisElement));
			СбисИндекс = СбисИндекс + 1;
		КонецЦикла;
	ИначеЕсли	ThisElement.Тип = "object" Тогда//decode_object
		Результат = Новый Структура;
		Пока XmlSerializer_ReadSubNode(Node, ThisElement) Цикл
			Node_key = Node.ПолучитьАтрибут("name");
			Если Node_key = Неопределено Тогда
				ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": отсутствует атрибут ""name"" с описанием ключа узла.");
			КонецЕсли;
			ThisElement.Путь = Parent.Путь + "." + Node_key;
			РезультатСериализации = XmlSerializer_DecodeNode(Node, ThisElement);
			Попытка
				Результат.Вставить(Node_key, РезультатСериализации);
			Исключение
				//Возможно, когда-нибудь, в следующей жизни будет нормальный овтет, который  мы сможем разобрать всегда.
				//Пропускаем некорректные ключи
				//ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": некорректное значение " + Node_key + " в ключе ""name"".");
			КонецПопытки;
		КонецЦикла;
	Иначе //Простые типы (значения узлов)
		XmlSerializer_ReadSubNode(Node, ThisElement);
		Если		ThisElement.Тип = "str" Тогда//decode_str
			Результат = Node.Значение;
			Если	Сред(Результат,3,1) = "."
				И	Сред(Результат,6,1) = "." Тогда
				//Переопределим значение как дату, если это действительно она
				Если		СтрДлина(Результат) = 10 Тогда
					Попытка
						Результат = Дата(Сред(Результат,7,4), Сред(Результат,4,2), Лев(Результат, 2));
					Исключение
						//В случае исключения, ничего не делаем. Это не дата, значение не меняется
					КонецПопытки;
				ИначеЕсли	СтрДлина(Результат) = 19 Тогда 
					Попытка
						Результат = Дата(Сред(Результат,7,4), Сред(Результат,4,2), Лев(Результат, 2), Сред(Результат,12, 2), Сред(Результат,15, 2), Сред(Результат,18, 2))
					Исключение
						//В случае исключения, ничего не делаем. Это не дата, значение не меняется
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли	ThisElement.Тип = "null" Тогда//decode_null
			Результат = Неопределено;
		ИначеЕсли	ThisElement.Тип = "bool" Тогда//decode_bool
			Попытка
				Результат = Булево(Node.Значение);
			Исключение
				Попытка
					Результат = Булево(Число(Node.Значение));
				Исключение
					ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": ошибка преобразования к типу булево " + Node.Значение + "!");
				КонецПопытки;
			КонецПопытки;
		ИначеЕсли	ThisElement.Тип = "num"
				Или	ThisElement.Тип = "number" Тогда//decode_num
			Попытка
				Результат = Число(Node.Значение);
			Исключение
				ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": ошибка преобразования к типу число " + Node.Значение + "!");
			КонецПопытки;
		Иначе
			ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": неизвестный тип ответа " + ThisElement.Тип + "!");
		КонецЕсли;
		Если Не Node.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			//Если узел сразу закрывает значение, то не делаем ReadNext
			XmlSerializer_ReadSubNode(Node, ThisElement);
		КонецЕсли;
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция XmlSerializer_ReadSubNode(Node, Parent)
	Попытка
		Результат = Node.Прочитать();
	Исключение
		ВызватьИсключение("Ошибка чтения узла по пути " + Parent.Путь + ": " + ОписаниеОшибки());
	КонецПопытки; 
	
	Если Результат Тогда
		Если	Node.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если Node.Имя = Parent.Тип Тогда//Закрывается родитель, закончилась выборка для родительского элемента
				Возврат Ложь;
			Иначе
				ВызватьИсключение("Неверный формат ответа по пути " + Parent.Путь + ": узел " + Node.Имя + " не закывает родительский " + Parent.Тип + "!");
			КонецЕсли;
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция НовыйКомандаСБИСПлагин(Кэш, АсинхроннаяСБИСКоманда, ДопПараметры) Экспорт
	Перем СбисАккаунт;

	Результат = Новый Структура("Метод,	Параметры, Модуль, ВремяВызова, Идентификатор, Аккаунт, Контракт");
	ЗаполнитьЗначенияСвойств(Результат, АсинхроннаяСБИСКоманда);
	ЗаполнитьЗначенияСвойств(Результат, ДопПараметры);
	
	Результат.Параметры	= АсинхроннаяСБИСКоманда.АргументВызова;
	Если Результат.Модуль = Неопределено Тогда
		Результат.Модуль	= МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ИнтеграцияИмя");
	КонецЕсли;
	Если Результат.Аккаунт = Неопределено Тогда
		Результат.Аккаунт	= СбисИдАккаунта(Кэш);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

