
// Функция - расшифровывает указанный файл
//
// Параметры:
//  ФайлЗначение	- Структура	- с полем Ссылка, ДвоичныеДанные(Н)
//	ДопПараметры	- Структура	- (Н) расширение
// 
// Возвращаемое значение:
//  Строка - расшифрованные данные, если успешно
//
&НаКлиенте
функция РасшифроватьФайлВложения(ФайлВложения, ДопПараметры = Неопределено) экспорт
    Перем ДвоичныеДанныеBase64;
	
	Если Не ФайлВложения.Свойство("ДвоичныеДанные", ДвоичныеДанныеBase64) Тогда
		
		ДвоичныеДанныеBase64 = ПолучитьДанныеЗашифрованногоФайла(МодульОбъектаКлиент().ПолучитьТекущийЛокальныйКэш(), ФайлВложения.Ссылка);
		
		Если ДвоичныеДанныеBase64 = Ложь Тогда
			
			ИнтеграцияИмя = МодульОбъектаКлиент().ПолучитьЗначениеПараметраСБИС("ИнтеграцияИмя");
			ОшибкаРасшифровки = МодульОбъектаКлиент().НовыйСбисИсключение(	773, ИнтеграцияИмя + ".РасшифроватьФайлВложения");
			ВызватьИсключение МодульОбъектаКлиент().СбисИсключение_Представление(ОшибкаРасшифровки);
			
		КонецЕсли;
		
		ФайлВложения.Вставить("ДвоичныеДанные", ДвоичныеДанныеBase64);
		
	КонецЕсли;
	
	Возврат МодульОбъектаКлиент().XMLСтрокаИзBase64(ДвоичныеДанныеBase64);
	
КонецФункции

// Функция - расшифровывает указанный файл
//
// Параметры:
//  ФайлЗначение - Структура	 - с полем Ссылка, ДвоичныеДанные(Н)
// 
// Возвращаемое значение:
//  Строка - расшифрованные данные, если успешно
//
&НаКлиенте
функция ПрочитатьФайлВложения(ФайлВложения, ДопПараметры = Неопределено) Экспорт 
    Перем ДвоичныеДанныеBase64;
	
	Возврат ПолучитьДанныеФайла(МодульОбъектаКлиент().ПолучитьТекущийЛокальныйКэш(), ФайлВложения.Ссылка);
	
КонецФункции

