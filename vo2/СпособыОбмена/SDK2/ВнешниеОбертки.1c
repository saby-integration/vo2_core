
&НаКлиенте
Функция СБИС_ПодготовитьДействие(Кэш, document_in, ДопПараметры, Отказ) Экспорт
	Результат = СбисОтправитьИОбработатьКоманду(Кэш, "PrepareAction", Новый Структура("document_in", document_in), ДопПараметры, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат,  "SDK2.СБИС_ПодготовитьДействие");
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СБИС_ВыполнитьДействие(Кэш, document_in, ДопПараметры, Отказ) Экспорт
	результат = СбисОтправитьИОбработатьКоманду(Кэш, "ExecuteAction", Новый Структура("document_in", document_in), ДопПараметры, Отказ);	
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат,  "SDK2.СБИС_ВыполнитьДействие");
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СБИС_СериализоватьСтрокуВBase64(Кэш, ПараметрыСериализовать, ДопПараметры, Отказ) Экспорт
	Попытка
		StreamHelper = Новый COMОбъект("SBIS.StreamHelper");
		Возврат StreamHelper.StringToBase64(ПараметрыСериализовать.Строка); 
	Исключение
		Отказ = Истина;
		ОшибкаСериализации = ИнформацияОбОшибке();
		Возврат Кэш.ОбщиеФункции.сбисИсключение(ОшибкаСериализации, "SDK2.СБИС_ВыполнитьДействие");
	КонецПопытки;
КонецФункции

&НаКлиенте
Функция СБИС_СохранитьПоСсылкеВФайл(Кэш, ПараметрыФайла, ДопПараметры, Отказ) Экспорт
	ДопПараметрыЗапроса	= Новый Структура("СообщатьПриОшибке, ВернутьОшибку, ЗначениеОшибки", Ложь, Истина, 0);
	ПараметрыЗаписи = Новый Структура("uri_in, filename_in", ПараметрыФайла.Ссылка, ПараметрыФайла.ИмяФайла);
	
	Результат = СбисОтправитьИОбработатьКоманду(Кэш, "LoadDataFromURItoFile", ПараметрыЗаписи, ДопПараметрыЗапроса, Отказ);
	Если Отказ Тогда 
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат,  "SDK2.СБИС_СохранитьПоСсылкеВФайл");
	КонецЕсли;
	Возврат ПараметрыФайла.ИмяФайла;
КонецФункции

&НаКлиенте
Функция СБИС_ИнформацияОКонтрагенте(Кэш, СтруктураКонтрагента, ДопПараметры, Отказ) Экспорт
	Результат = СбисОтправитьИОбработатьКоманду(Кэш, "ReadContragentInfo", Новый Структура("Участник", СтруктураКонтрагента), ДопПараметры, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат,  Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ИнформацияОКонтрагенте");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СБИС_ПолучитьИнформациюОТекущемПользователе(Кэш, param, ДопПараметры, Отказ) Экспорт
	Результат = СбисОтправитьИОбработатьКоманду(Кэш, "ReadCurrentUserInfo", param, ДопПараметры, Отказ);
	
	Результат.Вставить("ИдПерсоны", Кэш.ПараметрыСистемы.Клиент.ИдПользователяИБ);
	Результат.Вставить("НомерАккаунта", Кэш.ПараметрыСистемы.Конфигурация.УИДИнтеграции);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат, Кэш.СБИС.ПараметрыИнтеграции.ИнтеграцияИмя + ".СБИС_ПолучитьИнформациюОТекущемПользователе");
	КонецЕсли;
	Возврат Результат;
КонецФункции 

&НаКлиенте
Функция СБИС_ПолучитьСписокАккаунтов(Кэш, param, ДопПараметры, Отказ) Экспорт
	Результат = СбисОтправитьИОбработатьКоманду(Кэш, "AccountsList", param, ДопПараметры, Отказ);
	Если Отказ Тогда
		Возврат Кэш.ОбщиеФункции.сбисИсключение(Результат, "SDK2.СБИС_ПолучитьСписокАккаунтов");
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СБИС_ПереключитьАккаунт(Кэш, param, ДопПараметры, Отказ) Экспорт 
	
	ДопПараметрыВызова= Новый Структура("СообщатьПриОшибке, ВернутьОшибку, ЗначениеОшибки", Ложь, Истина, 0);
	ПараметрыРезультат = Новый Структура(	"Метод,			ДополнительныеПараметры", 
											"SwitchAccount",	ДопПараметрыВызова);
	ПараметрыРезультат.Вставить("Результат", СбисОтправитьИОбработатьКоманду(Кэш, "SwitchAccount", Новый Структура("Параметр", param), ДопПараметрыВызова, Отказ));
	Возврат сбисРезультатАвторизации(Кэш, ПараметрыРезультат, Отказ);
КонецФункции

&НаКлиенте
Функция СБИС_ПолучитьПараметрыПакетаДляОткрытияОнлайн(ОписаниеПакета, ДопПараметры) Экспорт

	Возврат Новый Структура("ИдДокумента, Тикет", ОписаниеПакета.ИдДокумента, "");
	
КонецФункции

