
&НаКлиенте
Перем МестныйКэш;
&НаКлиенте
Перем ПутьКРеквзизитуКолонки;

#Область include_local_ПолучитьМодульОбъекта
#КонецОбласти

// функции для совместимости кода 
&НаКлиенте
Функция СбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция СбисПолноеИмяКолонки(ТчИмя, КолонкаИмя)
	Возврат СтрЗаменить(ПутьКРеквзизитуКолонки, "{%ТЧ%}", ТчИмя) + КолонкаИмя;
КонецФункции
//------------------------------------------------------


// функция обновляет контент для подразделов раздела Полученные	
&НаКлиенте
Функция ОбновитьКонтент(Кэш) Экспорт
	СбисИнициироватьФормуМестныйКэш(Кэш);
	СтруктураДляОбновленияФормы = Кэш.ОбщиеФункции.сбисПолучитьСписокЗадач(Кэш);
	Кэш.ОбщиеФункции.ОбновитьПанельНавигации(Кэш);
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Контент = ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно, "Контент");
	Контент.ТекущаяСтраница = ГлавноеОкно.СбисПолучитьЭлементФормы(Контент, "РеестрСобытий");	
	Кэш.ТаблДок = ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"Таблица_РеестрСобытий");
	Кэш.ГлавноеОкно.СписокДопОперацийРеестра.Очистить();
	Возврат СтруктураДляОбновленияФормы;
КонецФункции

// Функция делает подготовку к переходу	
&НаКлиенте
Функция ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш) Экспорт
	
	фрм = Кэш.ГлавноеОкно.СбисПолучитьФорму("Раздел_Задачи_Задачи");
	фрм.ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш);
	
КонецФункции

&НаКлиенте
Процедура НастроитьКолонки(Кэш) Экспорт
	СбисИнициироватьФормуМестныйКэш(Кэш);	
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрСобытий",	"Ответственный")).Видимость = Ложь;
КонецПроцедуры

//Процедура устанавливает панель навигации на 1ую страницу	
&НаКлиенте
Процедура НавигацияУстановитьПанель(Кэш) Экспорт
	СбисИнициироватьФормуМестныйКэш(Кэш);	
	ГлавноеОкно = Кэш.ГлавноеОкно;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ПанельНавигации").Видимость=Истина;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице1С").Видимость=Ложь;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице").Видимость=Истина;
КонецПроцедуры

//Процедура открывает окно просмотра документа	
&НаКлиенте
Процедура ПоказатьДокумент(Кэш, СтрТабл) Экспорт
	Перем ТекстЗадачи, ТипВложения;
	СбисИнициироватьФормуМестныйКэш(Кэш);
	ГлавноеОкно = Кэш.ГлавноеОкно;
	ПараметрыВызова = Новый Структура("СоставПакета");
	ЗаполнитьЗначенияСвойств(ПараметрыВызова, СтрТабл);
	ПараметрыВызова.Вставить("ВернутьПустойСоставПакета", Истина);//Так костыльно передаём параметр в общую функцию получения состава пакета. Чтобы даже если нет вложений, нам всё равно вернулся пакет.
	МассивПакетов = ПодготовитьСтруктуруДокумента(ПараметрыВызова, Кэш);
	Если Не МассивПакетов.Количество() Тогда
		Возврат;
	КонецЕсли;
	Если СтрТабл.СоставПакета.Количество() Тогда
		ИсходныйСоставПакета = СтрТабл.СоставПакета[0].Значение;
	Иначе
		ИсходныйСоставПакета = Новый Структура("Название", "Пакет");
	КонецЕсли;
		
	ПолныйСоставПакета = МассивПакетов[0];
	Вложение = Неопределено;
	Если Не ПолныйСоставПакета.Свойство("Вложение", Вложение) Тогда//Нет вложений в пакете. Всё равно нужно показать задачу без вложений.
		ПолныйСоставПакета.Вставить("Вложение", Новый Массив);
		Вложение = ПолныйСоставПакета.Вложение;	
	КонецЕсли;
	
	ЕстьСлужебнаяЗаписка = Ложь;
	сч = 0;
	Для Каждого Элемент Из Вложение Цикл
		Если	Элемент.Свойство("Тип", ТипВложения)
			И	ТипВложения = "Служебная записка" Тогда//Во вложении есть служебная записка. Генерируем HTML текст.
			ЕстьСлужебнаяЗаписка = Истина;
			Если ИсходныйСоставПакета.Свойство("ТекстЗадачи") Тогда
				ТекстHTML = ГенерацияТекстаHTMLЗадачи(ИсходныйСоставПакета.ТекстЗадачи);
			Иначе//Заходить не должно, но на всякий случай. Если в строке таблице нет текста задачи, то пробуем получить с онлайна HTML вложения.
				ТекстHTML = Кэш.Интеграция.ПолучитьHTMLВложения(Кэш, ПолныйСоставПакета.Идентификатор, Элемент);
			КонецЕсли;
		Иначе
			ТекстHTML = Кэш.Интеграция.ПолучитьHTMLВложения(Кэш, ПолныйСоставПакета.Идентификатор, Элемент);
		КонецЕсли;
		ПолныйСоставПакета.Вложение[сч].Вставить("ТекстHTML",ТекстHTML);
		ПолныйСоставПакета.Вложение[сч].Вставить("Отмечен",Истина);
		сч = сч + 1;
	КонецЦикла;
	//Служебной записки в пакете нет. Генерируем строку задачи на основании полного состава пакета. Установить текст вложения для вывода на форме просмотра.
	Если 	Не	ЕстьСлужебнаяЗаписка
		И		ИсходныйСоставПакета.Название = "Задача"
		И		ИсходныйСоставПакета.Свойство("ТекстЗадачи", ТекстЗадачи)
		И		ЗначениеЗаполнено(ТекстЗадачи) Тогда
		НоваяСтрока = Новый Структура("Название, Идентификатор,Подпись,ТекстHTML,СтатусКартинка,МожемЗагрузитьВ1С,Статус,Вложение");
		НоваяСтрока.ТекстHTML = ГенерацияТекстаHTMLЗадачи(ТекстЗадачи);
		НоваяСтрока.Название = ПолныйСоставПакета.Название;
		НоваяСтрока.Статус = "Загрузка документа не поддерживается.";
		НоваяСтрока.СтатусКартинка = 0;
		НоваяСтрока.МожемЗагрузитьВ1С = 0;
		ВложениеЗадачи = Новый СписокЗначений;
		ВложениеЗадачи.Добавить(Новый Структура);
		НоваяСтрока.Вложение = ВложениеЗадачи;
		
		ДобавитьСтроки = Новый Массив();
		ДобавитьСтроки.Добавить(НоваяСтрока);
		ПолныйСоставПакета.Вставить("ДобавочныеСтроки", ДобавитьСтроки);
	КонецЕсли;
	Если ИсходныйСоставПакета.Свойство("ИмяСБИС") Тогда
		ПолныйСоставПакета.Вставить("ИмяСБИС", ИсходныйСоставПакета.ИмяСБИС);
	КонецЕсли;
	Если ИсходныйСоставПакета.Свойство("ИдСБИС") Тогда
		ПолныйСоставПакета.Вставить("ИдСБИС", ИсходныйСоставПакета.ИдСБИС);
	КонецЕсли;
		
	ПолныйСоставПакета.Вставить("Примечание", СтрТабл.Комментарий);
	
	Если МодульОбъектаКлиент().ПолучитьЗначениеФичи(Новый Структура("НазваниеФичи", "РасширенныйФункционалСопоставленияНоменклатуры")) Тогда 
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент","ФормаПросмотрДокументаРасширенноеСопоставление","", Кэш);
		фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета); 	
	Иначе
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент", "ФормаПросмотрДокумента","", Кэш);
		фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция	ГенерацияТекстаHTMLЗадачи(ТекстЗадачи)
	Результат = "<HTML><BODY><table cellspacing=0 cellpadding=0 WIDTH=100%>";
	Для шаг = 1 По СтрЧислоСтрок(ТекстЗадачи) Цикл
		Результат = Результат + Символы.ПС + "<tr><td>" + СтрПолучитьСтроку(ТекстЗадачи, шаг) + "</td></tr>";
	КонецЦикла;
	Результат = Результат + "</table></BODY></HTML>";
	Возврат Результат;
КонецФункции

// Функция заполняет данные о прохождении документа	
&НаКлиенте
Функция ЗаполнитьПрохождение(СоставПакета) Экспорт
	Возврат МестныйКэш.ОбщиеФункции.ЗаполнитьПрохождение(МестныйКэш, СоставПакета, Новый Структура);
КонецФункции

&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НаСменуРаздела","Раздел_Задачи_Задачи","", Кэш);
	фрм.НаСменуРаздела(Кэш);
КонецПроцедуры

// функция формирует структуру данных по пакету электронных документов, необходимую для его предварительного просмотра и загрузки в 1С		
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
	МассивПакетов	= Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокументаСбис(СтрокаСпискаДокументов, Кэш);
	Если ЗначениеЗаполнено(МассивПакетов) Тогда
		Возврат	МассивПакетов;
	Иначе
		Возврат	Новый Массив;
	КонецЕсли;
КонецФункции

// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;

	ОписаниеТиповФильтра = МодульОбъектаКлиент().ПолучитьЗначениеПараметраТекущегоСеанса("ТипыПолейФильтра");
	Если Не ТипЗнч(ОписаниеТиповФильтра) = Тип("Структура") Тогда
		ОписаниеТиповФильтра = Новый Структура;
	КонецЕсли;	
	
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За весь период";
	Иначе
		ГлавноеОкно.ФильтрПериод = "0";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрОрганизация") Тогда
		ГлавноеОкно.ФильтрОрганизация = ОписаниеТиповФильтра.ФильтрОрганизация.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОрганизация = "";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрКонтрагент") Тогда
		ГлавноеОкно.ФильтрКонтрагент = ОписаниеТиповФильтра.ФильтрКонтрагент.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрКонтрагент = "";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрОтветственный") Тогда
		ГлавноеОкно.ФильтрОтветственный = ОписаниеТиповФильтра.ФильтрОтветственный.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОтветственный = "";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = "";
	ГлавноеОкно.ФильтрДатаКнц = "";
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
	ГлавноеОкно.ФильтрСтраница = 1;
	ГлавноеОкно.ФильтрМаска = "";
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовВформеПросмотра(ФормаПросмотра, СоставПакета, КэшПарам) Экспорт
	Перем СбисЭтап, СбисДействие;

	ПараметрыПакетаОбновить = Новый Структура;
	ПараметрыПакетаОбновить.Вставить("ОтмечатьВложения",	Истина);
	МодульОбъектаКлиент().СоставПакета_Обновить(СоставПакета, Новый ФиксированнаяСтруктура("Параметры", ПараметрыПакетаОбновить));

	Если	СоставПакета.Свойство("Этап", СбисЭтап)
		И	СбисЭтап.Количество()
		И	СбисЭтап[0].Свойство("Действие", СбисДействие)
		И	СбисДействие.Количество() Тогда
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "ТекущийЭтап").Видимость = Истина;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Утвердить").Видимость = Истина;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Утвердить").Заголовок = СбисДействие[0].Название;
		Если СбисДействие.Количество() > 1 Тогда
			МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Отклонить").Видимость = Истина;
			МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Отклонить").Заголовок = СбисДействие[1].Название;
		Иначе
			МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Отклонить").Видимость = Ложь;
		КонецЕсли;
	Иначе
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "ТекущийЭтап").Видимость = Ложь;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Отклонить").Видимость = Ложь;
		МестныйКэш.ГлавноеОкно.СбисПолучитьЭлементФормы(ФормаПросмотра, "Утвердить").Видимость = Ложь;
	КонецЕсли;
	
	ПанельТулБара = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ФормаПросмотра, "ТулБар");
	ПанельТулБара.ТекущаяСтраница = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ПанельТулБара, "Полученные"); 

КонецПроцедуры

&НаКлиенте
Функция сбисСписокДополнительныхОпераций(Кэш, ФормаПросмотра) Экспорт
	СписокДопОпераций = Новый СписокЗначений;
	СписокДопОпераций.Добавить("СбисПечать", "Печать");
	СписокДопОпераций.Добавить("СохранитьНаДиск", "Сохранить на диск");
	СписокДопОпераций.Добавить("ОткрытьДокументОнлайн", "Открыть документ на sbis.ru");
	СписокДопОпераций.Добавить("СформироватьРасхождение", "Сформировать расхождение");
	ФормаПросмотра.СервисДопОперацияПросмотра(СписокДопОпераций);	// alo доп операции из инишки Сервис
	Возврат СписокДопОпераций;
КонецФункции

&НаКлиенте
Функция СбисПечать(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СбисПечать("");
КонецФункции

&НаКлиенте
Функция СохранитьНаДиск(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СохранитьНаДискНажатие("");
КонецФункции

&НаКлиенте
Функция ОткрытьДокументОнлайн(Кэш, ФормаПросмотра) Экспорт
	Если ФормаПросмотра<>Неопределено Тогда
	ФормаПросмотра.ОткрытьДокументОнлайн("");
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция СформироватьРасхождение(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СформироватьРасхождениеНажатие("");
КонецФункции

&НаКлиенте
Процедура ФильтрУстановитьВидимость(ФормаФильтра) Экспорт
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентПодключен");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрОтветственный");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрТипыДокументов");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагент");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентСФилиалами");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрОрганизация");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрСостояние");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатураКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли; 
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрНаименованиеНоменклатуры");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура сбисОформлениеДопПолейРеестра(Кэш) Экспорт
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, СбисПолноеИмяКолонки("Таблица_РеестрДокументов", "Срок")).Видимость = Ложь;
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, СбисПолноеИмяКолонки("Таблица_РеестрДокументов", "Лицо2")).Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СбисИнициироватьФормуМестныйКэш(Кэш)
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = Кэш;
	КонецЕсли;
	Если ПутьКРеквзизитуКолонки = Неопределено Тогда
		ПутьКРеквзизитуКолонки = "{%ТЧ%}.";
		Если МестныйКэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
			ПутьКРеквзизитуКолонки = ПутьКРеквзизитуКолонки + "{%ТЧ%}";
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
