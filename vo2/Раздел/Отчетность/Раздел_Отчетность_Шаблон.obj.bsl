
&НаКлиенте
Перем МестныйКэш;

&НаКлиенте
Процедура НастроитьКолонки(Кэш) Экспорт
	Перем ИмяРеестра, Ини;
	Если Кэш.Разделы.Отчетность.Свойство(Кэш.Текущий.Имя,ИмяРеестра)=Ложь Тогда
		Сообщить("Отсутствует настройка для перехода в раздел. Доступные настройки можно подключить на вкладке ""Настройки/Файлы настроек""");
		Возврат;
	КонецЕсли;
	Если Кэш.ини.Свойство(ИмяРеестра,Ини)=Ложь Тогда
		Возврат;
	ИначеЕсли Ини = Неопределено Тогда
		Ини = Кэш.ФормаНастроек.Ини(Кэш, ИмяРеестра);
	КонецЕсли;
	Кэш.ОбщиеФункции.НастроитьКолонки(Ини, Кэш); // alo СтатусГос
	Кэш.ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"Таблица_РеестрДокументов").ПодчиненныеЭлементы.Таблица_РеестрДокументовСклад.Заголовок = "Склад";
КонецПроцедуры

//Процедура обновляет панель массовых операций, панель фильтра, контекстное меню при смене раздела			
&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
	МестныйКэш = Кэш;
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НаСменуРаздела","Раздел_Отчетность_Отчетность","", Кэш);
	фрм.НаСменуРаздела(Кэш);
КонецПроцедуры

//Процедура устанавливает панель навигации на 1ую страницу и скрывает панель	
&НаКлиенте
Процедура НавигацияУстановитьПанель(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ПанельНавигации").Видимость=Истина;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице1С").Видимость=Истина;
	ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице").Видимость=Ложь;
КонецПроцедуры	

//Функция обновляет контент для подразделов раздела Покупка	
&НаКлиенте
Функция ОбновитьКонтент(Кэш) Экспорт
	Перем ИмяРеестра, Ини;
	МестныйКэш = Кэш;
	Если Кэш.Разделы.Отчетность.Свойство(Кэш.Текущий.Имя,ИмяРеестра)=Ложь Тогда
		Сообщить("Отсутствует настройка для перехода в раздел. Доступные настройки можно подключить на вкладке ""Настройки/Файлы настроек""");
		Возврат Ложь;
	КонецЕсли;
	Если Кэш.ини.Свойство(ИмяРеестра,Ини)=Ложь Тогда
		Возврат Ложь;
	ИначеЕсли Ини = Неопределено Тогда
		Ини = Кэш.ФормаНастроек.Ини(Кэш, ИмяРеестра);
	КонецЕсли;
	Кэш.Текущий.ТипДок = ИмяРеестра;
	СтруктураДляОбновленияФормы = Кэш.ОбщиеФункции.сбисОбновитьРеестрДокументов1С(Ини, Кэш);
	Кэш.ОбщиеФункции.ОбновитьПанельНавигации(Кэш);
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Контент = ГлавноеОкно.сбисЭлементФормы(ГлавноеОкно, "Контент");
	Контент.ТекущаяСтраница = ГлавноеОкно.сбисПолучитьСтраницу(Контент, "РеестрДокументов");	
	Кэш.ТаблДок = ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"Таблица_РеестрДокументов");
	
	Кэш.ГлавноеОкно.СписокДопОперацийРеестра.Очистить();
	ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"ДопОперации3").Видимость = Ложь;
	Если Ини.Свойство("ДопОперацияРеестра")  Тогда
		Для Каждого ДопОперация Из Ини.ДопОперацияРеестра Цикл
			Кэш.ГлавноеОкно.СписокДопОперацийРеестра.Добавить(ДопОперация.Значение.Операция.Функция1С, Кэш.ОбщиеФункции.РассчитатьЗначение("Операция", ДопОперация.Значение, Кэш));
			ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"ДопОперации3").Видимость = Истина;
		КонецЦикла;
	КонецЕсли;

	Возврат СтруктураДляОбновленияФормы;
КонецФункции

// Функция делает подготовку к переходу	
&НаКлиенте
Функция ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш) Экспорт
	
	фрм = Кэш.ГлавноеОкно.СбисПолучитьФорму("Раздел_Отчетность_Отчетность");
	фрм.ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш);
	
КонецФункции


//Процедура открывает окно просмотра документа		
&НаКлиенте
Процедура ПоказатьДокумент(Кэш, СтрТабл) Экспорт
	Сообщить("Просмотр докуметов в разделе ""Отчетность"" не поддерживается");
	Возврат;
КонецПроцедуры

// Функция готовит структуру пакета электронных документов по комплекту документов 1С для просмотра и отправки контрагентам.	
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
	МассивПакетов = Новый Массив;
	Контекст = Новый Структура("МассивПакетов", Новый Массив);
	
	Отказ = Ложь;
	СоответствиеДокументДанные = Новый Соответствие;
	Для Каждого Вложение Из СтрокаСпискаДокументов.Документы1С Цикл
		ИмяИниДокумента = Кэш.ФормаНастроек.Ини_Выгрузка(Кэш, Вложение.Значение, Вложение.Представление, Кэш.Текущий);
		ЗначениеИниДокумента = Кэш.ФормаНастроек.Ини(Кэш, ИмяИниДокумента);
		Если ЗначениеИниДокумента = Неопределено Тогда
			Сообщить("Отсутствует настройка формирования выбранного вида отчетности " + Кэш.ОбщиеФункции.ПолучитьРеквизитМетаданныхОбъекта(Вложение.Значение, "Имя"));
			Продолжить;
		КонецЕсли;
		ФункцияФормирования = "ПолучитьВложение_Отчет";
		Если (ЗначениеИниДокумента.Свойство("ФункцияФормирования")) Тогда
			ФункцияФормирования = Кэш.ОбщиеФункции.РассчитатьЗначение("ФункцияФормирования", ЗначениеИниДокумента, Кэш);
		КонецЕсли;
		Если		ФункцияФормирования = "getAttachmentTax"
				Или	ФункцияФормирования = "getListDocumentsTax" Тогда
			ФункцияФормирования = "ПолучитьВложение_Отчет";
		ИначеЕсли	ФункцияФормирования = "getAttachmentPFR" Тогда 
			ФункцияФормирования = "ПолучитьВложение_ПФР";
		ИначеЕсли	ФункцияФормирования = "getAttachmentPFR2" Тогда 
			ФункцияФормирования = "ПолучитьВложение_ПФР2";
		ИначеЕсли	ФункцияФормирования = "getAttachmentProslej" Тогда 
			ФункцияФормирования = "ПолучитьВложение_Прослеж";
		Иначе
			Сообщить("Выгрузка данного отчета не поддерживается.");
			Продолжить;
		КонецЕсли;	
		
		фрм = Кэш.ГлавноеОкно.СбисНайтиФормуФункцииСеанса(Кэш, ФункцияФормирования, "РаботаСДокументами1С", Новый Структура, Отказ);
		Если Отказ Тогда
			Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, фрм);
			Возврат Неопределено;
		ИначеЕсли фрм = Ложь Тогда
			Сообщить("Формирование выбранного вида отчетности не поддерживается");
			Возврат Неопределено;
		КонецЕсли;
		Подготовлено = Вычислить("фрм." + ФункцияФормирования + "(Кэш, СоответствиеДокументДанные, Вложение.Значение, Новый Структура, Отказ)");
		Если Отказ Тогда
			Кэш.ГлавноеОкно.СбисСообщитьОбОшибке(Кэш, Подготовлено);
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	ПервоеВложение = СтрокаСпискаДокументов.СоставПакета[0].Значение;
	ПолныйСоставПакета = Новый Структура("Вложение, Название, ОсновнойДокумент", Новый Массив, Строка(ПервоеВложение), ПервоеВложение);
	Для Каждого Элемент Из СтрокаСпискаДокументов.СоставПакета Цикл
		Документ = Элемент.Значение;
		Если ТипЗнч(Документ) = Тип("Строка") Тогда
			Продолжить;
		КонецЕсли;
		СписокВложений = СоответствиеДокументДанные.Получить(Документ);
		Если СписокВложений.Свойство("Ошибка") Тогда
			ПолныйСоставПакета.Вставить("Ошибка", Кэш.ОбщиеФункции.СбисИсключение(СписокВложений.Ошибка, Кэш.Текущий.Форма.Заголовок + ".ПодготовитьСтруктуруДокумента"));
			ПолныйСоставПакета.ОсновнойДокумент = Документ;
			Прервать;
		КонецЕсли;
		Для Каждого ВложениеСгенерировано Из СписокВложений.Результат Цикл
			СтруктураВложения = Новый Структура("Файл", Новый Структура);
			СтруктураВложения.Файл.Вставить("ПутьКФайлу",	ВложениеСгенерировано.Путь);
			СтруктураВложения.Файл.Вставить("Имя",			ВложениеСгенерировано.Имя);
			ПолныйСоставПакета.Вложение.Добавить(СтруктураВложения);
		КонецЦикла;
	КонецЦикла;
	Возврат ПолныйСоставПакета;	
КонецФункции

&НаКлиенте
Функция СбисСписокДополнительныхОпераций(Кэш, ФормаПросмотра) Экспорт
	СписокДопОпераций = Новый СписокЗначений;
	СписокДопОпераций.Добавить("СохранитьНаДиск", "Сохранить на диск");
	СписокДопОпераций.Добавить("ОткрытьКонтрагентаОнлайнПоПакету", "Открыть контрагента на sbis.ru");
	ФормаПросмотра.СервисДопОперацияПросмотра(СписокДопОпераций);	// alo доп операции из инишки Сервис
	Ини = Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок);
	Если Ини.Свойство("ДопОперацияПросмотра")  Тогда
		Для Каждого ДопОперация Из Ини.ДопОперацияПросмотра Цикл
			СписокДопОпераций.Добавить(ДопОперация.Значение.Операция.Функция1С, Кэш.ОбщиеФункции.РассчитатьЗначение("Операция", ДопОперация.Значение, Кэш));
		КонецЦикла;
	КонецЕсли;
	Возврат СписокДопОпераций;
КонецФункции

&НаКлиенте
Процедура СбисОформлениеДопПолейРеестра(Кэш) Экспорт
	Кэш.ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"Таблица_РеестрДокументов").ПодчиненныеЭлементы.Таблица_РеестрДокументовСрок.Видимость = Ложь;
	Кэш.ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"Таблица_РеестрДокументов").ПодчиненныеЭлементы.Таблица_РеестрДокументовЛицо2.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Функция СохранитьНаДиск(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СохранитьНаДискНажатие("");
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьЭлементовВформеПросмотра(ФормаПросмотра, СоставПакета, КэшПарам) Экспорт
	ФормаПросмотра.ДокументРазобран = Истина;
	СопоставлятьНоменклатуруПередОтправкой = Ложь;
	Если СоставПакета.Свойство("Вложение") Тогда
		Для Каждого Вложение Из СоставПакета.Вложение Цикл
			Если Вложение.Свойство("НоменклатураКодКонтрагента") Тогда
				СопоставлятьНоменклатуруПередОтправкой = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Если СопоставлятьНоменклатуруПередОтправкой Тогда
		ФормаПросмотра.Элементы.Контент.ПодчиненныеЭлементы.Загрузка.Видимость = Истина;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьИдентификатор.Видимость = Истина;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьНоменклатураПоставщика.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьХарактеристикаПоставщика.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьЕдИзм.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьКоличество.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьЦена.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСуммаБезНал.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСтавкаНДС.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСуммаНДС.Видимость = Ложь;
		ФормаПросмотра.Элементы.ТабличнаяЧасть.ПодчиненныеЭлементы.ТабличнаяЧастьСумма.Видимость = Ложь;
		ФормаПросмотра.Элементы.СинонимДокумента.Видимость = Ложь;
	Иначе
		ФормаПросмотра.Элементы.Контент.ПодчиненныеЭлементы.Загрузка.Видимость = Ложь;	
	КонецЕсли;
	ФормаПросмотра.Заголовок = строка(ФормаПросмотра.СоставПакета.Вложение[0].Документы1С[0].Значение);
	ФормаПросмотра.ЗаголовокПакета = строка(ФормаПросмотра.СоставПакета.Вложение[0].Документы1С[0].Значение);
	ФормаПросмотра.Элементы.Контент.ПодчиненныеЭлементы.Прохождение.Видимость = Ложь;
	ФормаПросмотра.Элементы.ТаблицаДокументов.ПодчиненныеЭлементы.ТаблицаДокументовСтатус.Видимость = Ложь;
	ФормаПросмотра.Элементы.ТаблицаДокументов.ПодчиненныеЭлементы.ТаблицаДокументовСтатусКартинка.Видимость = Ложь;
	ФормаПросмотра.Элементы.ТаблицаДокументов.ПодчиненныеЭлементы.ТаблицаДокументовУдалить.Видимость = Истина;
	ФормаПросмотра.Элементы.ТаблицаДокументов.ПодчиненныеЭлементы.ТаблицаДокументовШифрование.Видимость = (КэшПарам.ШифроватьВыборочно = Истина И (КэшПарам.СпособОбмена=5 Или КэшПарам.СпособОбмена=7));
	ФормаПросмотра.Элементы.ТаблицаДокументов.ПодчиненныеЭлементы.ТаблицаДокументовОтмечен.Видимость = Ложь;
	ФормаПросмотра.Элементы.ПакетКомментарий.Доступность = Истина;
	ФормаПросмотра.Элементы.ТулБар.ТекущаяСтраница = МестныйКэш.ГлавноеОкно.сбисПолучитьСтраницу(ФормаПросмотра.Элементы.ТулБар,"Продажа");
КонецПроцедуры

// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За последний месяц";
	Иначе
		ГлавноеОкно.ФильтрПериод = "1";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОрганизация") Тогда
		ГлавноеОкно.ФильтрОрганизация = Кэш.ТипыПолейФильтра.ФильтрОрганизация.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОрганизация = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрКонтрагент") Тогда
		ГлавноеОкно.ФильтрКонтрагент = Кэш.ТипыПолейФильтра.ФильтрКонтрагент.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрКонтрагент = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОтветственный") Тогда
		ГлавноеОкно.ФильтрОтветственный = Кэш.ТипыПолейФильтра.ФильтрОтветственный.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОтветственный = "";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = ДобавитьМесяц(ТекущаяДата(),-1);
	ГлавноеОкно.ФильтрДатаКнц = ТекущаяДата();
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
	ГлавноеОкно.ФильтрСтраница = 1;
	ГлавноеОкно.ФильтрМаска = "";
	//Очистим дополнительные параметры фильтра
	НазваниеРаздела = Кэш.Разделы["р"+Кэш.Текущий.Раздел];
	ФормаДопФильтра = ГлавноеОкно.сбисНайтиФормуФункции("сбисСписокДопПараметровФильтра","Фильтр_Раздел_"+НазваниеРаздела+"_"+Кэш.Текущий.ТипДок,"Фильтр_Раздел_"+НазваниеРаздела+"_Шаблон", Кэш);
	Если ФормаДопФильтра<>ложь Тогда
		ГлавноеОкно.ОчиститьДополнительныеПараметрыФильтра(ФормаДопФильтра);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФильтрУстановитьВидимость(ФормаФильтра) Экспорт
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентПодключен");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентСФилиалами");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрОтветственный");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрТипыДокументов");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрМаска");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатураКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"НадписьКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"НадписьGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли; 
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрНаименованиеНоменклатуры");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = МестныйКэш.ГлавноеОкно.сбисЭлементФормы(ФормаФильтра,"ФильтрGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры
