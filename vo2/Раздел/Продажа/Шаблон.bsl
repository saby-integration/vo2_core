
// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции

//------------------------------------------------------

// Функция заполняет данные о прохождении документа	
&НаКлиенте
Функция ЗаполнитьПрохождение(СоставПакета) Экспорт
	Если	МестныйКэш = Неопределено 
		И 	НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
		
		Попытка
			МестныйКэш = ЭтаФорма.ВладелецФормы.Кэш;
		Исключение
			МестныйКэш = ЭтаФорма.ВладелецФормы.МестныйКэш;
		КонецПопытки;
	КонецЕсли;
	Возврат МестныйКэш.ОбщиеФункции.ЗаполнитьПрохождение(МестныйКэш, СоставПакета, Новый Структура);
КонецФункции

//Процедура открывает окно просмотра документа		
&НаКлиенте
Процедура ПоказатьДокумент(Кэш, СтрТабл) Экспорт
	Перем Вложения, СсылкаНаПервоеВложение;
	МестныйКэш = Кэш;  // alo СтатусГос 
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Кэш.СписокНоменклатуры.Очистить();
	МассивПакетов = ПодготовитьСтруктуруДокумента(СтрТабл, Кэш);
	Если МассивПакетов.Количество() = 1 Тогда
		ПолныйСоставПакета = МассивПакетов[0];
		Если ПолныйСоставПакета.Свойство("Ошибка") Тогда
			МодульОбъектаКлиент().СообщитьСбисИсключение(ПолныйСоставПакета.Ошибка);
			Возврат;
		ИначеЕсли Не ПолныйСоставПакета.Свойство("Вложение", Вложения) Тогда
			Возврат;
		КонецЕсли;
		//UAA НоваяЛента
		Если НЕ ЗначениеЗаполнено(Вложения) Тогда
			Возврат;
		КонецЕсли;
		//1189641556
		ТекущийРаздел = Кэш.Разделы["р"+Кэш.Текущий.Раздел];   
		
		ДопПараметры = Новый Структура;  
		ДопПараметры.Вставить("ТекущийРаздел",ТекущийРаздел); 
		ДопПараметры.Вставить("Вложения",Вложения); 
		
		Попытка
			Кэш.СБИС.МодульОбъектаКлиент.ПодготовитьДокументСбисКПросмотру(ПолныйСоставПакета,ДопПараметры);
		Исключение
			Кэш.СБИС.МодульОбъектаКлиент.ВызватьСбисИсключение(ИнформацияОбОшибке(), "Раздел_Продажа_Шаблон.ПоказатьДокумент");
		КонецПопытки;
		
		Если МодульОбъектаКлиент().ПолучитьЗначениеФичи(Новый Структура("НазваниеФичи", "РасширенныйФункционалСопоставленияНоменклатуры")) Тогда 
			фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент","ФормаПросмотрДокументаРасширенноеСопоставление","", Кэш);
			фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета); 	
		Иначе
			фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент", "ФормаПросмотрДокумента","", Кэш);
			фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета);
		КонецЕсли;
		
	ИначеЕсли МассивПакетов.Количество() > 1 Тогда
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокументы","ФормаПросмотрДокументов","", Кэш);
		фрм.ПоказатьДокументы(Кэш, МассивПакетов);
	КонецЕсли;
КонецПроцедуры

//Процедура обновляет панель массовых операций, панель фильтра, контекстное меню при смене раздела		
&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НаСменуРаздела","Раздел_Продажа_Продажа","", Кэш);
	фрм.НаСменуРаздела(Кэш);
КонецПроцедуры

// Функция готовит структуру пакета электронных документов по комплекту документов 1С для просмотра и отправки контрагентам.
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
	// Т.к. по одной строке документов 1С может быть сформировано несколько комплектов (оказание услуги), то структуры пакетов добавляются в массив.	
	Возврат Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокумента1С(СтрокаСпискаДокументов, Кэш);	
КонецФункции

&НаКлиенте
Функция ПодготовитьСтруктуруДокументаДляРасхождений(СтрокаСпискаДокументов, Кэш) Экспорт
	
	Попытка
		Возврат МодульОбъектаКлиент().ПодготовитьСтруктуруДокументаДляРасхожденийДляРеестра1С(СтрокаСпискаДокументов);
	Исключение
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнформацияОбОшибке(), "Раздел_Продажа_Шаблон.ПодготовитьСтруктуруДокументаДляРасхождений");
	КонецПопытки;
	
КонецФункции

// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;
	
	ОписаниеТиповФильтра = МодульОбъектаКлиент().ПолучитьЗначениеПараметраТекущегоСеанса("ТипыПолейФильтра");
	Если Не ТипЗнч(ОписаниеТиповФильтра) = Тип("Структура") Тогда
		ОписаниеТиповФильтра = Новый Структура;
	КонецЕсли;
	
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За последний месяц";
	Иначе
		ГлавноеОкно.ФильтрПериод = "1";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрОрганизация") Тогда
		ГлавноеОкно.ФильтрОрганизация = ОписаниеТиповФильтра.ФильтрОрганизация.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОрганизация = "";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрКонтрагент") Тогда
		ГлавноеОкно.ФильтрКонтрагент = ОписаниеТиповФильтра.ФильтрКонтрагент.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрКонтрагент = "";
	КонецЕсли;
	Если ОписаниеТиповФильтра.Свойство("ФильтрОтветственный") Тогда
		ГлавноеОкно.ФильтрОтветственный = ОписаниеТиповФильтра.ФильтрОтветственный.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОтветственный = "";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = ДобавитьМесяц(ТекущаяДата(),-1);
	ГлавноеОкно.ФильтрДатаКнц = ТекущаяДата();
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
	ГлавноеОкно.ФильтрСтраница = 1;
	ГлавноеОкно.ФильтрМаска = "";
	//Очистим дополнительные параметры фильтра
	НазваниеРаздела = Кэш.Разделы["р"+Кэш.Текущий.Раздел];
	ФормаДопФильтра = ГлавноеОкно.сбисНайтиФормуФункции("сбисСписокДопПараметровФильтра","Фильтр_Раздел_"+НазваниеРаздела+"_"+Кэш.Текущий.ТипДок,"Фильтр_Раздел_"+НазваниеРаздела+"_Шаблон", Кэш);
	Если ФормаДопФильтра<>ложь Тогда
		ГлавноеОкно.ОчиститьДополнительныеПараметрыФильтра(ФормаДопФильтра);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция сбисСписокДополнительныхОпераций(Кэш, ФормаПросмотра) Экспорт
	СписокДопОпераций = Новый СписокЗначений;
	СписокДопОпераций.Добавить("СохранитьНаДиск", "Сохранить на диск");
	СписокДопОпераций.Добавить("ОткрытьКонтрагентаОнлайнПоПакету", "Открыть контрагента на sbis.ru");
	ФормаПросмотра.СервисДопОперацияПросмотра(СписокДопОпераций);	// alo доп операции из инишки Сервис
	Ини = Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок);
	Если Ини.Свойство("ДопОперацияПросмотра")  Тогда
		Для Каждого ДопОперация Из Ини.ДопОперацияПросмотра Цикл
			СписокДопОпераций.Добавить(ДопОперация.Значение.Операция.Функция1С, Кэш.ОбщиеФункции.РассчитатьЗначение("Операция", ДопОперация.Значение, Кэш));
		КонецЦикла;
	КонецЕсли;
	Возврат СписокДопОпераций;
КонецФункции

&НаКлиенте
Функция СохранитьНаДиск(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СохранитьНаДискНажатие("");
КонецФункции

&НаКлиенте
Функция сбисПараметрыСписокИзменений(Кэш) Экспорт
	ДопПараметры = Новый Структура;
	Ини = Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок);
	Если Ини.Свойство("СписокИзменений_Тип")  Тогда
		ДопПараметры.Вставить("Тип", Кэш.ОбщиеФункции.РассчитатьЗначение("СписокИзменений_Тип", Ини, Кэш));
	КонецЕсли;  
	Возврат ДопПараметры; 
КонецФункции

&НаКлиенте
Функция ОбновитьКонтентПодговитьРаздел(ПараметрыОбновления, ДопПараметры) Экспорт
	
	Кэш = ДопПараметры.Кэш; 
	
	НаСменуРаздела(Кэш);
	НастроитьКолонки(Кэш);
	НавигацияУстановитьПанель(Кэш);
	
	Кэш.ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"ПанельФильтра").Видимость = Истина;
	Кэш.ГлавноеОкно.сбисЭлементФормы(Кэш.ГлавноеОкно,"ПоказатьПанельФильтра").Видимость = Истина;

	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура НастроитьКолонки(Кэш) Экспорт
	ИмяРеестра="";	Ини="";
	Если Кэш.Разделы.Продажа.Свойство(Кэш.Текущий.Имя,ИмяРеестра)=Ложь Тогда
		Сообщить("Отсутствует настройка для перехода в раздел. Доступные настройки можно подключить на вкладке ""Настройки/Файлы настроек""");
		Возврат;
	КонецЕсли;
	Если Кэш.ини.Свойство(ИмяРеестра,Ини)=Ложь Тогда
		Возврат;
	ИначеЕсли Ини = Неопределено Тогда
		Ини = Кэш.ФормаНастроек.Ини(Кэш, ИмяРеестра);
	КонецЕсли;
	Кэш.ОбщиеФункции.НастроитьКолонки(Ини, Кэш);	// alo СтатусГос

	МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(Кэш.ГлавноеОкно, "Таблица_РеестрДокументов.Ответственный").Видимость = Ложь;
	МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(Кэш.ГлавноеОкно, "Таблица_РеестрДокументов.ТекущийЭтап").Видимость = Ложь;
	МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(Кэш.ГлавноеОкно, "Таблица_РеестрДокументов.СтатусВГосСистеме").Видимость = Кэш.Парам.СтатусыВГосСистеме;
	Если Не Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(Кэш.ГлавноеОкно,"Таблица_РеестрДокументов.Склад").Ширина = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(Кэш.ГлавноеОкно, "Таблица_РеестрДокументов").Ширина / 30;
	КонецЕсли;
	
	КолонкиИзменить	= Новый	Массив;
	Если  Кэш.ПараметрыСистемы.Клиент.УправляемоеПриложение Тогда
		ДобавитьКИмениКолонки = "Таблица_РеестрДокументов";
		ПараметрИзменить = "Заголовок";
		ПутьККолонкам	= "Элементы.Таблица_РеестрДокументов.ПодчиненныеЭлементы";
	Иначе
		ДобавитьКИмениКолонки = "";
		ПараметрИзменить = "ТекстШапки";
		ПутьККолонкам	= "ЭлементыФормы.Таблица_РеестрДокументов.Колонки";
	КонецЕсли;
	КолонкиИзменить.Добавить(Новый Структура("ПолноеИмяКолонки, ИмяКолонки, ПараметрыИзменить", ДобавитьКИмениКолонки + "Лицо2", "Лицо2", Новый Структура(ПараметрИзменить, "Грузополучатель")));
	КолонкиИзменить.Добавить(Новый Структура("ПолноеИмяКолонки, ИмяКолонки, ПараметрыИзменить", ДобавитьКИмениКолонки + "Склад", "Склад", Новый Структура(ПараметрИзменить, "Склад")));
	
	СтруктураОбновления	= Новый	Структура();
	СтруктураОбновления.Вставить("ИмяТаблицы",		"Таблица_РеестрДокументов");
	СтруктураОбновления.Вставить("СтруктураПолей",	Новый	Структура("КолонкиИзменить", КолонкиИзменить));
	СтруктураОбновления.Вставить("ПутьККолонкам",	ПутьККолонкам);
	
	Кэш.ГлавноеОкно.НастроитьКолонкиФормы(СтруктураОбновления);

КонецПроцедуры

// Функция делает подготовку к переходу	
&НаКлиенте
Функция ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш) Экспорт
	
	фрм = Кэш.ГлавноеОкно.СбисПолучитьФорму("Раздел_Продажа_Продажа");
	фрм.ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш);
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьЭлементовВформеПросмотра(ФормаПросмотра, СоставПакета, КэшПарам) Экспорт
	
	ФормаПросмотра.ДокументРазобран = Истина;
	
	ПараметрыПакетаОбновить = Новый Структура;
	ПараметрыПакетаОбновить.Вставить("ЗагрузкаПоддерживается",	Ложь);
	ПараметрыПакетаОбновить.Вставить("ВыборочноеШифрование",	Истина);
	ПараметрыПакетаОбновить.Вставить("Разобран",				Истина);
	ПараметрыПакетаОбновить.Вставить("УдалятьВложения",			Истина);
	ПараметрыПакетаОбновить.Вставить("АбонентскийЯщик",			Истина);
	ПараметрыПакетаОбновить.Вставить("УказыватьКомментарий",	Истина);
	ПараметрыПакетаОбновить.Вставить("ОтмечатьВложения",		Истина);
	МодульОбъектаКлиент().СоставПакета_Обновить(СоставПакета, Новый ФиксированнаяСтруктура("Параметры", ПараметрыПакетаОбновить));
	
	ПанельТулБара = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ФормаПросмотра, "ТулБар");
	ПанельТулБара.ТекущаяСтраница = МодульОбъектаКлиент().ПолучитьЭлементФормыОбработки(ПанельТулБара, "Продажа"); 
	
КонецПроцедуры

