
&НаКлиенте
Перем МестныйКэш Экспорт; 

#Область include_local_ПолучитьМодульОбъекта
#КонецОбласти

// функции для совместимости кода 
&НаКлиенте
Функция сбисПолучитьФорму(ИмяФормы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Попытка
			ЭтотОбъект="";
		Исключение
		КонецПопытки;
		Возврат ПолучитьФорму("ВнешняяОбработка.СБИС.Форма."+ИмяФормы);
	КонецЕсли;
	Возврат ЭтотОбъект.ПолучитьФорму(ИмяФормы);
КонецФункции

&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

&НаКлиенте
Функция сбисПолучитьСтраницу(Элемент, ИмяСтраницы)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Элемент.ПодчиненныеЭлементы[ИмяСтраницы];
	КонецЕсли;
	Возврат Элемент.Страницы[ИмяСтраницы];
КонецФункции

//------------------------------------------------------

// Функция заполняет данные о прохождении документа	
&НаКлиенте
Функция ЗаполнитьПрохождение(СоставПакета) Экспорт
	Если	МестныйКэш = Неопределено 
		И 	НЕ ЭтаФорма.ВладелецФормы = Неопределено Тогда
		
		Попытка
			МестныйКэш = ЭтаФорма.ВладелецФормы.Кэш;
		Исключение
			МестныйКэш = ЭтаФорма.ВладелецФормы.МестныйКэш;
		КонецПопытки;
	КонецЕсли;
	Возврат МестныйКэш.ОбщиеФункции.ЗаполнитьПрохождение(МестныйКэш, СоставПакета, Новый Структура);
КонецФункции

//Процедура открывает окно просмотра документа		
&НаКлиенте
Процедура ПоказатьДокумент(Кэш, СтрТабл) Экспорт
	Перем Вложения, СсылкаНаПервоеВложение;
	МестныйКэш = Кэш;  // alo СтатусГос 
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Кэш.СписокНоменклатуры.Очистить();
	МассивПакетов = ПодготовитьСтруктуруДокумента(СтрТабл, Кэш);
	Если МассивПакетов.Количество() = 1 Тогда
		ПолныйСоставПакета = МассивПакетов[0];
		Если Не ПолныйСоставПакета.Свойство("Вложение", Вложения) Тогда
			Возврат;
		КонецЕсли;
		//UAA НоваяЛента
		Если Вложения.Количество() Тогда
			Если	Вложения[0].Свойство("Документы1С", СсылкаНаПервоеВложение)
				И	СсылкаНаПервоеВложение.Количество() Тогда
				СсылкаНаПервоеВложение = СсылкаНаПервоеВложение[0].Значение;
				Отказ = Ложь;
				ПараметрыПакетаСБИС	= Кэш.ОбщиеФункции.ИдентификаторСБИСПоДокументу(Кэш, СсылкаНаПервоеВложение);
				ИдДок				= ПараметрыПакетаСБИС.ИдДокумента;
				Если ЗначениеЗаполнено(ИдДок) Тогда
					ДопПараметры = Новый Структура("СообщатьПриОшибке, ВернутьОшибку", Ложь, Истина);
					РезультатЧтенияПоИд = Кэш.Интеграция.ПрочитатьДокумент(Кэш, ИдДок, ДопПараметры, Отказ);
					Если Не Отказ
						И	ТипЗнч(РезультатЧтенияПоИд) = Тип("Структура")
						И	РезультатЧтенияПоИд.Свойство("Событие") Тогда
						ПолныйСоставПакета.Вставить("Событие", РезультатЧтенияПоИд.Событие);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Для Каждого Элемент Из Вложения Цикл
				Если ЗначениеЗаполнено(Элемент.XMLДокумента) Тогда
					ТекстHTML = Кэш.Интеграция.ПолучитьHTMLПоXML(Кэш, Элемент);
				Иначе
					ТекстHTML = "";
				КонецЕсли;
				Элемент.Вставить("ТекстHTML",ТекстHTML);
			КонецЦикла;
		КонецЕсли;
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокумент","ФормаПросмотрДокумента","", Кэш);
		фрм.ПоказатьДокумент(Кэш,ПолныйСоставПакета);	
	ИначеЕсли МассивПакетов.Количество() > 1 Тогда
		фрм = ГлавноеОкно.сбисНайтиФормуФункции("ПоказатьДокументы","ФормаПросмотрДокументов","", Кэш);
		фрм.ПоказатьДокументы(Кэш, МассивПакетов);
	КонецЕсли;
КонецПроцедуры

//Процедура обновляет панель массовых операций, панель фильтра, контекстное меню при смене раздела		
&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
	фрм = Кэш.ГлавноеОкно.сбисНайтиФормуФункции("НаСменуРаздела","Раздел_Продажа_Продажа","", Кэш);
	фрм.НаСменуРаздела(Кэш);
КонецПроцедуры

// Функция готовит структуру пакета электронных документов по комплекту документов 1С для просмотра и отправки контрагентам.
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
	// Т.к. по одной строке документов 1С может быть сформировано несколько комплектов (оказание услуги), то структуры пакетов добавляются в массив.	
	Возврат Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокумента1С(СтрокаСпискаДокументов, Кэш);	
КонецФункции

&НаКлиенте
Функция ПодготовитьСтруктуруДокументаДляРасхождений(СтрокаСпискаДокументов, Кэш) Экспорт
	
	Попытка
		Возврат МодульОбъектаКлиент().ПодготовитьСтруктуруДокументаДляРасхожденийДляРеестра1С(СтрокаСпискаДокументов);
	Исключение
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнформацияОбОшибке(), "Раздел_Продажа_Шаблон.ПодготовитьСтруктуруДокументаДляРасхождений");
	КонецПопытки;
	
КонецФункции

// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За последний месяц";
	Иначе
		ГлавноеОкно.ФильтрПериод = "1";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОрганизация") Тогда
		ГлавноеОкно.ФильтрОрганизация = Кэш.ТипыПолейФильтра.ФильтрОрганизация.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОрганизация = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрКонтрагент") Тогда
		ГлавноеОкно.ФильтрКонтрагент = Кэш.ТипыПолейФильтра.ФильтрКонтрагент.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрКонтрагент = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОтветственный") Тогда
		ГлавноеОкно.ФильтрОтветственный = Кэш.ТипыПолейФильтра.ФильтрОтветственный.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОтветственный = "";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = ДобавитьМесяц(ТекущаяДата(),-1);
	ГлавноеОкно.ФильтрДатаКнц = ТекущаяДата();
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
	ГлавноеОкно.ФильтрСтраница = 1;
	ГлавноеОкно.ФильтрМаска = "";
	//Очистим дополнительные параметры фильтра
	НазваниеРаздела = Кэш.Разделы["р"+Кэш.Текущий.Раздел];
	ФормаДопФильтра = ГлавноеОкно.сбисНайтиФормуФункции("сбисСписокДопПараметровФильтра","Фильтр_Раздел_"+НазваниеРаздела+"_"+Кэш.Текущий.ТипДок,"Фильтр_Раздел_"+НазваниеРаздела+"_Шаблон", Кэш);
	Если ФормаДопФильтра<>ложь Тогда
		ГлавноеОкно.ОчиститьДополнительныеПараметрыФильтра(ФормаДопФильтра);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция сбисСписокДополнительныхОпераций(Кэш, ФормаПросмотра) Экспорт
	СписокДопОпераций = Новый СписокЗначений;
	СписокДопОпераций.Добавить("СохранитьНаДиск", "Сохранить на диск");
	СписокДопОпераций.Добавить("ОткрытьКонтрагентаОнлайнПоПакету", "Открыть контрагента на sbis.ru");
	ФормаПросмотра.СервисДопОперацияПросмотра(СписокДопОпераций);	// alo доп операции из инишки Сервис
	Ини = Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок);
	Если Ини.Свойство("ДопОперацияПросмотра")  Тогда
		Для Каждого ДопОперация Из Ини.ДопОперацияПросмотра Цикл
			СписокДопОпераций.Добавить(ДопОперация.Значение.Операция.Функция1С, Кэш.ОбщиеФункции.РассчитатьЗначение("Операция", ДопОперация.Значение, Кэш));
		КонецЦикла;
	КонецЕсли;
	Возврат СписокДопОпераций;
КонецФункции

&НаКлиенте
Функция СохранитьНаДиск(Кэш, ФормаПросмотра) Экспорт
	ФормаПросмотра.СохранитьНаДискНажатие("");
КонецФункции

&НаКлиенте
Функция сбисПараметрыСписокИзменений(Кэш) Экспорт
	ДопПараметры = Новый Структура;
	Ини = Кэш.ФормаНастроек.Ини(Кэш, Кэш.Текущий.ТипДок);
	Если Ини.Свойство("СписокИзменений_Тип")  Тогда
		ДопПараметры.Вставить("Тип", Кэш.ОбщиеФункции.РассчитатьЗначение("СписокИзменений_Тип", Ини, Кэш));
	КонецЕсли;  
	Возврат ДопПараметры; 
КонецФункции

