
&НаКлиенте
Перем МестныйКэш;

#Область include_local_ПолучитьМодульОбъекта
#КонецОбласти

//функции для совместимости кода 
&НаКлиенте
Функция сбисЭлементФормы(Форма,ИмяЭлемента)
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		Возврат Форма.Элементы.Найти(ИмяЭлемента);
	КонецЕсли;
	Возврат Форма.ЭлементыФормы.Найти(ИмяЭлемента);
КонецФункции

//функция обновляет контент для раздела Отправленные	
&НаКлиенте
Функция ОбновитьКонтент(Кэш) Экспорт
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = Кэш;
	КонецЕсли;

	СтруктураДляОбновленияФормы = Кэш.Интеграция.ПолучитьСписокСобытий(Кэш, "Отправленные");
	Кэш.ОбщиеФункции.ОбновитьПанельНавигации(Кэш);
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Контент = сбисЭлементФормы(ГлавноеОкно, "Контент");
	Контент.ТекущаяСтраница = ГлавноеОкно.сбисПолучитьСтраницу(Контент, "РеестрСобытий");	
	Кэш.ТаблДок = сбисЭлементФормы(ГлавноеОкно,"Таблица_РеестрСобытий");
	
	//Добавить колонки в таблицу
	СтруктураТаблицыСобытий	= ПолучитьСтруктуруТаблицыСобытий(Кэш);
	Кэш.ГлавноеОкно.НастроитьКолонкиФормы(СтруктураТаблицыСобытий);
	Кэш.ГлавноеОкно.СписокДопОперацийРеестра.Очистить();
	Возврат СтруктураДляОбновленияФормы;
КонецФункции

//Процедура обновляет панель массовых операций, панель фильтра, контекстное меню при смене раздела		
&НаКлиенте
Процедура НаСменуРаздела(Кэш) Экспорт
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = Кэш;
	КонецЕсли;       
	
	ПодготовитьФильтрРаздела(Кэш);
	
	ГлавноеОкно = Кэш.ГлавноеОкно;
	
	ГлавноеОкно.сбисУстановитьКонтекстноеМеню("Таблица_РеестрДокументов", "КонтекстноеМенюОтправленные");
	ГлавноеОкно.сбисУстановитьКонтекстноеМеню("Таблица_РеестрСобытий", "КонтекстноеМенюОтправленныеРеестрСобытий");
	ПанельМассовыхОпераций = сбисЭлементФормы(ГлавноеОкно,"ПанельМассовыхОпераций");
	ПанельМассовыхОпераций.ТекущаяСтраница = ГлавноеОкно.сбисПолучитьСтраницу(ПанельМассовыхОпераций,"Отправленные");
	сбисЭлементФормы(ГлавноеОкно,"ПанельМассовыхОпераций").Видимость = Истина;//aa.uferov раздел задач
	сбисЭлементФормы(ГлавноеОкно,"ПанельТулбар").Видимость = Истина;
	сбисЭлементФормы(ГлавноеОкно,"ПанельФильтра").Видимость = Истина;
	сбисЭлементФормы(ГлавноеОкно,"ПоказатьПанельФильтра").Видимость = Истина;
КонецПроцедуры

// Функция делает подготовку к переходу	
&НаКлиенте
Функция ОбновитьКонтент_ПередВызовом(СтруктураРаздела, Кэш) Экспорт
	
	Если ЗначениеЗаполнено(Кэш.Парам.ФильтрыПоРазделам["Отправленные"]) Тогда
		Кэш.ГлавноеОкно.сбисВосстановитьФильтр(Кэш, Кэш.Парам.ФильтрыПоРазделам["Отправленные"]);
	Иначе
		ФильтрОчистить(Кэш);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура НастроитьКолонки(Кэш) Экспорт
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = Кэш;
	КонецЕсли;
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрДокументов",	"ТекущийЭтап")).Видимость = Истина;	 		
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрДокументов",	"СтатусВГосСистеме")).Видимость = Кэш.Парам.СтатусыВГосСистеме;	 		
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрСобытий",		"СтатусВГосСистеме")).Видимость = Кэш.Парам.СтатусыВГосСистеме;	 		 	
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрСобытий",	"Комментарий")).Видимость = Истина;
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрСобытий",	"Ответственный")).Видимость = Истина;
	Кэш.ГлавноеОкно.СбисПолучитьЭлементФормы(Кэш.ГлавноеОкно, Кэш.ГлавноеОкно.СбисПолноеИмяКолонки("Таблица_РеестрСобытий",	"Вложения")).Видимость = Истина;	
	
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("Заказчик");
	МассивРеквизитов.Добавить("Перевозчик");
	
	Кэш.ГлавноеОкно.НастроитьКолонкиФормы(Новый Структура("ИмяТаблицы, СтруктураПолей", "Таблица_РеестрСобытий", Новый Структура("КолонкиУдалить", МассивРеквизитов)));
КонецПроцедуры

//Процедура устанавливает панель навигации на 1ую страницу	
&НаКлиенте
Процедура НавигацияУстановитьПанель(Кэш=Неопределено) Экспорт
	Если МестныйКэш = Неопределено Тогда
		МестныйКэш = Кэш;
	КонецЕсли;

	ГлавноеОкно = МестныйКэш.ГлавноеОкно;
	сбисЭлементФормы(ГлавноеОкно,"ПанельНавигации").Видимость=Истина;
	сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице1С").Видимость=Ложь;
	сбисЭлементФормы(ГлавноеОкно,"ЗаписейНаСтранице").Видимость=Истина;
КонецПроцедуры

// функция формирует структуру данных по пакету электронных документов, необходимую для его предварительного просмотра		
&НаКлиенте
Функция ПодготовитьСтруктуруДокумента(СтрокаСпискаДокументов, Кэш) Экспорт
	Возврат Кэш.ОбщиеФункции.ПодготовитьСтруктуруДокументаСбис(СтрокаСпискаДокументов, Кэш);	
КонецФункции

&НаКлиенте
Функция ПодготовитьСтруктуруДокументаДляРасхождений(СтрокаСпискаДокументов, Кэш) Экспорт
				
	Попытка
		Возврат МодульОбъектаКлиент().ПодготовитьСтруктуруДокументаДляРасхожденийДляРеестраСБИС(СтрокаСпискаДокументов);
	Исключение
		МодульОбъектаКлиент().ВызватьСбисИсключение(ИнформацияОбОшибке(), "Раздел_Отправленные_Отправленные.ПодготовитьСтруктуруДокументаДляРасхождений");
	КонецПопытки;
			
КонецФункции

// Процедура устанавливает значения фильтра по-умолчанию для текущего раздела	
&НаКлиенте
Процедура ФильтрОчистить(Кэш) Экспорт
	ГлавноеОкно = Кэш.ГлавноеОкно;
	Если ТипЗнч(ЭтаФорма) = Тип("УправляемаяФорма") Тогда
		ГлавноеОкно.ФильтрПериод = "За весь период";
	Иначе
		ГлавноеОкно.ФильтрПериод = "0";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОрганизация") Тогда
		ГлавноеОкно.ФильтрОрганизация = Кэш.ТипыПолейФильтра.ФильтрОрганизация.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОрганизация = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрКонтрагент") Тогда
		ГлавноеОкно.ФильтрКонтрагент = Кэш.ТипыПолейФильтра.ФильтрКонтрагент.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрКонтрагент = "";
	КонецЕсли;
	Если Кэш.ТипыПолейФильтра.Свойство("ФильтрОтветственный") Тогда
		ГлавноеОкно.ФильтрОтветственный = Кэш.ТипыПолейФильтра.ФильтрОтветственный.ПривестиЗначение();
	Иначе	
		ГлавноеОкно.ФильтрОтветственный = "";
	КонецЕсли;
	ГлавноеОкно.ФильтрДатаНач = "";
	ГлавноеОкно.ФильтрДатаКнц = "";
	ГлавноеОкно.ФильтрСостояние = ГлавноеОкно.СписокСостояний.НайтиПоИдентификатору(0).Значение;
	ГлавноеОкно.ФильтрТипыДокументов = Новый СписокЗначений;
	ГлавноеОкно.ФильтрКонтрагентПодключен = "";
	ГлавноеОкно.ФильтрКонтрагентСФилиалами = Ложь;
	ГлавноеОкно.ФильтрСтраница = 1;
	ГлавноеОкно.ФильтрМаска = "";
	//++ Бухов А. Фильтр по умолчанию 	
	Если Кэш.Ини.Конфигурация.Свойство("ФильтрПоУмолчанию") И  Кэш.Ини.Конфигурация.ФильтрПоУмолчанию.Свойство(Кэш.Текущий.ТипДок) Тогда 
		Попытка
			Ини = Кэш.ОбщиеФункции.ПолучитьДанныеДокумента1С(Кэш.Ини.Конфигурация.ФильтрПоУмолчанию[Кэш.Текущий.ТипДок],Неопределено,Кэш.КэшЗначенийИни, Кэш.Парам);  // alo Меркурий
			Для Каждого Элем Из Ини Цикл 
				Если нрег(Лев(Элем.Ключ, 6)) = "фильтр" Тогда
					ГлавноеОкно[Элем.Ключ] = Элем.Значение;
				КонецЕсли;
			КонецЦикла;
		Исключение
		КонецПопытки;
	КонецЕсли;
	//-- Бухов А. Фильтр по умолчанию
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруТаблицыСобытий(Кэш) Экспорт
	
	КолонкиИзменить	= Новый	Массив;
	Если  ТипЗнч(Кэш.ГлавноеОкно) = Тип("УправляемаяФорма") Тогда
		ДобавитьКИмениКолонки = "Таблица_РеестрСобытий";
		ПараметрИзменить = "Заголовок";
		ПутьККолонкам	= "Элементы.Таблица_РеестрСобытий.ПодчиненныеЭлементы";
	Иначе
		ДобавитьКИмениКолонки = "";
		ПараметрИзменить = "ТекстШапки";
		ПутьККолонкам	= "ЭлементыФормы.Таблица_РеестрСобытий.Колонки";
	КонецЕсли;
	КолонкиИзменить.Добавить(Новый Структура("ПолноеИмяКолонки, ИмяКолонки, ПараметрыИзменить", ДобавитьКИмениКолонки + "Контрагент", "Контрагент", Новый Структура(ПараметрИзменить, "Контрагент")));
	КолонкиИзменить.Добавить(Новый Структура("ПолноеИмяКолонки, ИмяКолонки, ПараметрыИзменить", ДобавитьКИмениКолонки + "НашаОрганизация", "НашаОрганизация", Новый Структура(ПараметрИзменить, "Организация")));
	
	СтруктураОбновления	= Новый	Структура();
	СтруктураОбновления.Вставить("ИмяТаблицы",		"Таблица_РеестрСобытий");
	СтруктураОбновления.Вставить("СтруктураПолей",	Новый	Структура("КолонкиИзменить", КолонкиИзменить));
	СтруктураОбновления.Вставить("ПутьККолонкам",	ПутьККолонкам);
	
	Возврат	СтруктураОбновления;

КонецФункции

&НаКлиенте
Процедура ФильтрУстановитьВидимость(ФормаФильтра) Экспорт
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентПодключен");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагентСФилиалами");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрОтветственный");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрТипыДокументов");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрКонтрагент");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрОрганизация");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;	
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра, "ФильтрСостояние");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;	
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьКонтрагентПодключен");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьОтветственный");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьТипыДокументов");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьКонтрагент");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьОрганизация");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Истина;
	КонецЕсли;
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатураКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"НадписьGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли; 
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрНаименованиеНоменклатуры");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;    
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрНоменклатура1С");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;   
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрКодКонтрагента");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;  
	ВыбранныйЭлемент = сбисЭлементФормы(ФормаФильтра,"ФильтрGTIN");
	Если Не ВыбранныйЭлемент = Неопределено Тогда
		ВыбранныйЭлемент.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

// Процедура для заполнения списков выбора в фильтре. Восстанавливает последние установки фильтра раздела
// 
// Параметры:
//  Кэш  - Структура - Кэш обработки
//
&НаКлиенте
Процедура ПодготовитьФильтрРаздела(Кэш) Экспорт

	СписокСостояний = Новый СписокЗначений();
	СписокСостояний.Добавить("Все документы");
	СписокСостояний.Добавить("Внутренняя обработка");
	СписокСостояний.Добавить("Недоставленные");
	СписокСостояний.Добавить("Не получен ответ");
	СписокСостояний.Добавить("Утвержденные");
	СписокСостояний.Добавить("Отклоненные");
	СписокСостояний.Добавить("С ошибками");
	СписокСостояний.Добавить("Незакрепленные");
	СписокСостояний.Добавить("Удаленные");
	СписокСостояний.Добавить("Аннулированные");
	СписокСостояний.Добавить("Черновики");
			
	Кэш.ГлавноеОкно.СписокСостояний = СписокСостояний;      
	
	//ГлавноеОкно.ФильтрСостояние = СписокСостояний.НайтиПоИдентификатору(0).Значение;
	Кэш.ГлавноеОкно.ФильтрОбновитьПанель()
	
КонецПроцедуры // ПодготовитьФильтрРаздела()
