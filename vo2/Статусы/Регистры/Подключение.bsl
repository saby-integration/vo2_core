
//Процедура заполняет параметры работы с свойствами в регистрах.
&НаКлиенте
Процедура УстановитьПараметрыРегистры(Кэш)
	ИниКонфигурация								= Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация");
	ИмяРегистраСвойствОбъектов 					= ИмяРегистраСвойствОбъектов(Кэш);  
	ИмяПланаВидовХарактеристикСвойствОбъектов 	= ИмяПланаВидовХарактеристикСвойствОбъектов(Кэш);
	СправочникСвойствОбъектов 					= ИмяСправочникаСвойствОбъектов(Кэш);
	КодСервиса 									= Кэш.СБИС.ПараметрыИнтеграции.КодСервиса;
	СтатусРегламент 							= Кэш.ОбщиеФункции.РассчитатьЗначение("СтатусРегламент", ИниКонфигурация);
	МассивСтатусРегламент						= ?(ЗначениеЗаполнено(СтатусРегламент), РазбитьСтрокуВМассив(СтатусРегламент,","), Новый Массив);
	СвойстваВРазрезеКодаСервиса = Новый СписокЗначений;
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_статус",				"ДокументСБИС_Статус");
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_идвложения",			"ДокументСБИС_ИдВложения");
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_ид",					"ДокументСБИС_Ид");
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_сравнениезначение",	"ДокументСБИС_СравнениеЗначение");
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_сравнениестатус",	"ДокументСБИС_СравнениеСтатус");
	СвойстваВРазрезеКодаСервиса.Добавить("документсбис_статусгос",			"ДокументСБИС_СтатусГос");

	СвойстваВРазрезеАккаунта = Новый СписокЗначений;
	СвойстваВРазрезеАккаунта.Добавить("документсбис_ид", "ДокументСБИС_Ид");

	ПараметрыСоединения = Новый Структура(
	"ИмяРегистраСвойствОбъектов, ИмяПланаВидовХарактеристикСвойствОбъектов, СправочникСвойствОбъектов, КодСервиса, МассивСтатусРегламент, СвойстваВРазрезеКодаСервиса, СвойстваВРазрезеАккаунта"
	,ИмяРегистраСвойствОбъектов, ИмяПланаВидовХарактеристикСвойствОбъектов, СправочникСвойствОбъектов, КодСервиса, МассивСтатусРегламент, СвойстваВРазрезеКодаСервиса, СвойстваВРазрезеАккаунта);
	ПараметрыСоединения.Вставить("КэшСвойствОбъектов", Новый Соответствие);
	ПараметрыСоединения.Вставить("СохранятьРасхождения", МодульОбъектаКлиент().ПолучитьЗначениеПараметраСбис("СохранятьРасхождения"));
	
	// << alo СтатусГос Список допустимых статусов Гос систем. Разделены комментариями с названием систем и типами документов. Повторяющиеся закоентарены
	//	Маркировка
	// Реализация по УПД
	СбисСтатусыГос = Новый СписокЗначений;
	СбисСтатусыГос.Добавить("Отправка в ГИС МТ","Начальное событие маркировки на реализациях по УПД");
	СбисСтатусыГос.Добавить("Коды подтверждены","Документ реализации был утвержден по ЭДО");
	СбисСтатусыГос.Добавить("Регистрация в ГИС МТ","Ожидаем получения успешной технической квитанции");
	СбисСтатусыГос.Добавить("Ошибка регистрации в ГИС МТ","В технической квитанции пришла ошибка");
	// Поступления по УПД
	СбисСтатусыГос.Добавить("Оформлений в ГИС МТ","Начальное событие при получении маркировочного поступления по УПД");
	СбисСтатусыГос.Добавить("Коды отклонены","Документ поступления был отклонен по ЭДО");
	СбисСтатусыГос.Добавить("Коды утверждены","Документ поступления был утвержден по ЭДО");
	//СбисСтатусыГос.Добавить("Регистрация в ГИС МТ","Сделан запрос технической квитанции");
	//СбисСтатусыГос.Добавить("Ошибка регистрации в ГИС МТ","В технической квитанции пришла ошибка");
	СбисСтатусыГос.Добавить("Зарегистрировано в ГИС МТ","В технической квитанции пришел успех");
	// Реализация по Тrue API
	СбисСтатусыГос.Добавить("Оформление в ГИС МТ","Начальное событие для реализации по True API. Документ наполняется наименованиями и редактируется");
	СбисСтатусыГос.Добавить("Оформлено","Редактирование документа завершено");
	//СбисСтатусыГос.Добавить("Отправка в ГИС МТ","Отправка документа в ГИС МТ по True API");
	СбисСтатусыГос.Добавить("Отправлено в ГИС МТ","Отправка завершено (переименовали пред. событие)");
	//СбисСтатусыГос.Добавить("Регистрация в ГИС МТ","Ожидаем утверждения / отклонения покупателем");
	СбисСтатусыГос.Добавить("Принято в ГИС МТ","Документ был утвержден покупателем ИЛИ успешно принят в ГИС МТ в случае реализации не участнику.");
	СбисСтатусыГос.Добавить("Не принято в ГИС МТ","Документ был отклонен покупателем / ГИС МТ");
	// Поступление по True API
	СбисСтатусыГос.Добавить("Получено из ГИС МТ","Начальное событие для документа поступления, полученного по TrueAPI");
	СбисСтатусыГос.Добавить("Утверждение в ГИС МТ","Отправлен файл приёмки всех кодов маркировки");
	СбисСтатусыГос.Добавить("Утверждено в ГИС МТ","Файл приёмки был успешно обработан в ГИС МТ");
	//СбисСтатусыГос.Добавить("Не принято в ГИС МТ","Файл приёмки был отклонен ГИС МТ с ошибкой");
	СбисСтатусыГос.Добавить("Отклонение в ГИС МТ","Отправлен файл приёмки с отклонением всех кодов маркировки");
	СбисСтатусыГос.Добавить("Отклонено в ГИС МТ","Файл приёмки с отклонением был успешно обработан в ГИС МТ");
	// Заказ Документ исходящего заказа используется для заказа кодов маркировки у ГИС МТ в сценариях импорта маркированной продукции
	//не нужно СбисСтатусыГос.Добавить("Оформление заказа кодов ГИС МТ для импорта","Начальное событие для документа. Закрывается, только после успешного заказа кодов на все позиции документа");
	СбисСтатусыГос.Добавить("Регистрация заказа кодов в ГИС МТ","Отправлен заказ кодов в ГИС МТ");
	СбисСтатусыГос.Добавить("Зарегистрирован заказ кодов в ГИС МТ","Заказ кодов успешно обработан в ГИС МТ по части или всем позициям документа");
	СбисСтатусыГос.Добавить("Ошибка при регистрация заказа кодов в ГИС МТ","При регистарции заказа не смогли доставить заказ в ГИС МТ или ГИС МТ обработал заказ с ошибкой");
	СбисСтатусыГос.Добавить("Регистрация упаковок","Будет в документах, по которым пользователь упаковывает полученные коды из документа заказа. Упаковка доступна только после успешной регистрации всего заказа.");
	СбисСтатусыГос.Добавить("Упаковки зарегистрированы","Упаковки были успешно зарегистрированы запросами агрегации в ГИС МТ");
	СбисСтатусыГос.Добавить("Ошибка при регистрации упаковок","Не смогли доставить до ГИС МТ запрос на регистрацию упаковок");
	СбисСтатусыГос.Добавить("Упаковки не зарегистрированы","Упаковки не были зарегистрированы в ГИС МТ");
	СбисСтатусыГос.Добавить("Инициирован заказ марок из внешней системы","Событие, создание которого иницирует робот внешней обработки после успешного заказа кодов маркировки");
	// Импортное поступление 
	//не нужно СбисСтатусыГос.Добавить("Оформление импорта в ГИС МТ","Начальное событие для документа. Закрывается, только после успешного ввода в оборот");
	СбисСтатусыГос.Добавить("Ввод в оборот в ГИС МТ","Ввод в оборот отправлен в ГИС МТ");
	СбисСтатусыГос.Добавить("Ввод в оборот незарегистрирован","Ввод в оборот обработан в ГИС МТ с ошибкой или не доставлен до ГИС МТ");
	СбисСтатусыГос.Добавить("Ввод в оборот зарегистрирован","Ввод в оборот успешно зарегистрирован");
	// Производство
	//не нужно СбисСтатусыГос.Добавить("Оформление в ГИС МТ","Начальное событие для документа. Закрывается, только после успешного ввода в оборот кодов");
	СбисСтатусыГос.Добавить("Получение КМ","Отправлен заказ кодов в ГИС МТ");
	СбисСтатусыГос.Добавить("Получены КМ","Заказ кодов успешно обработан в ГИС МТ по части или всем позициям документа");
	СбисСтатусыГос.Добавить("Ошибка при получении КМ","При регистарции заказа не смогли доставить заказ в ГИС МТ или ГИС МТ обработал заказ с ошибкой");
	СбисСтатусыГос.Добавить("Регистрация упаковок","Отправлен запрос регистрации упаковок в ГИС МТ. Для всех упаковок, заведенных в документах производства, происходит автоматическая регистрация этих упаковок в ГИС МТ");
	СбисСтатусыГос.Добавить("Упаковки зарегистрированы","Упаковки были успешно зарегистрированы запросами агрегации в ГИС МТ");
	СбисСтатусыГос.Добавить("Ошибка при регистрации упаковок","Не смогли доставить до ГИС МТ запрос на регистрацию упаковок");
	СбисСтатусыГос.Добавить("Упаковки не зарегистрированы", "Упаковки не были зарегистрированы в ГИС МТ");
	СбисСтатусыГос.Добавить("Ввод в оборот в ГИС МТ", "Ввод в оборот отправлен в ГИС МТ");
	СбисСтатусыГос.Добавить("Ввод в оборот зарегистрирован", "Ввод в оборот успешно зарегистрирован");
	СбисСтатусыГос.Добавить("Ввод в оборот незарегистрирован", "Ввод в оборот обработан в ГИС МТ с ошибкой или не доставлен до ГИС МТ");
	// Списания	Данные события принимаются и для табачной продукции
	СбисСтатусыГос.Добавить("Оформление списания для ГИС МТ", "Начальное событие или событие после получения ошибки от ГИС МТ. Документ можно редкатировать");
	//СбисСтатусыГос.Добавить("Отправка в ГИС МТ", "Происходит отправка документа в ГИС МТ");
	СбисСтатусыГос.Добавить("Оформлено списание в ГИС МТ", "Документс cписания был успешно зарегистрирован в ГИС МТ");
	СбисСтатусыГос.Добавить("Отклонено в ГИС", "Документ был отклонет с ошибкой в ГИС МТ или не смогли успешно отправить. После него будет новое начальное событие");
	СбисСтатусыГос.Добавить("Нет маркировок", "После добавления/удаления наименований документ перестает быть маркированным");

	//	Маркировка лекарств	
	// Реализация прямым порядком и реализация в ЕАЭС
	СбисСтатусыГос.Добавить("Оформление для МДЛП", "Начальное событие для реализации прямым порядком");
	СбисСтатусыГос.Добавить("Оформлено для МДЛП", "Пользователь завершил оформление (переименование пред события)");
	СбисСтатусыГос.Добавить("Нет маркированных лекарств", "Если пользователь оформил документ с лекарствами и принял решение, что кодов маркировки в нем не будет");
	СбисСтатусыГос.Добавить("Подтверждение кодов покупателем", "Ожидания ответа из ГИС МТ о решении покупателя");
	СбисСтатусыГос.Добавить("Подтверждено в МДЛП", "Реализация была подтверждена");
	СбисСтатусыГос.Добавить("Покупатель отклонил коды", "Реализация была отклонена покупателем");
	СбисСтатусыГос.Добавить("Ошибка регистрации в МДЛП", "Документ был обработан с ошибкой в МДЛП");
	// Поступления прямым порядком
	СбисСтатусыГос.Добавить("Подтверждение в МДЛП", "Начальное событие для лекарственного поступления прямым порядком");
	//СбисСтатусыГос.Добавить("Подтверждено в МДЛП", "Документ подтвержден в МДЛП");
	СбисСтатусыГос.Добавить("Ошибка подтверждения в МДЛП", "Документ подтверждения был отклонен в МДЛП с ошибкой");
	СбисСтатусыГос.Добавить("Отклонение в МДЛП", "Отправка отклонения документа в МДЛП");
	СбисСтатусыГос.Добавить("Отклонено в МДЛП", "Отклонение документа обработано в МДЛП");
	// Реализации обратным порядком
	//СбисСтатусыГос.Добавить("Оформление для МДЛП", "Начальное событие для лекарственных реализаций созданных руками
	СбисСтатусыГос.Добавить("Подтвердить в МДЛП", "Начальное событие для реализаций, полученных по обратному порядку из МДЛП");
	//СбисСтатусыГос.Добавить("Подтверждение в МДЛП", "Отправка подтверждения реализации обратным порядком в МДЛП");
	//СбисСтатусыГос.Добавить("Подтверждено в МДЛП", "Документ подтверждения успешно обработан в МДЛП");
	//СбисСтатусыГос.Добавить("Ошибка подтверждения в МДЛП", "Документ подтверждения обработан в МДЛП с ошибкой");
	СбисСтатусыГос.Добавить("Отклонение в МДЛП", "Документ реализации по обратному порядку отправлен на отклонением");
	//СбисСтатусыГос.Добавить("Отклонено в МДЛП", "Отклонение документа реализации по обратному порядку успешно обработан МДЛП");
	СбисСтатусыГос.Добавить("Ошибка отклонения в МДЛП", "Отклонение документа не принято в МДЛП");
	// Поступления обратным порядком
	//СбисСтатусыГос.Добавить("Оформление для МДЛП", "Начальное событие для поступления обратным порядком");
	//СбисСтатусыГос.Добавить("Оформлено для МДЛП", "Пользователь завершил оформление");
	СбисСтатусыГос.Добавить("Подтверждение   кодов поставщиком", "Ожидание ответа из ГИС МТ о решении поставщика");
	СбисСтатусыГос.Добавить("Подтверждение кодов поставщиком", "Ожидание ответа из ГИС МТ о решении поставщика");
	СбисСтатусыГос.Добавить("Утверждено в МДЛП", "Поставщик утвердил документ");
	СбисСтатусыГос.Добавить("Поставщик отклонил коды", "Поставщик отклонил документ");
	СбисСтатусыГос.Добавить("Ошибка регистрации в МДЛП", "Документ был обработан в МДЛП с ошибкой");
	СбисСтатусыГос.Добавить("Нет маркированных лекарств", "Если пользователь оформил документ с лекарствами и принял решение, что кодов маркировки в нём не будет");
	// Списания
	СбисСтатусыГос.Добавить("Оформление списания для МДЛП", "Начальное событие для лекарственных списаний");
	СбисСтатусыГос.Добавить("Регистрация в МДЛП", "Документ был отправлен на регистрацию в момент, когда регистратор выбытия не работал");
	СбисСтатусыГос.Добавить("Зарегистрировано в МДЛП", "Документ списания зарегистрирован в МДЛП");
	//СбисСтатусыГос.Добавить("Ошибка регистрации в МДЛП", "Документ был отклонен в МДЛП или не смогли отправить");
	СбисСтатусыГос.Добавить("Регистрация через РВ", "Документ был отправлен на регистрацию в МДЛП через РВ");
	СбисСтатусыГос.Добавить("Нет маркированных лекарств", "После добавления/удаления лекарственных наименований или по решению пользователя пометили документ как не требующий отправки в МДЛП");

	// Меркурий		Для Меркурия концепция событий работает не как для остальных документов. Документы обрабатываются по наименованиям. У каждого наименования свой статус. Итоговые статусы по наименованиям влияют на статус документа, при этом событие для документа только одно. 
	//Реализация
	СбисСтатусыГос.Добавить("Оформление в ИС Меркурий", "Основное событие по документу. Если событие активно, то документ обрабатывается. В нём могут быть часть ВСД отправлена, часть нет.");
	СбисСтатусыГос.Добавить("Оформление ВСД", "Количество этих событий зависит от того, частично обрабатывается документ или нет. Пример. В документе 3 ВСД, Пользователь отправляет первую. В ленте появляется событие Оформление ВСД. Если по первой придет ответ, до того как пользователь обработает вторую, то событие закроется. И при отправке второй - создастся новое событие Оформление ВСД. Если вторую обработают, до того как придет ответ по первой, то вторая будет относиться к этому же событию");
	СбисСтатусыГос.Добавить("Аннулирование ВСД", "Работает по тому же принципу что и Оформление ВСД. Если аннулируют документ, по которому все ВСД обработаны, то будет создано новое событие Оформление в ИС Меркурий");
	// Поступление
	СбисСтатусыГос.Добавить("Оформление в ИС Меркурий", "Основное событие по документу. Если событие активно, то документ обрабатывается. В нём могут быть часть ВСД погашена, часть отклонена, часть не обработана.");
	СбисСтатусыГос.Добавить("Гашение ВСД", "Событие по наименованиям. Работает по принципам, описанным для реализаций.");
	ПараметрыСоединения.Вставить("СтатусыГос", СбисСтатусыГос);
	// alo СтатусГос Список >>	
		
КонецПроцедуры  

//Возвращает имя регистра, где хранятся статусы и идентификаторы СБИС	
&НаКлиенте
Функция ИмяРегистраСвойствОбъектов(Кэш) Экспорт      
	ИниКонфигурация	= Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация");
	ИмяРегистраСвойствОбъектов = Кэш.ОбщиеФункции.РассчитатьЗначение("ИмяРегистраСвойствОбъектов", ИниКонфигурация);	
	Если ИмяРегистраСвойствОбъектов = Неопределено Тогда
		Возврат ИмяРегистраСвойствОбъектовНаСервере(ИниКонфигурация);
	Иначе
		Возврат ИмяРегистраСвойствОбъектов;
	КонецЕсли
КонецФункции

//Возвращает имя плана видов характеристик, где хранятся названия дополнительных свойств	
&НаКлиенте
Функция ИмяПланаВидовХарактеристикСвойствОбъектов(Кэш) Экспорт
	ИниКонфигурация	= Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация");
	ИмяПланаВидовХарактеристикСвойствОбъектов = Кэш.ОбщиеФункции.РассчитатьЗначение("ИмяПланаВидовХарактеристикСвойствОбъектов", ИниКонфигурация);	
	Если ИмяПланаВидовХарактеристикСвойствОбъектов = Неопределено Тогда
		Возврат ИмяПланаВидовХарактеристикСвойствОбъектовНаСервере(ИниКонфигурация);
	Иначе
		Возврат ИмяПланаВидовХарактеристикСвойствОбъектов;
	КонецЕсли
КонецФункции

//Возвращает имя справочника, где хранятся свойства для статусов контрагентов	
&НаКлиенте
Функция ИмяСправочникаСвойствОбъектов(Кэш) Экспорт
	ИниКонфигурация	= Кэш.ФормаНастроек.Ини(Кэш, "Конфигурация");
	СправочникСвойствОбъектов = Кэш.ОбщиеФункции.РассчитатьЗначение("СправочникСвойствОбъектов", ИниКонфигурация);	
	Если СправочникСвойствОбъектов = Неопределено Тогда
		Возврат "ЗначенияСвойствОбъектов";
	Иначе
		Возврат СправочникСвойствОбъектов;
	КонецЕсли
КонецФункции

&НаСервереБезКонтекста
Функция ИмяРегистраСвойствОбъектовНаСервере(ИниКонфигурация)
	Если Метаданные.РегистрыСведений.Найти("ДополнительныеСведения")<>Неопределено Тогда
		Возврат "ДополнительныеСведения";
	ИначеЕсли Метаданные.РегистрыСведений.Найти("ЗначенияСвойствОбъектов")<>Неопределено Тогда
		Возврат "ЗначенияСвойствОбъектов";
	Иначе
		ВызватьИсключение("Не найден регистр для хранения статусов и идентификаторов СБИС");
	КонецЕсли
КонецФункции

&НаСервереБезКонтекста
Функция ИмяПланаВидовХарактеристикСвойствОбъектовНаСервере(ИниКонфигурация)
	Если		Метаданные.ПланыВидовХарактеристик.Найти("ДополнительныеРеквизитыИСведения") <> Неопределено Тогда
		Возврат "ДополнительныеРеквизитыИСведения";
	ИначеЕсли	Метаданные.ПланыВидовХарактеристик.Найти("СвойстваОбъектов") <> Неопределено Тогда
		Возврат "СвойстваОбъектов";
	Иначе
		ВызватьИсключение("Не найден план дополнительных свойств для настройки хранения статусов и идентификаторов СБИС");
	КонецЕсли
КонецФункции

