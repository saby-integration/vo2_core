
&НаСервере
Функция ПрочитатьСвойстваДокументаПоСсылкеНаСервере(ДокументСсылка, СписокСвойств)
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	                |	ЗначенияСвойствОбъектов.Значение КАК Значение,
	                |	ЗначенияСвойствОбъектов.Свойство КАК Свойство
	                |ИЗ
	                |	РегистрСведений." + ПараметрыСоединения.ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	                |ГДЕ
	                |	ЗначенияСвойствОбъектов.Объект = &Документ1С
	                |	И ЗначенияСвойствОбъектов.Свойство В(&СписокСвойств)";
	
	Запрос.УстановитьПараметр("Документ1С",		ДокументСсылка);
	Запрос.УстановитьПараметр("СписокСвойств",	СписокСвойств);
	Выборка = Запрос.Выполнить().Выбрать();
	Результат = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Новый Структура("Свойство, Значение", Выборка.Свойство, Выборка.Значение));
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ПрочитатьСвойствоДокументаПоСсылкеНаСервере(ДокументСсылка, ИмяСвойства, ИмяРегистраСвойствОбъектов)
	Запрос = новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Значение
	|ИЗ
	|		РегистрСведений." + ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	|		ГДЕ ЗначенияСвойствОбъектов.Объект = &Документ1С
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = """ + ИмяСвойства + """)";
	
	Запрос.УстановитьПараметр("Документ1С", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Значение;
	КонецЦикла;
КонецФункции

//Устанавливает значение параметра в регистре сведений	
&НаСервере
Функция СбисСвойствоУстановлено(СвойствоПараметр, СвойствоЗначение, ДокументСсылка, НоваяРедакция, ДополнительныеПараметры, Отказ)
	Результат = Истина;
	ИмяРегистраСвойствОбъектов = ДополнительныеПараметры.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(СвойствоПараметр);
	НаборЗаписей.Прочитать();
	
	ЗаписатьНабор = Истина;
	Если Не НаборЗаписей.Количество() Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = ДокументСсылка;
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 24 +
		НоваяЗаписьНабора.Свойство = СвойствоПараметр;
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	Иначе
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);	
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 25 +
		// << alo СтатусГос
		Если СвойствоПараметр.Наименование = СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_Статус")) Тогда	
			//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
			СтароеЗначениеСвойства = НоваяЗаписьНабора.Значение;
			ЗаписатьНабор = (сбисПриоритетСтатуса(СвойствоЗначение) > сбисПриоритетСтатуса(СтароеЗначениеСвойства)) Или НоваяРедакция;
		ИначеЕсли СвойствоПараметр.Наименование = СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_СтатусГос")) Тогда	
			ЗаписатьНабор = СвойствоЗначение <> НоваяЗаписьНабора.Значение Или НоваяРедакция;	// alo СтатусГос >>
		КонецЕсли;
	КонецЕсли;
	Если ЗаписатьНабор Тогда
		Попытка
			НоваяЗаписьНабора.Значение = СвойствоЗначение;
			НаборЗаписей.Записать();
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details", 746, "Ошибка на сервере", ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	Возврат ЗаписатьНабор;
КонецФункции

//Возвращает ссылку на свойство плана видов характеристик
&НаСервереБезКонтекста
Функция СвойствоПланаВидовХарактеристик(ПараметрыЗапроса, Отказ)
	СбисИмяПлана = СтрПолучитьСтроку(СтрЗаменить(ПараметрыЗапроса.Тип, ".", Символы.ПС), 2);
	Возврат ПланыВидовХарактеристик[СбисИмяПлана].НайтиПоНаименованию(ПараметрыЗапроса.Ключ, Истина).Ссылка;
КонецФункции

&НаСервереБезКонтекста
Функция Документы1СПоПараметрам(ПараметрыЗапроса, ДополнительныеПараметры, Отказ) Экспорт
	Перем СбисПолучитьИмяМетаданных;
	//Сформируем временную таблицу для запроса 
	Если Не ДополнительныеПараметры.Свойство("ПолучитьИмяМетаданных", СбисПолучитьИмяМетаданных) Тогда
		СбисПолучитьИмяМетаданных = Ложь;
	КонецЕсли;
	ТаблицаСвойства = Новый ТаблицаЗначений;
	ТаблицаСвойства.Колонки.Добавить("Свойство",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка." + ПараметрыЗапроса.ИмяПланаВидовХарактеристикСвойствОбъектов));
	ТаблицаСвойства.Колонки.Добавить("Ид",		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	Для Каждого ЭлементИд Из ПараметрыЗапроса.СписокИд Цикл
		НоваяСтрока = ТаблицаСвойства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементИд);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	                |	ТаблицаСвойства.Ид КАК Ид,
	                |	ТаблицаСвойства.Свойство КАК Свойство
	                |ПОМЕСТИТЬ ИсточникДанных
	                |ИЗ
	                |	&ТаблицаСвойства КАК ТаблицаСвойства
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ИсточникДанных.Ид КАК ИдентификаторПакета,
	                |	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	                |ИЗ
	                |	ИсточникДанных КАК ИсточникДанных
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ПараметрыЗапроса.ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	                |		ПО ИсточникДанных.Свойство = ЗначенияСвойствОбъектов.Свойство.Ссылка
	                |			И ИсточникДанных.Ид = ЗначенияСвойствОбъектов.Значение
	                |ГДЕ
	                |	НЕ ЗначенияСвойствОбъектов.Объект ЕСТЬ NULL
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ИсточникДанных.Ид,
	                |	ЗначенияСвойствОбъектов.Объект
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ИдентификаторПакета";
	Запрос.УстановитьПараметр("ТаблицаСвойства", ТаблицаСвойства);

	Результат = Новый Соответствие;
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details", 603, "Ошибка выполнения запроса списка документов", ОписаниеОшибки());
	КонецПопытки;
	ВыборкаПоИд = РезультатЗапроса.Выбрать();
	
	МассивДобавить = Неопределено;
	Пока ВыборкаПоИд.Следующий() Цикл
		КлючРезультат = ВыборкаПоИд.ИдентификаторПакета;
		ЗначениеРезультат = Результат.Получить(КлючРезультат);
		Если ЗначениеРезультат = Неопределено Тогда
			МассивДобавить = Новый Массив;
			Результат.Вставить(КлючРезультат, Новый Структура("Документы1С", МассивДобавить));
		Иначе
			МассивДобавить = ЗначениеРезультат.Документы1С;
		КонецЕсли;                                                   
		СтрокаДобавить = Новый Структура("Ссылка", ВыборкаПоИд.Ссылка);
		Если СбисПолучитьИмяМетаданных Тогда
			СтрокаДобавить.Вставить("Метаданные_Имя", ВыборкаПоИд.Ссылка.Метаданные().Имя);
	КонецЕсли;
		МассивДобавить.Добавить(СтрокаДобавить);
	КонецЦикла;	
	Возврат Результат;
конецфункции

&НаСервере
Функция СбисЗаписатьИзмененияПоСвойствам(ПараметрыЗапроса, ДополнительныеПараметры, Отказ)
	КэшНаборовЗаписей = Новый Соответствие;
	РезультатОбработки = Новый Соответствие;
	Для Каждого КлючИЗначение Из ПараметрыЗапроса.Список Цикл
		ДанныеДляОбработки = КлючИЗначение.Значение;
		СписокОбработанныхДокументов = Новый Массив;
		Для Каждого СсылкаНаДокумент1С Из ДанныеДляОбработки.Документы1С Цикл
			ОшибкаУстановкиСвойства = Ложь;
			// << alo СтатусГос Список
			Если ДанныеДляОбработки.Свойство("СостояниеГос") Тогда
				РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_СтатусГос, ДанныеДляОбработки.СостояниеГос, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, Отказ);
				Если Отказ Тогда
					СтрокаДобавить = Новый Структура("Ссылка, Отказ, Ошибка", СсылкаНаДокумент1С.Ссылка, Отказ, РезультатДобавления);
					СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
				КонецЕсли;
			КонецЕсли;	// alo СтатусГос Список >>
			Если ДанныеДляОбработки.Свойство("ТекущийЭтап") Тогда
				РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_ТекущийЭтап, ДанныеДляОбработки.ТекущийЭтап, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, Отказ);
				Если Отказ Тогда
					СтрокаДобавить = Новый Структура("Ссылка, Отказ, Ошибка", СсылкаНаДокумент1С.Ссылка, Отказ, РезультатДобавления);
					СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
				КонецЕсли;
			КонецЕсли;
			РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_Статус, ДанныеДляОбработки.Состояние.Название, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, ОшибкаУстановкиСвойства);
			СтрокаДобавить = Новый Структура("Ссылка, Отказ", СсылкаНаДокумент1С.Ссылка, ОшибкаУстановкиСвойства);
			Если ОшибкаУстановкиСвойства Тогда
				СтрокаДобавить.Вставить("Ошибка", РезультатДобавления);
				СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
			ИначеЕсли РезультатДобавления Тогда
				СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
			КонецЕсли;
			ИзменитьРеквизитыДокумента1С(СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки, ДополнительныеПараметры.Ини);
		КонецЦикла;
		РезультатОбработки.Вставить(КлючИЗначение.Ключ, СписокОбработанныхДокументов);
	КонецЦикла;
	Для Каждого КлючИЗначение Из ПараметрыЗапроса.Контрагенты Цикл
		Контрагент = НайтиКонтрагентаИзДокументаСБИС(ДополнительныеПараметры.Ини.Конфигурация, КлючИЗначение.Значение);
		Если Контрагент = Ложь Тогда
			Продолжить;
		КонецЕсли;
		сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент, ДополнительныеПараметры.Ини.Конфигурация);	
	КонецЦикла;
	Возврат РезультатОбработки;
КонецФункции

//KES 050751151 Статусы в разрезе регламентов (ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ) -->  18 +
&НаСервере
Функция ДокументыПоИдПакета(Ид, ИниКонфигурация, ДополнительныеПараметры = Неопределено) Экспорт
	ПараметрыСвойстваКлюча = Новый Структура("Имя", "ДокументСБИС_Ид"); 
	Если	ЗначениеЗаполнено(ДополнительныеПараметры)
		И	ДополнительныеПараметры.Свойство("Регламент") Тогда
		ПараметрыСвойстваКлюча.Вставить("Регламент", ДополнительныеПараметры.Регламент);
	КонецЕсли;
	ИмяПланаВидовХарактеристикСвойствОбъектов = ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов;
	СвойствоДокументСбисИд = СбисПолучитьСвойствоОбъектаНаСервере(ПараметрыСвойстваКлюча); 
		
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	|ИЗ
	|		РегистрСведений." + ПараметрыСоединения.ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	|		ГДЕ ЗначенияСвойствОбъектов.Значение = &Идентификатор
	|			И (ЗначенияСвойствОбъектов.Свойство.Ссылка = &СвойствоДокументСбисИд)";
	
	запрос.УстановитьПараметр("Идентификатор", Ид);
	запрос.УстановитьПараметр("СвойствоДокументСбисИд", СвойствоДокументСбисИд);
	// <--KES 050751151 Статусы в разрезе регламентов (ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)

	ТЗ=Запрос.Выполнить().Выгрузить();
	возврат ТЗ.ВыгрузитьКолонку("Ссылка");
конецфункции
&НаСервереБезКонтекста
Процедура ИзменитьРеквизитыДокумента1С(ДокСсылка,СоставПакета,Ини) экспорт
	ИмяДокумента = ДокСсылка.Метаданные().Имя;
	// в фактуре проставляем дату и способ выставления
	Если Ини.Свойство(ИмяДокумента) и Ини[ИмяДокумента].Свойство("мФайл") Тогда
		Попытка
			Если СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Название = "Извещение о получении" Тогда
				Событие=СоставПакета.Событие[0];
				Для Каждого Элемент Из Ини[ИмяДокумента].мФайл Цикл
					Если Элемент.Значение.Свойство("ЗаполнятьДатуСпособВыставления") и Элемент.Значение.ЗаполнятьДатуСпособВыставления.Значение ="'Истина'" Тогда
						ИмяРеквизитаДатыВыставления = Сред(Элемент.Значение.ДатаВыставления.Значение, Найти(Элемент.Значение.ДатаВыставления.Значение, ".")+1);
						ИмяРеквизитаСпособаВыставления = Сред(Элемент.Значение.СпособВыставления.Значение, Найти(Элемент.Значение.СпособВыставления.Значение, ".")+1);
						ЗначениеСпособаВыставления = Элемент.Значение.СпособВыставления.Вычислить;
						ДокОбъект = ДокСсылка.ПолучитьОбъект();
						ДокОбъект.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина); // обязательно требуется для состоянияЭД
						Если ТипЗнч(Событие.ДатаВремяДокумента) = Тип("Дата") Тогда
							ДокОбъект[ИмяРеквизитаДатыВыставления] = Событие.ДатаВремяДокумента;
						Иначе
							ДокОбъект[ИмяРеквизитаДатыВыставления] = ДокОбъект.Дата;
						КонецЕсли;
						ДокОбъект[ИмяРеквизитаСпособаВыставления] = ЗначениеСпособаВыставления;
						ДокОбъект.Записать();
					КонецЕсли;
					Прервать;
				КонецЦикла;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры
процедура ЗаполнитьСпособОбменаКонтрагента(СоставПакета,Ини,КэшПоКонтрагентам) экспорт
	Если Ини.Конфигурация.Свойство("ЗаполнятьСпособОбменаКонтрагента") и Ини.Конфигурация.ЗаполнятьСпособОбменаКонтрагента.Значение = "'Истина'" и
		СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Свойство("Название") и СоставПакета.Событие[0].Название = "Извещение о получении" Тогда
		ИННКПП = ?(СоставПакета.Контрагент.Свойство("СвЮЛ"),СоставПакета.Контрагент.СвЮЛ.ИНН+"_"+СоставПакета.Контрагент.СвЮЛ.КПП, СоставПакета.Контрагент.СвФЛ.ИНН);
		Если не КэшПоКонтрагентам.Свойство("к"+ИННКПП) Тогда
			КэшПоКонтрагентам.Вставить("к"+ИННКПП);
			Контрагент = НайтиКонтрагентаИзДокументаСБИС(Ини.Конфигурация, СоставПакета.Контрагент);
			Если Контрагент<>Ложь Тогда
				сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент,Ини.Конфигурация);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
// alo >>
&НаСервере
Функция ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам,ИниКонфигурация,КаталогНастроек) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Элемент Из ДанныеПоСтатусам Цикл
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 20 +
		ЗаписатьПараметрыДокументаСБИС(Элемент.СтруктураСвойств,Элемент.Документ1С,ИниКонфигурация,КаталогНастроек,Новый Структура("Регламент",?(Элемент.Свойство("Регламент"),Элемент.Регламент,"")));
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	КонецЦикла;
КонецФункции
&НаСервере
Функция ЗаписатьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,ИниКонфигурация,КаталогНастроек,ДополнительныеПараметры=Неопределено) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 21 +
		ДобавитьСвойствоОбъекта(Свойство.Ключ,Свойство.Значение,ДокументСсылка,КаталогНастроек,ИниКонфигурация,Истина,ДополнительныеПараметры);
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	КонецЦикла;
КонецФункции
&НаСервере
Функция ДобавитьСвойствоОбъекта(ИмяСвойства,ЗначениеСвойства,ДокументСсылка,КаталогНастроек,ИниКонфигурация,НоваяРедакция=Ложь,ДополнительныеПараметры=Неопределено) Экспорт
	
	ПараметрыСвойстваОбъекта = Новый Структура("Имя", ИмяСвойства); 
	Если	ЗначениеЗаполнено(ДополнительныеПараметры)
		И	ДополнительныеПараметры.Свойство("Регламент") Тогда
		ПараметрыСвойстваОбъекта.Вставить("Регламент", ДополнительныеПараметры.Регламент);
	КонецЕсли;
	ПолноеИмяСвойства	= СбисПолучитьКлючСвойстваДокументаНаСервере(ПараметрыСвойстваОбъекта);
	СвойствоСсылка		= СбисПолучитьСвойствоОбъектаНаСервере(ПараметрыСвойстваОбъекта);
	
	// устанавливает значение параметра в регистре сведений	
	ОбновлятьЗначение = Истина;
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)-->  23 +
	НаборЗаписей.Отбор.Свойство.Установить(СвойствоСсылка);
	//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество()=0 Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = ДокументСсылка;
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 24 +
		НоваяЗаписьНабора.Свойство = СвойствоСсылка;
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	Иначе
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);	
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 25 +
		Если Найти(ПолноеИмяСвойства, СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_Статус"))) > 0 Тогда
			//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
			СтароеЗначениеСвойства = НоваяЗаписьНабора.Значение;
			ОбновлятьЗначение = (сбисПриоритетСтатуса(ЗначениеСвойства) > сбисПриоритетСтатуса(СтароеЗначениеСвойства)) Или НоваяРедакция;
		КонецЕсли;
	КонецЕсли;
	Если ОбновлятьЗначение Тогда
		Попытка
			НоваяЗаписьНабора.Значение = ЗначениеСвойства;
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	возврат ОбновлятьЗначение; // alo
КонецФункции
//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 26 +
//&НаСервереБезКонтекста не было тут изначально, не могу поставить
Функция УдалитьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	
	УдалитьПараметрыДокументаСБИСПарам(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек,Неопределено);
	
КонецФункции
//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)

Функция УдалитьПараметрыДокументаСБИСПарам(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек,ДополнительныеПараметры = Неопределено) Экспорт
	
	// удаляет свойства для документа 1С (при удалении сопоставления)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 27
		УдалитьСвойствоОбъекта(Свойство.Ключ,ДокументСсылка,КаталогНастроек,Ини.Конфигурация,ДополнительныеПараметры);
		//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)
	КонецЦикла;
	
КонецФункции

//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 28  +
&НаСервере
Функция УдалитьСвойствоОбъекта(ИмяСвойства,ДокументСсылка,КаталогНастроек,ИниКонфигурация,ДополнительныеПараметры = Неопределено) Экспорт
	
	ПолноеИмяСвойства = ?(ЗначениеЗаполнено(ДополнительныеПараметры) И ДополнительныеПараметры.Свойство("Регламент"),ДополнительныеПараметры.Регламент+"_","") + ИмяСвойства;
	//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ) 
	
	// удаляет значение параметра из регистра сведений	
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 29 +
	НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик[ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов].НайтиПоНаименованию(ПолноеИмяСвойства, Истина).Ссылка);
	//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ) 
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()>0 Тогда	
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);
		Попытка
			НоваяЗаписьНабора.Значение = "";
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	КонецЕсли;
КонецФункции
&НаСервере
Функция НайтиДокументы1СПоПакетуСБИС(ПолныйСоставПакета, КэшИни, КаталогНастроек, МассивСлужебных) Экспорт
	// функция ищет связанные документы 1С для каждого вложения пакета и заполняет массив служебных вложений	
	сч = 0;
	Для Каждого Вложение Из ПолныйСоставПакета.Вложение Цикл
		Если Не Вложение.Свойство("Служебный") или Вложение.Служебный = "Нет" Тогда
			ДанныеДокумента1С = НайтиДокументы1СПоИдВложенияСБИС(ПолныйСоставПакета.Идентификатор, Вложение.Идентификатор, КэшИни, КаталогНастроек);
			ПолныйСоставПакета.Вложение[сч].Вставить("Документы1С", Новый СписокЗначений);
			ПолныйСоставПакета.Вложение[сч].Вставить("Документ1СПроведен");
			Если ЗначениеЗаполнено(ДанныеДокумента1С) Тогда
				ПолныйСоставПакета.Вложение[сч].Документы1С=ДанныеДокумента1С.Ссылки;
				ПолныйСоставПакета.Вложение[сч].Документ1СПроведен=ДанныеДокумента1С.Проведен;
			КонецЕсли;
		Иначе
			МассивСлужебных.Добавить(сч);
		КонецЕсли;
		сч = сч+1;
	КонецЦикла;		
КонецФункции
&НаСервере
Функция НайтиДокументы1СПоИдВложенияСБИС(Ид, ИдВложения,Ини,КаталогНастроек) Экспорт
	// Ищет документы 1С По идентификаторам пакета и вложения
	Документы1С = Новый СписокЗначений;
	ЕстьПроведенный = Ложь;
	ИниКонфигурация = Ини.Конфигурация;
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	
	//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 30 +
	МассивСтатусРегламент = ПараметрыСоединения.МассивСтатусРегламент;

	ИмяПланаВидовХарактеристикСвойствОбъектов = ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов;
	мСвойстваДокументСбисИдВложения	= Новый Массив;
	мСвойстваДокументСбисИд			= Новый Массив;

	мСвойстваДокументСбисИдВложения.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_ИдВложения")));
	мСвойстваДокументСбисИд.Добавить		(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_Ид")));

	Для Каждого Элемент из МассивСтатусРегламент Цикл   
       	мСвойстваДокументСбисИдВложения.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя, Регламент", "ДокументСБИС_ИдВложения", Элемент)));
       	мСвойстваДокументСбисИд.Добавить		(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя, Регламент", "ДокументСБИС_Ид", Элемент)));
    КонецЦикла;

	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Объект
	|ПОМЕСТИТЬ ВТДокументыПакета
	|ИЗ
	|	РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|ГДЕ (ЗначенияСвойствОбъектов.Свойство В (&мСвойстваДокументСбисИд) ) И ЗначенияСвойствОбъектов.Значение = &Ид;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыПакета.Объект,
	|	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	|ИЗ
	|	ВТДокументыПакета КАК ВТДокументыПакета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТДокументыПакета.Объект = ЗначенияСвойствОбъектов.Объект
	|			И ЗначенияСвойствОбъектов.Значение = &ИдВложения
	|			И (ЗначенияСвойствОбъектов.Свойство В (&мСвойстваДокументСбисИдВложения))";
	
	запрос.УстановитьПараметр("Ид", Ид);
	запрос.УстановитьПараметр("ИдВложения", ИдВложения);
	запрос.УстановитьПараметр("мСвойстваДокументСбисИд", мСвойстваДокументСбисИд);
	запрос.УстановитьПараметр("мСвойстваДокументСбисИдВложения", мСвойстваДокументСбисИдВложения);
	//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ) 
	
	Выборка = Запрос.Выполнить().выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	Пока Выборка.Следующий() Цикл
		Документы1С.Добавить(Выборка.Ссылка);
		Попытка   // попытка на случай отправки справочника, а не документа
			Если Выборка.Ссылка.Проведен Тогда
				ЕстьПроведенный = Истина;
			КонецЕсли;
		Исключение
		КонецПопытки; 
	КонецЦикла;
	
	Возврат Новый Структура("Ссылки, Проведен",Документы1С, ЕстьПроведенный);
КонецФункции
&НаСервере
Функция ПрочитатьПараметрыДокументаСБИС(ДокументСсылка, КаталогНастроек,ИмяСвойства,Ини) Экспорт
	// возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С	
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение КАК Значение
	|ИЗ
	|		РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ГДЕ ЗначенияСвойствОбъектов.Объект = &Документ1С
	|			И (ЗначенияСвойствОбъектов.Свойство.Наименование = """+ИмяСвойства+""")";
	
	запрос.УстановитьПараметр("Документ1С", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Значение;
	КонецЦикла;
	
КонецФункции
&НаСервере
Функция ПрочитатьПараметрыДокументовСБИС(СписокСсылок,МассивСвойств,Конфигурация,ДополнительныеПараметры) Экспорт
	// возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С	
	Если Не ТипЗнч(СписокСсылок) = Тип("СписокЗначений") Тогда
		НовыйСписок = Новый СписокЗначений;
		НовыйСписок.Добавить(СписокСсылок);
		СписокСсылок = НовыйСписок;
	КонецЕсли;
	Если Не ТипЗнч(МассивСвойств) = Тип("Массив") Тогда
		НовыйМассив = Новый Массив;
		НовыйМассив.Добавить(МассивСвойств);
		МассивСвойств = НовыйМассив;
	КонецЕсли;
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Объект,
	|	ЗначенияСвойствОбъектов.Значение КАК Значение,
	|	ЗначенияСвойствОбъектов.Свойство.Наименование КАК Наименование
	|ПОМЕСТИТЬ ДополнительныеСведения_Таблица
	|ИЗ
	|	РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект В(&Документ1С)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные_Сведения.Значение,
	|	Данные_Сведения.Объект КАК Объект,
	|	Данные_Сведения.Наименование
	|ИЗ
	|	(";
	СтрокаКлючей = "";
	Для Каждого Свойство Из МассивСвойств Цикл
		ТекстЗапроса =	ТекстЗапроса + ?(ПустаяСтрока(СтрокаКлючей), "", "
		|	ОБЪЕДИНИТЬ ВСЕ") + 
		"
		|	ВЫБРАТЬ
		|		ДополнительныеСведения_Таблица.Наименование КАК Наименование,
		|		ЕстьNULL(ДополнительныеСведения_Таблица.Значение, """") КАК Значение,
		|		ДополнительныеСведения_Таблица.Объект КАК Объект
		|	ИЗ
		|		ДополнительныеСведения_Таблица КАК ДополнительныеСведения_Таблица
		|	ГДЕ
		|		ДополнительныеСведения_Таблица.Наименование = """+ Свойство + """";
		СтрокаКлючей = СтрокаКлючей +?(ПустаяСтрока(СтрокаКлючей), "",",")+Свойство;
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + 
	") КАК Данные_Сведения
	|
	|УПОРЯДОЧИТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДополнительныеСведения_Таблица";

	Результат = Новый Массив;
	
	запрос = Новый Запрос();
	запрос.УстановитьПараметр("Документ1С", СписокСсылок);
	запрос.Текст = ТекстЗапроса;
	
	СвойстваОбъекта = запрос.Выполнить().Выбрать();
	Пока СвойстваОбъекта.СледующийПоЗначениюПоля("Объект") Цикл
		СтруктураСвойств = Новый Структура(СтрокаКлючей);
		СтруктураДобавить = Новый Структура("Документ1С", СвойстваОбъекта.Объект);
		Пока СвойстваОбъекта.Следующий() Цикл
			СтруктураСвойств.Вставить(СвойстваОбъекта.Наименование, СвойстваОбъекта.Значение);
		КонецЦикла;
		СтруктураДобавить.Вставить("СтруктураСвойств", СтруктураСвойств);
		Результат.Добавить(СтруктураДобавить);
	КонецЦикла;
	Возврат Результат;
	
КонецФункции
&НаСервере
Процедура ПолучитьТаблицуДокументов1СПоИдПакетаСБИС(МассивДокументов, ИниКонфигурация, КаталогНастроек) Экспорт	
	
	МассивСтатусРегламент = ПараметрыСоединения.МассивСтатусРегламент;

	// Для массива документов СБИС ищет по идентификаторам пакетов документы 1С	
	ИмяПланаВидовХарактеристикСвойствОбъектов = ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов;
	
	//KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)--> 32 +
	мСвойстваДокументСбисИд = Новый Массив;
	мСвойстваДокументСбисИд.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_Ид")));
	
	Для Каждого Элемент из МассивСтатусРегламент Цикл  
       	мСвойстваДокументСбисИд.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Регламент, Имя", Элемент, "ДокументСБИС_Ид")));
    КонецЦикла;
	//<-- KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ) 
	
	
	ВремТабл = МассивСтруктурВТаблицуЗначений(МассивДокументов);	
	КолонкаИдСБИС = ВремТабл.ВыгрузитьКолонку("ИдСБИС");
	ВремТабл.Колонки.Удалить("ИдСБИС");
	ВремТабл.Колонки.Добавить("ИдСБИС", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИдСБИС, "ИдСБИС");
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ТЗ.ИдСБИС
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ИдСБИС,
	|	ЗначенияСвойствОбъектов.Объект КАК ссылка
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ПараметрыСоединения.ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.ИдСБИС = ЗначенияСвойствОбъектов.Значение
	|//KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)--> 33 +
	|			//И (ЗначенияСвойствОбъектов.Свойство = &Свойство_ДокументСБИС_Ид)
	|			И (ЗначенияСвойствОбъектов.Свойство В (&мСвойстваДокументСбисИд))";
	//<-- KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)

	запрос.УстановитьПараметр("ТЗ", ВремТабл);
	// KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)-->  34 +
	запрос.УстановитьПараметр("мСвойстваДокументСбисИд", мСвойстваДокументСбисИд);
	// <-- KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)

	ТаблицаДокументов1С = Запрос.Выполнить().выгрузить();
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("ИдСБИС", стр.ИдСБИС) ) ;
		Если массивДоков.количество()>0 тогда 
			Документы1С = Новый СписокЗначений;
			Для Каждого Элемент Из массивДоков Цикл
				Документы1С.Добавить(Элемент.Ссылка);
			КонецЦикла;
			стр.Вставить("Документы1С", Документы1С);
			Попытка
				стр.Вставить("СуммаДокумента1С", массивДоков[0].Ссылка.СуммаДокумента);
				Дельта = Число(стр.Сумма) - стр.СуммаДокумента1С;
				Дельта = ?(Дельта<0,-Дельта,Дельта);
				стр.Вставить("Дельта", Дельта);
			Исключение
				стр.Вставить("СуммаДокумента1С", 0);
				стр.Вставить("Дельта", 0);
			КонецПопытки;
			стр.Вставить("Проведен", сбисИндексКартинкиПоДокументу1С(массивДоков[0].Ссылка));
		Иначе
			стр.Вставить("Документы1С",Новый СписокЗначений);
			стр.Вставить("СуммаДокумента1С", 0);
			стр.Вставить("Проведен", -1);
			стр.Вставить("Дельта", 0);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
Процедура ПолучитьТаблицуДокументов1СПоИдВложенияСБИС(МассивДокументов, МассивИдентификаторов, ИниКонфигурация, КаталогНастроек) Экспорт	
	// Для массива документов СБИС ищет по идентификаторам пакетов и вложений документы 1С	
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	ИмяПланаВидовХарактеристикСвойствОбъектов = ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов;
	Свойство_ДокументСБИС_Ид		= СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_Ид"));
	Свойство_ДокументСБИС_ИдВложения= СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_ИдВложения"));
	
	ВремТабл = МассивСтруктурВТаблицуЗначений(МассивИдентификаторов);	
	КолонкаИд = ВремТабл.ВыгрузитьКолонку("Ид");
	ВремТабл.Колонки.Удалить("Ид");
	ВремТабл.Колонки.Добавить("Ид", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИд, "Ид");
	КолонкаИдВложения = ВремТабл.ВыгрузитьКолонку("ИдВложения");
	ВремТабл.Колонки.Удалить("ИдВложения");
	ВремТабл.Колонки.Добавить("ИдВложения", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.ЗагрузитьКолонку(КолонкаИдВложения, "ИдВложения");
	
	МассивСтатусРегламент = ПараметрыСоединения.МассивСтатусРегламент;
	
	мСвойстваДокументСбисИдВложения	= Новый Массив;
	мСвойстваДокументСбисИд			= Новый Массив;
	
	мСвойстваДокументСбисИдВложения.Добавить(Свойство_ДокументСБИС_ИдВложения);
	мСвойстваДокументСбисИд.Добавить		(Свойство_ДокументСБИС_Ид);

	Для Каждого Элемент из МассивСтатусРегламент Цикл   
       	мСвойстваДокументСбисИдВложения.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Регламент, Имя", Элемент, "ДокументСБИС_ИдВложения")));
		мСвойстваДокументСбисИд.Добавить		(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Регламент, Имя", Элемент, "ДокументСБИС_Ид")));
    КонецЦикла;
	
	запрос = новый Запрос;
	запрос.Текст  = "ВЫБРАТЬ
	|	ТЗ.Ид,
	|	ТЗ.ИдВложения
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Ид,
	|	ЗначенияСвойствОбъектов.Объект КАК Док1С
	|ПОМЕСТИТЬ ВТДокументыПакета
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.Ид = ЗначенияСвойствОбъектов.Значение
	|		И (ЗначенияСвойствОбъектов.Свойство.Ссылка В (&мСвойстваДокументСбисИд))
	|СГРУППИРОВАТЬ ПО Ид, Объект;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ИдВложения,
	|	ЗначенияСвойствОбъектов.Объект КАК Док1С
	|ПОМЕСТИТЬ ВТДокументыВложений
	|ИЗ
	|	ВТ КАК ВТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений."+ИмяРегистраСвойствОбъектов+" КАК ЗначенияСвойствОбъектов
	|		ПО ВТ.ИдВложения = ЗначенияСвойствОбъектов.Значение
	|		И (ЗначенияСвойствОбъектов.Свойство.Ссылка В (&мСвойстваДокументСбисИдВложения))
	|СГРУППИРОВАТЬ ПО ИдВложения, Объект;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыПакета.Ид,
	|	ЕСТЬNULL(ВТДокументыВложений.ИдВложения, """") КАК ИдВложения,
	|	ВТДокументыПакета.Док1С								
	|ИЗ
	|	ВТДокументыПакета КАК ВТДокументыПакета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыВложений 
	|		ПО ВТДокументыПакета.Док1С = ВТДокументыВложений.Док1С";
	
	запрос.УстановитьПараметр("ТЗ", ВремТабл);
	запрос.УстановитьПараметр("мСвойстваДокументСбисИд", мСвойстваДокументСбисИд);
	запрос.УстановитьПараметр("мСвойстваДокументСбисИдВложения", мСвойстваДокументСбисИдВложения);
	//<-- KES 050751151 Статусы в разрезе регламентов (РЕЕСТР ОТПРАВЛЕННЫЕ)

	ТаблицаДокументов1С = Запрос.Выполнить().выгрузить();
	//====================================================================================
	Для каждого стр из МассивДокументов цикл 
		Если стр.СоставПакета[0].Значение.Свойство("Вложение") и стр.СоставПакета[0].Значение.Вложение.Количество() Тогда
			ДокументПроведен=-1;
			Для Каждого Вложение Из стр.СоставПакета[0].Значение.Вложение Цикл
				Если Не Вложение.Свойство("Служебный") или Вложение.Служебный = "Нет" Тогда
					
					массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид, ИдВложения", стр.ИдСБИС, Вложение.Идентификатор) ) ;
					Если массивДоков.количество()>0 тогда 
						Документы1С = Новый СписокЗначений;
						Для Каждого Элемент Из массивДоков Цикл
							Документы1С.Добавить(Элемент.Док1С);
							стр.Документы1С.Добавить(Элемент.Док1С);
						КонецЦикла;
						Вложение.Вставить("Документы1С", Документы1С);
						стр.Вставить("СуммаДокумента1С", 0);
						стр.Вставить("Дельта", 0);
						ДокументПроведен = ?(ДокументПроведен=-1,сбисИндексКартинкиПоДокументу1С(массивДоков[0].Док1С), ДокументПроведен);
						стр.Вставить("Проведен", ДокументПроведен);
					Иначе
						Вложение.Вставить("Документы1С",Новый СписокЗначений);
						стр.Вставить("СуммаДокумента1С", 0);
						Если Не стр.Свойство("Проведен") Тогда
							стр.Вставить("Проведен", -1);
						КонецЕсли;
						стр.Вставить("Дельта", 0);
						// << alo Меркурий
						массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид, ИдВложения", стр.ИдСБИС, "") ) ;
						если массивДоков.количество()>0 тогда
							стр.Документы1С.Добавить(массивДоков[0].Док1С);
							стр.Вставить("Проведен", сбисИндексКартинкиПоДокументу1С(массивДоков[0].Док1С));
						конецесли;//  alo Меркурий >>
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
			// << alo Меркурий
		Иначе
			массивДоков =  ТаблицаДокументов1С.найтиСтроки(Новый Структура("Ид, ИдВложения", стр.ИдСБИС, "") ) ;
			если массивДоков.количество()>0 тогда
				стр.Документы1С.Добавить(массивДоков[0].Док1С);	//	вручную сопоставленный документ без вложения
				стр.Вставить("Проведен", сбисИндексКартинкиПоДокументу1С(массивДоков[0].Док1С));
			конецесли;
			//  alo Меркурий >>
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры
&НаСервере
Функция ПолучитьИдДокументаДопСвойства(СсылкаНаОбъект, ДопПараметры) Экспорт
	//получаем идентификатор из доп.реквизитов
	ИмяРегистра = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|    ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|    РегистрСведений." + ИмяРегистра + " КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|    ЗначенияСвойствОбъектов.Объект = &Объект
	|    И ЗначенияСвойствОбъектов.Свойство.Наименование = &Свойство";

	Запрос.УстановитьПараметр("Объект",		СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Свойство",	СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_Ид"))); 

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	// преобразует массив структур в таблицу значений	
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);		
	КонецЦикла;
	Возврат Результат;
КонецФункции
//&НаСервереБезКонтекста
Функция сбисИндексКартинкиПоДокументу1С(Документ1С) Экспорт
	// Функция возвращает индекс картинки по статусу документа 1С	
	Попытка
		Если Документ1С.Проведен Тогда 
			Возврат 0;
		ИначеЕсли Документ1С.ПометкаУдаления Тогда 
			Возврат 2;
		Иначе
			Возврат 1;
		КонецЕсли;
	Исключение
		Возврат 0;
	КонецПопытки;
КонецФункции
&НаСервереБезКонтекста
функция сбисПриоритетСтатуса(СтатусЭД)
	// Функция возвращает индекс картинки по статусу электронного документа	
	Если Найти(нрег(СтатусЭД), "выгружен")=1 или Найти(нрег(СтатусЭД), "загружен на сервер")=1 или Найти(нрег(СтатусЭД), "документ редактируется")=1 или Найти(нрег(СтатусЭД), "есть документ")=1 Тогда     // Выгружен или загружен на сервер
		Возврат 0;
	ИначеЕсли Найти(нрег(СтатусЭД), "отослано приглашение")=1 Тогда      // Отправлено приглашение
		Возврат 1;
	ИначеЕсли Найти(нрег(СтатусЭД), "отправлен")=1 Тогда     // Отправлен
		Возврат 2;
	ИначеЕсли Найти(нрег(СтатусЭД), "ошибка")>0 или Найти(нрег(СтатусЭД), "проблемы при доставке")>0 Тогда     // Ошибки при отправке или при доставке
		Возврат 3;
	ИначеЕсли Найти(нрег(СтатусЭД),"на утверждении")=1 или Найти(нрег(СтатусЭД),"доставлен")=1 Тогда                        // Доставлен
		Возврат 4;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено с проблемами")=1 Тогда                        // Отклонен
		Возврат 5;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено успешно")=1 Тогда                        // Утвержден
		Возврат 6;
	ИначеЕсли Найти(нрег(СтатусЭД), "удален")=1 или Найти(нрег(СтатусЭД), "аннулирован")=1 Тогда                        // Удален контрагентом
		Возврат 7;
	ИначеЕсли Найти(нрег(СтатусЭД), "отозван мной")=1 Тогда                        // Удален мной
		Возврат 7;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции
&НаСервереБезКонтекста
Функция НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса, ТолькоПоИНН = Ложь) Экспорт
	// Функция ищет организацию или контрагента в базе 1С по ИНН/КПП
	ЮлОрг   = оУчастник.Свойство("СвЮЛ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИНН", ?(ЮлОрг, оУчастник.СвЮЛ.ИНН, оУчастник.СвФЛ.ИНН));
	
	Если ЮлОрг и НЕ ТолькоПоИНН Тогда
		Запрос.УстановитьПараметр("КПП",оУчастник.СвЮЛ.КПП);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И Участник.КПП=&КПП","");
	КонецЕсли;
	
	Если оУчастник.Свойство("Подразделение") и оУчастник.Подразделение.Свойство("Идентификатор") Тогда
		Запрос.УстановитьПараметр("КодФилиала",оУчастник.Подразделение.Идентификатор);
	Иначе
		Запрос.УстановитьПараметр("КодФилиала","");
	КонецЕсли;
	
	Если оУчастник.Свойство("GLN") Тогда
		Запрос.УстановитьПараметр("GLN",оУчастник.GLN);
	Иначе
		Запрос.УстановитьПараметр("GLN","");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Возврат РезультатЗапроса.Ссылка;
	КонецЦикла;
	Возврат Ложь;
	
КонецФункции	
&НаСервереБезКонтекста
Функция НайтиКонтрагентаИзДокументаСБИС(Ини, оУчастник) Экспорт
	// Функция ищет контрагента в базе 1С по данным участника в универсальном формате
	Если Ини.Свойство("ЗапросКонтрагента") Тогда
		ТекстЗапроса = СтрЗаменить(Ини.ЗапросКонтрагента.Значение,"'","");
	Иначе
		ТекстЗапроса="ВЫБРАТЬ
		|Участник.Ссылка
		|ИЗ
		|"+СтрЗаменить(Ини.Контрагенты.Значение,"'","")+" КАК Участник
		|ГДЕ НЕ Участник.ПометкаУдаления И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_ИНН.Значение,"'",""))+" =&ИНН
		|И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_КПП.Значение,"'","")) +"=&КПП";
	КонецЕсли;

	Возврат НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса);
КонецФункции
&НаСервереБезКонтекста
Функция сбисСообщитьИмяРеквизита(ЗначениеРеквизита)Экспорт
	// Функция возвращает название реквизита для значений из файлов настроек (например, для [Документ].Контрагент)	
	Возврат Сред(ЗначениеРеквизита,Найти(ЗначениеРеквизита,".")+1);	
КонецФункции
&НаСервере
Функция сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент, ИниКонфигурация) Экспорт
	// устанавливает значение параметра в регистре сведений	
	Свойство = ПланыВидовХарактеристик[ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов].НайтиПоНаименованию("СБИС_СпособДоставки").Ссылка;
	Если ЗначениеЗаполнено(Свойство) Тогда
		ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
		НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Контрагент);
		НаборЗаписей.Отбор.Свойство.Установить(Свойство);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()=0 Тогда
			НоваяЗаписьНабора = НаборЗаписей.Добавить();
			НоваяЗаписьНабора.Объект = Контрагент;
			НоваяЗаписьНабора.Свойство = Свойство;
			СправочникСвойствОбъектов = ПараметрыСоединения.СправочникСвойствОбъектов;
			Выборка = Справочники[СправочникСвойствОбъектов].Выбрать(,Свойство,Новый Структура("Наименование", "Бумага, хочет ЭДО"));
			Если Выборка.Следующий() Тогда
				Попытка
					НоваяЗаписьНабора.Значение = Выборка.Ссылка;
					НаборЗаписей.Записать();
				Исключение
					Ошибка = ОписаниеОшибки();
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция РазбитьСтрокуВМассив(сбисСтрока, сбисРазделитель=".")
	Результат = Новый Массив();	
	МногоуровневаяСтрока = СтрЗаменить(сбисСтрока, сбисРазделитель, Символы.ПС);
	Для НомерСтроки = 1 По СтрЧислоСтрок(МногоуровневаяСтрока) Цикл 
		Результат.Добавить(СокрЛП(СтрПолучитьСтроку(МногоуровневаяСтрока, НомерСтроки)));
	КонецЦикла;
	Возврат Результат;
КонецФункции

