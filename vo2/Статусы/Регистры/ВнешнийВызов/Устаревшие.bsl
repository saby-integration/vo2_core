
//регистры сведений
//TODO40 Сделать вменяемый результат работы формирования планов характеристик для обработки ошибок
&НаКлиенте
Процедура ДобавитьЗаписиВПланВидовХарактеристик() Экспорт
	ДобавитьЗаписиВПланВидовХарактеристикНаСервере();
КонецПроцедуры  

//Возвращает свойство (статус, идентификатор пакета, идентификатор вложения) документа 1С	
&НаКлиенте
Функция ПрочитатьСвойствоДокументаПоСсылке(Кэш, ДокументСсылка, ИмяСвойства, ДопПараметры) Экспорт
	Возврат СбисПрочитатьЗначениеСвойстваДокумента(Новый Структура("Имя, ДокументСсылка", ИмяСвойства, ДокументСсылка), Кэш);
КонецФункции

//UAA Старая функция оставлена для верного поиска, в случае вынесения этого кода в ВФК
&НаКлиенте
Процедура ЗаписатьИзмененияПоДокументам1С(МассивДокументов, Ини, КаталогНастроек) Экспорт
	СбисЗаписатьИзмененияПоДокументам1С(ЛокальныйКэш, МассивДокументов, Новый Структура("ПроверкаСтаройФункции, ИдАккаунта", Ложь, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш)));
КонецПроцедуры

//Использовать ЗаполнитьСписокДокументовСБИССвязьюСсылок1С
&НаКлиенте
Процедура ПолучитьТаблицуДокументов1СПоИдВложенияСБИС(МассивДокументов, МассивИдентификаторов, ИниКонфигурация, КаталогНастроек) Экспорт
	ЗаполнитьСписокДокументовСБИССвязьюСсылок1С(Новый Структура("СписокДокументовЗаполнить, ИдентификаторыПолучить, ИдАккаунта", МассивДокументов, МассивИдентификаторов, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш)), ЛокальныйКэш);
КонецПроцедуры

//Использовать ЗаполнитьСписокДокументовСБИССвязьюСсылок1С
&НаКлиенте
Процедура ПолучитьТаблицуДокументов1СПоИдПакетаСБИС(МассивДокументов, ИниКонфигурация, КаталогНастроек) Экспорт	
	ПараметрыЗаполнить = Новый Структура("СписокДокументовЗаполнить, ИдентификаторыПолучить, ЗаполнитьСумму, ИдАккаунта", МассивДокументов, Новый Массив, Истина, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш));
	Для Каждого СтрокаСписка Из ПараметрыЗаполнить.СписокДокументовЗаполнить Цикл
		ПараметрыЗаполнить.ИдентификаторыПолучить.Добавить(Новый Структура("Ид", СтрокаСписка.ИдСБИС));
	КонецЦикла;
	ЗаполнитьСписокДокументовСБИССвязьюСсылок1С(ПараметрыЗаполнить, ЛокальныйКэш);
КонецПроцедуры

// функция ищет связанные документы 1С для каждого вложения пакета и заполняет массив служебных вложений	
&НаКлиенте
Функция НайтиДокументы1СПоПакетуСБИС(ПолныйСоставПакета, КэшИни, КаталогНастроек, МассивСлужебных) Экспорт
	МассивИдентификаторов = Новый Массив;
	ВложенияЗаполнить = Новый Соответствие;
	СчётчикИндекса = 0;
	Для Каждого Вложение Из ПолныйСоставПакета.Вложение Цикл
		Если	Не	Вложение.Свойство("Служебный") 
			Или 	Вложение.Служебный = "Нет" Тогда
			МассивИдентификаторов.Добавить(Новый Структура("Ид, ИдВложения", ПолныйСоставПакета.Идентификатор, Вложение.Идентификатор));
			Вложение.Вставить("Документы1С",		Новый СписокЗначений);
			Вложение.Вставить("Документ1СПроведен",	Ложь);
			ВложенияЗаполнить.Вставить(ПолныйСоставПакета.Идентификатор + Вложение.Идентификатор, Вложение);
		Иначе	
			МассивСлужебных.Добавить(СчётчикИндекса);
		КонецЕсли;
		СчётчикИндекса = СчётчикИндекса + 1;
	КонецЦикла;
	ПараметрыЗаполненияСвязи = Новый Структура("ИдентификаторыПолучить, ИдАккаунта, ЗаполнитьСумму", МассивИдентификаторов, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш), Ложь);
	ВыборкаПоСпискуИД = СбисПрочитатьСвязьДокументов1С(ПараметрыЗаполненияСвязи);
	Для Каждого КлючИЗначениеСоотвествие Из ВыборкаПоСпискуИД Цикл
		Вложение = ВложенияЗаполнить.Получить(КлючИЗначениеСоотвествие.Ключ);
		Если Вложение = Неопределено Тогда
			//Нет обратного вложения для заполнения.
			Продолжить;
		КонецЕсли;
		Для Каждого ДокументНайден Из КлючИЗначениеСоотвествие.Значение Цикл
			Вложение.Документы1С.Добавить(ДокументНайден.Ссылка); 
			Вложение.Документ1СПроведен = Вложение.Документ1СПроведен Или ДокументНайден.Проведен;
		КонецЦикла;
	КонецЦикла;
КонецФункции

//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 26 +
//&НаСервереБезКонтекста не было тут изначально, не могу поставить
Функция УдалитьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек) Экспорт
	
	УдалитьПараметрыДокументаСБИСПарам(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек,Неопределено);
	
КонецФункции
//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)

Функция УдалитьПараметрыДокументаСБИСПарам(СтруктураПараметровДокументаСБИС,ДокументСсылка,Ини,КаталогНастроек,ДополнительныеПараметры = Неопределено) Экспорт
	
	// удаляет свойства для документа 1С (при удалении сопоставления)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 27
		УдалитьСвойствоОбъекта(Свойство.Ключ,ДокументСсылка,КаталогНастроек,Ини.Конфигурация,ДополнительныеПараметры);
		//<-- KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)
	КонецЦикла;
	
КонецФункции

//KES 050751151 Статусы в разрезе регламентов (СОПОСТАВЛЕНИЕ)--> 28  +
&НаСервере
Функция УдалитьСвойствоОбъекта(ИмяСвойства,ДокументСсылка,КаталогНастроек,ИниКонфигурация,ДопПараметры = Неопределено) Экспорт
    ОписаниеИмяСвойства = Новый Структура("Имя", ИмяСвойства);
	Если	ЗначениеЗаполнено(ДопПараметры)
		И	ДопПараметры.Свойство("Регламент") Тогда
		ОписаниеИмяСвойства.Вставить("Регламент", ДопПараметры.Регламент);
	КонецЕсли;
	ЗначениеСвойства = СбисПолучитьСвойствоОбъектаНаСервере(ОписаниеИмяСвойства);
	
	// удаляет значение параметра из регистра сведений	
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(ЗначениеСвойства);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()>0 Тогда	
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);
		Попытка
			НоваяЗаписьНабора.Значение = "";
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
		
	КонецЕсли;
КонецФункции

// Не использовать! Старая функция для совместимости. Получает массив ссылок докуметов по ИД пакета СБИС.
&НаКлиенте
Функция ДокументыПоИдПакета(Ид, ИниКонфигурация, ДополнительныеПараметры = Неопределено) Экспорт
	ПараметрыЗаполненияСвязи = Новый Структура("ИдентификаторыПолучить, ИдАккаунта, ЗаполнитьСумму", Новый Массив, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш), Ложь);
	ПараметрыЗаполненияСвязи.ИдентификаторыПолучить.Добавить(Новый Структура("Ид", Ид));
	ВыборкаПоСпискуИД = СбисПрочитатьСвязьДокументов1С(ПараметрыЗаполненияСвязи);
	Результат = Новый Массив;
	СписокДокументовПоИд = ВыборкаПоСпискуИД.Получить(Ид);
	Если СписокДокументовПоИд = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	Для Каждого СтрокаВыборки Из СписокДокументовПоИд Цикл
		Результат.Добавить(СтрокаВыборки.Ссылка);
	КонецЦикла;
	Возврат Результат;
конецфункции

// Не использовать! Старая функция для совместимости. Получает массив ссылок докуметов по ИД пакета и вложения СБИС.
&НаКлиенте
Функция НайтиДокументы1СПоИдВложенияСБИС(Ид, ИдВложения,Ини,КаталогНастроек) Экспорт
	ПараметрыЗаполненияСвязи = Новый Структура("ИдентификаторыПолучить, ИдАккаунта, ЗаполнитьСумму", Новый Массив, ЛокальныйКэш.Интеграция.ПолучитьИдТекущегоАккаунта(ЛокальныйКэш), Ложь);
	ПараметрыЗаполненияСвязи.ИдентификаторыПолучить.Добавить(Новый Структура("Ид, ИдВложения", Ид, ИдВложения));
	ВыборкаПоСпискуИД		= СбисПрочитатьСвязьДокументов1С(ПараметрыЗаполненияСвязи);
	СписокДокументовПоИд	= ВыборкаПоСпискуИД.Получить(Ид + ИдВложения);
	Если СписокДокументовПоИд = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Результат = Новый Структура("Ссылки, Проведен", Новый Массив, Ложь);
	Для Каждого СтрокаВыборки Из СписокДокументовПоИд Цикл
		Результат.Ссылки.Добавить(СтрокаВыборки.Ссылка);
		Результат.Проведен = Результат.Проведен Или СтрокаВыборки.Проведен;
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Не использовать! Старая функция для совместимости. Получает Значение свойства по имени.
&НаКлиенте
Функция ПрочитатьПараметрыДокументаСБИС(ДокументСсылка, КаталогНастроек,ИмяСвойства,Ини) Экспорт
	Возврат СбисПрочитатьЗначениеСвойстваДокумента(Новый Структура("Имя, ДокументСсылка", ИмяСвойства, ДокументСсылка), ЛокальныйКэш);
КонецФункции

// Не использовать! Старая функция для совместимости. Получает Значение свойств по именам и ссылкам на документ 1С с учетом стенда.
&НаКлиенте
Функция ПрочитатьПараметрыДокументовСБИС(СписокСсылок,МассивСвойств,Конфигурация,ДополнительныеПараметры) Экспорт
	ПараметрыЗапросаСпискаСвойств = Новый Структура("СписокДокументов, Свойства, ПолныйСписок", СписокСсылок, Новый Массив, Истина);
	Для Каждого Свойство Из МассивСвойств Цикл
		ПараметрыЗапросаСпискаСвойств.Свойства.Добавить(Новый Структура("Имя", Свойство));
	КонецЦикла;
	СписокСвойств = СбисПрочитатьЗначенияСвойствДокументов(ПараметрыЗапросаСпискаСвойств, ЛокальныйКэш);
	Результат = Новый Массив;
	Для Каждого КлючИЗначениеСвойств Из СписокСвойств Цикл
		Результат.Добавить(Новый Структура("Документ1С, СтруктураСвойств", КлючИЗначениеСвойств.Ключ, КлючИЗначениеСвойств.Значение))
	КонецЦикла;	
	Возврат Результат;
КонецФункции

// Не использовать! Старая функция для совместимости. Получает Ид пакета по ссылке.
&НаКлиенте
Функция ПолучитьИдДокументаДопСвойства(СсылкаНаОбъект, ДопПараметры) Экспорт
	Возврат СбисПрочитатьЗначениеСвойстваДокумента(Новый Структура("Имя, ДокументСсылка", "ДокументСБИС_Ид", СсылкаНаОбъект), ЛокальныйКэш);
КонецФункции

