
//Процедура для реестров СБИС. Добавляет в список пакетов найденные документы 1С, их статус и состояние.
//ПараметрыСпискаДокументов - Структура
//		ИдентификаторыПолучить - массив структур с полями Ид, ИдВложения, по которым проводится поиск.
//		ИдАккаунта - строка Идентификатор аккаунта, для дополнительного разреза поиска.
//		ЗаполнитьСумму - булево, признак необходимости извлечения реквизита "СуммаДокумента".
&НаКлиенте
Процедура ЗаполнитьСписокДокументовСБИССвязьюСсылок1С(ПараметрыСпискаДокументов, Кэш) Экспорт
	ПараметрыЗаполненияСвязи = Новый Структура("ИдентификаторыПолучить, ИдАккаунта, ЗаполнитьСумму", ПараметрыСпискаДокументов.ИдентификаторыПолучить, ПараметрыСпискаДокументов.ИдАккаунта, Ложь);
	Если  ПараметрыСпискаДокументов.Свойство("ЗаполнитьСумму") Тогда
		ПараметрыЗаполненияСвязи.ЗаполнитьСумму = ПараметрыСпискаДокументов.ЗаполнитьСумму;
	КонецЕсли;
	ВыборкаПоСпискуИД	= СбисПрочитатьСвязьДокументов1С(ПараметрыЗаполненияСвязи);
	МассивДокументов	= ПараметрыСпискаДокументов.СписокДокументовЗаполнить;	
	Для Каждого СтрокаСпискаЗаполнить Из МассивДокументов Цикл
		СоставПакетаОбработать = СтрокаСпискаЗаполнить.СоставПакета[0].Значение;
		Если	СоставПакетаОбработать.Свойство("Вложение")
			И	СоставПакетаОбработать.Вложение.Количество() Тогда
			ЗаполнитьСтрокуСпискаПоИдПакетаИВложения(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи);
		Иначе
			ЗаполнитьСтрокуСпискаПоИдПакета(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

//Функция делает связь по ИД пакета + вложения.
&НаКлиенте
Процедура ЗаполнитьСтрокуСпискаПоИдПакетаИВложения(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи)
	Для Каждого Вложение Из СоставПакетаОбработать.Вложение Цикл
		Если		Вложение.Свойство("Служебный")
			И	Не	Вложение.Служебный = "Нет" Тогда
			Продолжить;
		КонецЕсли;
			
		Вложение.Вставить("Документы1С", Новый СписокЗначений);
		СтрокаСпискаЗаполнить.Вставить("СуммаДокумента1С",	0);
		СтрокаСпискаЗаполнить.Вставить("Дельта",			0);
		
		МассивДокументовПоИд = ВыборкаПоСпискуИД.Получить(СтрокаСпискаЗаполнить.ИдСБИС + Вложение.Идентификатор);
		Если МассивДокументовПоИд = Неопределено Тогда
			Если Не СтрокаСпискаЗаполнить.Свойство("Проведен") Тогда
				СтрокаСпискаЗаполнить.Вставить("Проведен", -1);
			КонецЕсли;
			ЗаполнитьСтрокуСпискаПоИдПакета(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи);
		Иначе	
			Для Каждого Элемент Из МассивДокументовПоИд Цикл
				СтрокаСпискаЗаполнить.Документы1С.Добавить(Элемент.Ссылка);
				Вложение.Документы1С.Добавить(Элемент.Ссылка);
			КонецЦикла;
			СтрокаСпискаЗаполнить.Вставить("Проведен", СбисИндексКартинкиПоДокументу1С(МассивДокументовПоИд[0]));
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры
	
//Функция делает связь по ИД пакета, если не найдено по ИД пакета + вложения.
&НаКлиенте
Процедура ЗаполнитьСтрокуСпискаПоИдПакета(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи)
	МассивДокументовПоИд = ВыборкаПоСпискуИД.Получить(СтрокаСпискаЗаполнить.ИдСБИС) ;
	Если МассивДокументовПоИд = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтрокаСпискаЗаполнить.Документы1С.Добавить(МассивДокументовПоИд[0].Ссылка);
	СтрокаСпискаЗаполнить.Вставить("Проведен", СбисИндексКартинкиПоДокументу1С(МассивДокументовПоИд[0]));
	Если ПараметрыЗаполненияСвязи.Свойство("ЗаполнитьСумму") Тогда
		Попытка
			СтрокаСпискаЗаполнить.Вставить("СуммаДокумента1С", МассивДокументовПоИд[0].Сумма);
			Дельта = Число(СтрокаСпискаЗаполнить.Сумма) - СтрокаСпискаЗаполнить.СуммаДокумента1С;
			СтрокаСпискаЗаполнить.Вставить("Дельта", ?(Дельта < 0, -Дельта, Дельта));
		Исключение
			//Старая логика, ошибка не обрабатывается.
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

//Обёртка для тонкого клиента.
&НаСервере
Функция ПрочитатьСвязьДокументов1СНаСервере(Знач ПараметрыЧтенияСвойств)
	Возврат ПрочитатьСвязьДокументов1СПоИдентификаторамСБИС(ПараметрыЧтенияСвойств);
КонецФункции
	
&НаСервере
Функция ПрочитатьСвязьДокументов1СПоИдентификаторамСБИС(ПараметрыЧтенияСвойств)
	Перем ИдАккаунтаДляПоиска;
	МассивИдентификаторов	= ПараметрыЧтенияСвойств.ИдентификаторыПолучить;
	РезультатВыборки		= Новый Соответствие;
	Если		МассивИдентификаторов = Неопределено
		Или Не	МассивИдентификаторов.Количество() Тогда
		Возврат РезультатВыборки;
	КонецЕсли;
	//Определение набора свойств
	ИмяРегистраСвойствОбъектов					= ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	ИмяПланаВидовХарактеристикСвойствОбъектов	= ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов;
	
	МассивСтатусРегламент = ПараметрыСоединения.МассивСтатусРегламент;
	мСвойстваДокументСбисИдВложения	= Новый Массив;
	мСвойстваДокументСбисИд			= Новый Массив;
	
	Свойство_ДокументСБИС_Ид		= СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_Ид"));
	Свойство_ДокументСБИС_ИдВложения= СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Имя", "ДокументСБИС_ИдВложения"));
	мСвойстваДокументСбисИдВложения.Добавить(Свойство_ДокументСБИС_ИдВложения);
	мСвойстваДокументСбисИд.Добавить		(Свойство_ДокументСБИС_Ид);

	Для Каждого Элемент Из МассивСтатусРегламент Цикл   
       	мСвойстваДокументСбисИдВложения.Добавить(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Регламент, Имя", Элемент, "ДокументСБИС_ИдВложения")));
		мСвойстваДокументСбисИд.Добавить		(СбисПолучитьСвойствоОбъектаНаСервере(Новый Структура("Регламент, Имя", Элемент, "ДокументСБИС_Ид")));
    КонецЦикла;

	ВремТабл = Новый ТаблицаЗначений;
	ВремТабл.Колонки.Добавить("ИдПакетаКлючПоиска",	Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));//Ключ для поиска свойства с учетом аккаунта и без него
	ВремТабл.Колонки.Добавить("Ид",					Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	ВремТабл.Колонки.Добавить("ИдВложения",			Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(999)));
	Для Каждого Стр Из МассивИдентификаторов Цикл
		СтрТ = ВремТабл.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);
		СтрТ.ИдПакетаКлючПоиска = СтрТ.Ид;
	КонецЦикла;
	Если	ПараметрыЧтенияСвойств.Свойство("ИдАккаунта", ИдАккаунтаДляПоиска)
		И	ЗначениеЗаполнено(ИдАккаунтаДляПоиска) Тогда
		СписокИдПакетаУчтены = Новый Массив;
		//Для поиска вложений с учетом ИдАккаунта, дополнить ТЗ с ИД пакета записями с ИД аккаунта.
		Для Каждого Стр Из МассивИдентификаторов Цикл
			ИдПакетаДляПоиска = ИдПакетаСбис(Стр.Ид, ИдАккаунтаДляПоиска);
			Если Не СписокИдПакетаУчтены.Найти(ИдПакетаДляПоиска) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтрТ = ВремТабл.Добавить();
			СтрТ.Ид = Стр.Ид;
			СтрТ.ИдПакетаКлючПоиска = ИдПакетаДляПоиска;
			СписокИдПакетаУчтены.Добавить(ИдПакетаДляПоиска);
		КонецЦикла;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст  = 
	"ВЫБРАТЬ
    |	ТЗ.ИдПакетаКлючПоиска КАК ИдПакетаКлючПоиска,
    |	ТЗ.Ид КАК Ид
    |ПОМЕСТИТЬ ВТ_ИдПакетов
    |ИЗ
    |	&ТЗ КАК ТЗ
    |ГДЕ
    |	НЕ ТЗ.ИдПакетаКлючПоиска = """"
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ТЗ.ИдВложения КАК ИдВложения
    |ПОМЕСТИТЬ ВТ_ИдВложения
    |ИЗ
    |	&ТЗ КАК ТЗ
    |ГДЕ
    |	НЕ ТЗ.ИдВложения = """"
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТ_ИдПакетов.Ид КАК Ид,
    |	ЗначенияСвойствОбъектов.Объект КАК Док1С
    |ПОМЕСТИТЬ ВТДокументыПакета
    |ИЗ
    |	ВТ_ИдПакетов КАК ВТ_ИдПакетов
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
    |		ПО ВТ_ИдПакетов.ИдПакетаКлючПоиска = ЗначенияСвойствОбъектов.Значение
    |			И (ЗначенияСвойствОбъектов.Свойство.Ссылка В (&мСвойстваДокументСбисИд))
    |
    |СГРУППИРОВАТЬ ПО
    |	ВТ_ИдПакетов.Ид,
    |	ЗначенияСвойствОбъектов.Объект
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТ_ИдВложения.ИдВложения КАК ИдВложения,
    |	ЗначенияСвойствОбъектов.Объект КАК Док1С
    |ПОМЕСТИТЬ ВТДокументыВложений
    |ИЗ
    |	ВТ_ИдВложения КАК ВТ_ИдВложения
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
    |		ПО ВТ_ИдВложения.ИдВложения = ЗначенияСвойствОбъектов.Значение
    |			И (ЗначенияСвойствОбъектов.Свойство.Ссылка В (&мСвойстваДокументСбисИдВложения))
    |
    |СГРУППИРОВАТЬ ПО
    |	ВТ_ИдВложения.ИдВложения,
    |	ЗначенияСвойствОбъектов.Объект
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ВТДокументыПакета.Ид КАК Ид,
    |	ЕСТЬNULL(ВТДокументыВложений.ИдВложения, """") КАК ИдВложения,
    |	ВТДокументыПакета.Док1С КАК Док1С
	|ИЗ
    |	ВТДокументыПакета КАК ВТДокументыПакета
    |		ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыВложений КАК ВТДокументыВложений
    |		ПО ВТДокументыПакета.Док1С = ВТДокументыВложений.Док1С";

	Запрос.УстановитьПараметр("ТЗ",								ВремТабл);
	Запрос.УстановитьПараметр("мСвойстваДокументСбисИд",		мСвойстваДокументСбисИд);
	Запрос.УстановитьПараметр("мСвойстваДокументСбисИдВложения",мСвойстваДокументСбисИдВложения);

	ВыборкаЗаписей = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗаписей.СледующийПоЗначениюПоля("Ид") Цикл
		ВыборкаКлючИд = ВыборкаЗаписей.Ид;
		СписокДок = Новый Массив;
		Пока ВыборкаЗаписей.СледующийПоЗначениюПоля("ИдВложения") Цикл
			КлючДляВыборки = ВыборкаКлючИд + ВыборкаЗаписей.ИдВложения;
			Пока ВыборкаЗаписей.Следующий() Цикл
				//Выбираем пометки удаления и проведения тут. Иначе - вешается запрос.
				СтрокаДобавить = Новый Структура("Ссылка, Проведен, ПометкаУдаления", ВыборкаЗаписей.Док1С);
				Попытка
					СтрокаДобавить.Проведен			= ВыборкаЗаписей.Док1С.Проведен;
				Исключение
					СтрокаДобавить.Проведен			= Ложь;
				КонецПопытки;
				Попытка
					СтрокаДобавить.ПометкаУдаления	= ВыборкаЗаписей.Док1С.ПометкаУдаления;
				Исключение
					СтрокаДобавить.ПометкаУдаления	= Ложь;
				КонецПопытки;
				//Если требуется сумма, то на сервере получить сумму от реквизита. Если есть.
		        Если ПараметрыЧтенияСвойств.ЗаполнитьСумму Тогда
		            СтрокаДобавить.Вставить("Сумма", 0);
					Попытка
						СтрокаДобавить.Сумма = ВыборкаЗаписей.Док1С.СуммаДокумента;
					Исключение
					КонецПопытки;
				КонецЕсли;
				СписокДок.Добавить(СтрокаДобавить);
			КонецЦикла;
			РезультатВыборки.Вставить(КлючДляВыборки, СписокДок);
		КонецЦикла;
	КонецЦикла;
	Возврат РезультатВыборки;	
КонецФункции

//Получает значения указанных свойства по документам на сервере. Возвращает соответствие, где ключ - ссылка на документ, значение - массив структур со Свойствами и значениями
&НаСервере
Функция ПрочитатьСвойстваДокументовПоСсылкамНаСервере(ФильтрВходящий)
	
	СписокДокументов 	= ФильтрВходящий.СписокДокументов;
	СписокСвойств		= ФильтрВходящий.СписокСвойств;
	
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	                |	ЗначенияСвойствОбъектов.Объект КАК Документ1С,
	                |	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
	                |	ЗначенияСвойствОбъектов.Свойство.Наименование КАК Наименование,
	                |	ЗначенияСвойствОбъектов.Значение КАК Значение
	                |ИЗ
	                |	РегистрСведений." + ПараметрыСоединения.ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	                |ГДЕ
	                |	ЗначенияСвойствОбъектов.Объект В(&Документ1С)
	                |	И ЗначенияСвойствОбъектов.Свойство В(&СписокСвойств)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Документ1С";
	
	Запрос.УстановитьПараметр("Документ1С",		СписокДокументов);
	Запрос.УстановитьПараметр("СписокСвойств",	СписокСвойств);
	Результат = Новый Соответствие;
	ВыборкаЗаписей = Запрос.Выполнить().Выбрать();
	Пока ВыборкаЗаписей.СледующийПоЗначениюПоля("Документ1С") Цикл
		СписокСвойств = Новый Массив;
		Результат.Вставить(ВыборкаЗаписей.Документ1С, СписокСвойств);
		Пока ВыборкаЗаписей.СледующийПоЗначениюПоля("Свойство") Цикл
			СписокСвойств.Добавить(Новый Структура("Свойство, Наименование, Значение", ВыборкаЗаписей.Свойство, ВыборкаЗаписей.Наименование, ВыборкаЗаписей.Значение));
		КонецЦикла;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИдПакетаСбис(ИдПакетаСБИС, ИдАккаунта = "")
	Если Не ЗначениеЗаполнено(ИдАккаунта) Тогда
		Возврат ИдПакетаСБИС;
	КонецЕсли;
	Возврат ИдПакетаСБИС + "_" + ИдАккаунта; 
		
КонецФункции

// Функция возвращает индекс картинки по статусу документа 1С	
&НаКлиентеНаСервереБезКонтекста
Функция СбисИндексКартинкиПоДокументу1С(Документ1С)
	Попытка
		Если Документ1С.Проведен Тогда 
			Возврат 0;
		ИначеЕсли Документ1С.ПометкаУдаления Тогда 
			Возврат 2;
		Иначе
			Возврат 1;
		КонецЕсли;
	Исключение
		Возврат 0;
	КонецПопытки;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
функция СбисПриоритетСтатуса(СтатусЭД)
	// Функция возвращает индекс картинки по статусу электронного документа
	Если Найти(нрег(СтатусЭД), "выгружен")=1 или Найти(нрег(СтатусЭД), "загружен на сервер")=1 или Найти(нрег(СтатусЭД), "документ редактируется")=1 или Найти(нрег(СтатусЭД), "есть документ")=1 Тогда     // Выгружен или загружен на сервер
		Возврат 0;
	ИначеЕсли Найти(нрег(СтатусЭД), "отослано приглашение")=1 Тогда      // Отправлено приглашение
		Возврат 1;
	ИначеЕсли Найти(нрег(СтатусЭД), "отправлен")=1 Тогда     // Отправлен
		Возврат 2;
	ИначеЕсли Найти(нрег(СтатусЭД), "ошибка")>0 или Найти(нрег(СтатусЭД), "проблемы при доставке")>0 Тогда     // Ошибки при отправке или при доставке
		Возврат 3;
	ИначеЕсли Найти(нрег(СтатусЭД),"на утверждении")=1 или Найти(нрег(СтатусЭД),"доставлен")=1 Тогда                        // Доставлен
		Возврат 4;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено с проблемами")=1 Тогда                        // Отклонен
		Возврат 5;
	ИначеЕсли Найти(нрег(СтатусЭД), "выполнение завершено успешно")=1 Тогда                        // Утвержден
		Возврат 6;
	ИначеЕсли Найти(нрег(СтатусЭД), "удален")=1 или Найти(нрег(СтатусЭД), "аннулирован")=1 Тогда                        // Удален контрагентом
		Возврат 7;
	ИначеЕсли Найти(нрег(СтатусЭД), "отозван мной")=1 Тогда                        // Удален мной
		Возврат 7;
	Иначе
		Возврат -1;
	КонецЕсли;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция Разобрать_ДокументСБИС_Ид(ИдПакета)
	ИдПакета = СтрЗаменить(ИдПакета, "_", Символы.ПС);
	ИдДокумента = СтрПолучитьСтроку(ИдПакета, 1);
	Если СтрЧислоСтрок(ИдПакета) < 2 Тогда
		ИдАккаунта = "";	
	Иначе
	    ИдАккаунта = СтрПолучитьСтроку(ИдПакета, 2);
	КонецЕсли;	
	Возврат Новый Структура("ИдДокумента, ИдАккаунта", ИдДокумента, ИдАккаунта);
КонецФункции

