
// Возвращает значение свойства по его имени и документу
// Параметры:
//  ПараметрыСвойства	 - Структура	 - 
//		ДокументСсылка	- Обязательный	- ДокумнтСсылка, по которому требуется получить свойство
//		Имя				- Обязательный  - Строка, Имя свойства ДокументСБИС_Ид/ДокументСБИС_ИдВложения/ДокументСБИС_Статус
//		Регламент		- Необязательный- Строка доп. регламента свойства.
// Возвращаемое значение:
//   -  Сохраненное значение свойства
//
&НаКлиенте
Функция СбисПрочитатьЗначениеСвойстваДокумента(ПараметрыСвойства) Экспорт
	Попытка
		СписокДокументов = Новый Массив;
		СписокДокументов.Добавить(ПараметрыСвойства.ДокументСсылка);
		СписокСвойств	= Новый Массив;
		СписокСвойств.Добавить(ПараметрыСвойства.Имя);
		СписокСвойств.Добавить("ДокументСБИС_Статус");
		ПрочитатьСвойстваДокументовПоСсылкамНаСервере(Новый Структура("СписокДокументов, СписокСвойств", СписокДокументов, СписокСвойств));
	Исключение
	КонецПопытки;
	Попытка
		Возврат ПрочитатьПараметрыДокументаСБИСНаСервере(ПараметрыСвойства.ДокументСсылка, ПараметрыСвойства.Имя);
	Исключение
		МодульОбъектаКлиент().СообщитьИсключениеДБФ(Новый Структура("ИнформацияОбОшибке, Сообщение", ИнформацияОбОшибке(), "Чтение параметров сопоставления недоступно."));
	КонецПопытки;
КонецФункции

//Функция возвращает параметры сопоставленного документа СБИС - ИД пакета и аккаунта
&НаКлиенте
Функция СбисПрочитатьСведенияОПакете(ПараметрыЧтения, Кэш) Экспорт
	ПараметрыЧтенияСвойства	= Новый Структура("Имя, ДокументСсылка", "ДокументСБИС_Ид", ПараметрыЧтения.ДокументСсылка);
	ИдДокументаЗначение		= СбисПрочитатьЗначениеСвойстваДокумента(ПараметрыЧтенияСвойства);
	Возврат Новый Структура("ИдДокумента, ИдАккаунта", ИдДокументаЗначение, "");
КонецФункции

////Процедура для реестров СБИС. Добавляет в список пакетов найденные документы 1С, их статус и состояние.
////ПараметрыСпискаДокументов - Структура
////		ИдентификаторыПолучить - массив структур с полями Ид, ИдВложения, по которым проводится поиск.
////		ИдАккаунта - строка Идентификатор аккаунта, для дополнительного разреза поиска.
////		ЗаполнитьСумму - булево, признак необходимости извлечения реквизита "СуммаДокумента".
//// v8unpack &НаКлиенте
//Процедура ЗаполнитьСписокДокументовСБИССвязьюСсылок1С(ПараметрыСпискаДокументов, Кэш) Экспорт
//	ПараметрыЗаполненияСвязи = Новый Структура("ИдентификаторыПолучить, ИдАккаунта, ЗаполнитьСумму", ПараметрыСпискаДокументов.ИдентификаторыПолучить, ПараметрыСпискаДокументов.ИдАккаунта, Ложь);
//	Если  ПараметрыСпискаДокументов.Свойство("ЗаполнитьСумму") Тогда
//		ПараметрыЗаполненияСвязи.ЗаполнитьСумму = ПараметрыСпискаДокументов.ЗаполнитьСумму;
//	КонецЕсли;
//	ВыборкаПоСпискуИД	= СбисПрочитатьСвязьДокументов1С(ПараметрыЗаполненияСвязи);
//	МассивДокументов	= ПараметрыСпискаДокументов.СписокДокументовЗаполнить;	
//	Для Каждого СтрокаСпискаЗаполнить Из МассивДокументов Цикл
//		СоставПакетаОбработать = СтрокаСпискаЗаполнить.СоставПакета[0].Значение;
//		Если	СоставПакетаОбработать.Свойство("Вложение")
//			И	СоставПакетаОбработать.Вложение.Количество() Тогда
//			ЗаполнитьСтрокуСпискаПоИдПакетаИВложения(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи);
//		Иначе
//			ЗаполнитьСтрокуСпискаПоИдПакета(СоставПакетаОбработать, СтрокаСпискаЗаполнить, ВыборкаПоСпискуИД, ПараметрыЗаполненияСвязи);
//		КонецЕсли;
//	КонецЦикла;	
//КонецПроцедуры

