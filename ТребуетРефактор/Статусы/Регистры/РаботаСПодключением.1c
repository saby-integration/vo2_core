
//Устанавливает значение параметра в регистре сведений	
&НаСервере
Функция СбисСвойствоУстановлено(СвойствоПараметр, СвойствоЗначение, ДокументСсылка, НоваяРедакция, ДополнительныеПараметры, Отказ)
	Результат = Истина;
	ИмяРегистраСвойствОбъектов = ДополнительныеПараметры.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	НаборЗаписей.Отбор.Свойство.Установить(СвойствоПараметр);
	НаборЗаписей.Прочитать();
	
	ЗаписатьНабор = Истина;
	Если Не НаборЗаписей.Количество() Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = ДокументСсылка;
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 24 +
		НоваяЗаписьНабора.Свойство = СвойствоПараметр;
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	Иначе
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);	
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 25 +
		// << alo СтатусГос
		Если СвойствоПараметр.Наименование = СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_Статус")) Тогда	
			//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
			СтароеЗначениеСвойства = НоваяЗаписьНабора.Значение;
			ЗаписатьНабор = (сбисПриоритетСтатуса(СвойствоЗначение) > сбисПриоритетСтатуса(СтароеЗначениеСвойства)) Или НоваяРедакция;
		ИначеЕсли СвойствоПараметр.Наименование = СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_СтатусГос")) Тогда	
			ЗаписатьНабор = СвойствоЗначение <> НоваяЗаписьНабора.Значение Или НоваяРедакция;	// alo СтатусГос >>
		КонецЕсли;
	КонецЕсли;
	Если ЗаписатьНабор Тогда
		Попытка
			НоваяЗаписьНабора.Значение = СвойствоЗначение;
			НаборЗаписей.Записать();
		Исключение
			Отказ = Истина;
			Возврат Новый Структура("code,message,details", 746, "Ошибка на сервере", ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	Возврат ЗаписатьНабор;
КонецФункции

//Возвращает ссылку на свойство плана видов характеристик
&НаСервереБезКонтекста
Функция СвойствоПланаВидовХарактеристик(ПараметрыЗапроса, Отказ)
	СбисИмяПлана = СтрПолучитьСтроку(СтрЗаменить(ПараметрыЗапроса.Тип, ".", Символы.ПС), 2);
	Возврат ПланыВидовХарактеристик[СбисИмяПлана].НайтиПоНаименованию(ПараметрыЗапроса.Ключ, Истина).Ссылка;
КонецФункции

&НаСервереБезКонтекста
Функция Документы1СПоПараметрам(ПараметрыЗапроса, ДополнительныеПараметры, Отказ) Экспорт
	Перем СбисПолучитьИмяМетаданных;
	//Сформируем временную таблицу для запроса 
	Если Не ДополнительныеПараметры.Свойство("ПолучитьИмяМетаданных", СбисПолучитьИмяМетаданных) Тогда
		СбисПолучитьИмяМетаданных = Ложь;
	КонецЕсли;
	ТаблицаСвойства = Новый ТаблицаЗначений;
	ТаблицаСвойства.Колонки.Добавить("Свойство",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка." + ПараметрыЗапроса.ИмяПланаВидовХарактеристикСвойствОбъектов));
	ТаблицаСвойства.Колонки.Добавить("Ид",		Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	Для Каждого ЭлементИд Из ПараметрыЗапроса.СписокИд Цикл
		НоваяСтрока = ТаблицаСвойства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ЭлементИд);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст  = "ВЫБРАТЬ
	                |	ТаблицаСвойства.Ид КАК Ид,
	                |	ТаблицаСвойства.Свойство КАК Свойство
	                |ПОМЕСТИТЬ ИсточникДанных
	                |ИЗ
	                |	&ТаблицаСвойства КАК ТаблицаСвойства
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ИсточникДанных.Ид КАК ИдентификаторПакета,
	                |	ЗначенияСвойствОбъектов.Объект КАК Ссылка
	                |ИЗ
	                |	ИсточникДанных КАК ИсточникДанных
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ПараметрыЗапроса.ИмяРегистраСвойствОбъектов + " КАК ЗначенияСвойствОбъектов
	                |		ПО ИсточникДанных.Свойство = ЗначенияСвойствОбъектов.Свойство.Ссылка
	                |			И ИсточникДанных.Ид = ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Значение КАК СТРОКА(99))
	                |ГДЕ
	                |	НЕ ЗначенияСвойствОбъектов.Объект ЕСТЬ NULL
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	ИсточникДанных.Ид,
	                |	ЗначенияСвойствОбъектов.Объект
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	ИдентификаторПакета";
	Запрос.УстановитьПараметр("ТаблицаСвойства", ТаблицаСвойства);

	Результат = Новый Соответствие;
	Попытка
		РезультатЗапроса = Запрос.Выполнить();
	Исключение
		Отказ = Истина;
		Возврат Новый Структура("code,message,details", 603, "Ошибка выполнения запроса списка документов", ОписаниеОшибки());
	КонецПопытки;
	ВыборкаПоИд = РезультатЗапроса.Выбрать();
	
	МассивДобавить = Неопределено;
	Пока ВыборкаПоИд.Следующий() Цикл
		КлючРезультат = ВыборкаПоИд.ИдентификаторПакета;
		ЗначениеРезультат = Результат.Получить(КлючРезультат);
		Если ЗначениеРезультат = Неопределено Тогда
			МассивДобавить = Новый Массив;
			Результат.Вставить(КлючРезультат, Новый Структура("Документы1С", МассивДобавить));
		Иначе
			МассивДобавить = ЗначениеРезультат.Документы1С;
		КонецЕсли;                                                   
		СтрокаДобавить = Новый Структура("Ссылка", ВыборкаПоИд.Ссылка);
		Если СбисПолучитьИмяМетаданных Тогда
			СтрокаДобавить.Вставить("Метаданные_Имя", ВыборкаПоИд.Ссылка.Метаданные().Имя);
	КонецЕсли;
		МассивДобавить.Добавить(СтрокаДобавить);
	КонецЦикла;	
	Возврат Результат;
конецфункции

&НаСервере
Функция СбисЗаписатьИзмененияПоСвойствам(ПараметрыЗапроса, ДополнительныеПараметры, Отказ)
	КэшНаборовЗаписей = Новый Соответствие;
	РезультатОбработки = Новый Соответствие;
	Для Каждого КлючИЗначение Из ПараметрыЗапроса.Список Цикл
		ДанныеДляОбработки = КлючИЗначение.Значение;
		СписокОбработанныхДокументов = Новый Массив;
		Для Каждого СсылкаНаДокумент1С Из ДанныеДляОбработки.Документы1С Цикл
			ОшибкаУстановкиСвойства = Ложь;
			// << alo СтатусГос Список
			Если ДанныеДляОбработки.Свойство("СостояниеГос") Тогда
				РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_СтатусГос, ДанныеДляОбработки.СостояниеГос, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, Отказ);
				Если Отказ Тогда
					СтрокаДобавить = Новый Структура("Ссылка, Отказ, Ошибка", СсылкаНаДокумент1С.Ссылка, Отказ, РезультатДобавления);
					СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
				КонецЕсли;
			КонецЕсли;	// alo СтатусГос Список >>
			Если ДанныеДляОбработки.Свойство("ТекущийЭтап") Тогда
				РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_ТекущийЭтап, ДанныеДляОбработки.ТекущийЭтап, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, Отказ);
				Если Отказ Тогда
					СтрокаДобавить = Новый Структура("Ссылка, Отказ, Ошибка", СсылкаНаДокумент1С.Ссылка, Отказ, РезультатДобавления);
					СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
				КонецЕсли;
			КонецЕсли;
			РезультатДобавления = СбисСвойствоУстановлено(ДанныеДляОбработки.ДокументСБИС_Статус, ДанныеДляОбработки.Состояние.Название, СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки.НоваяРедакция, ДополнительныеПараметры, ОшибкаУстановкиСвойства);
			СтрокаДобавить = Новый Структура("Ссылка, Отказ", СсылкаНаДокумент1С.Ссылка, ОшибкаУстановкиСвойства);
			Если ОшибкаУстановкиСвойства Тогда
				СтрокаДобавить.Вставить("Ошибка", РезультатДобавления);
				СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
			ИначеЕсли РезультатДобавления Тогда
				СписокОбработанныхДокументов.Добавить(СтрокаДобавить);
			КонецЕсли;
			ИзменитьРеквизитыДокумента1С(СсылкаНаДокумент1С.Ссылка, ДанныеДляОбработки, ДополнительныеПараметры.Ини);
		КонецЦикла;
		РезультатОбработки.Вставить(КлючИЗначение.Ключ, СписокОбработанныхДокументов);
	КонецЦикла;
	Для Каждого КлючИЗначение Из ПараметрыЗапроса.Контрагенты Цикл
		Контрагент = НайтиКонтрагентаИзДокументаСБИС(ДополнительныеПараметры.Ини.Конфигурация, КлючИЗначение.Значение);
		Если Контрагент = Ложь Тогда
			Продолжить;
		КонецЕсли;
		сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент, ДополнительныеПараметры.Ини.Конфигурация);	
	КонецЦикла;
	Возврат РезультатОбработки;
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьРеквизитыДокумента1С(ДокСсылка,СоставПакета,Ини) экспорт
	ИмяДокумента = ДокСсылка.Метаданные().Имя;
	// в фактуре проставляем дату и способ выставления
	Если Ини.Свойство(ИмяДокумента) и Ини[ИмяДокумента].Свойство("мФайл") Тогда
		Попытка
			Если СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Название = "Извещение о получении" Тогда
				Событие=СоставПакета.Событие[0];
				Для Каждого Элемент Из Ини[ИмяДокумента].мФайл Цикл
					Если Элемент.Значение.Свойство("ЗаполнятьДатуСпособВыставления") и Элемент.Значение.ЗаполнятьДатуСпособВыставления.Значение ="'Истина'" Тогда
						ИмяРеквизитаДатыВыставления = Сред(Элемент.Значение.ДатаВыставления.Значение, Найти(Элемент.Значение.ДатаВыставления.Значение, ".")+1);
						ИмяРеквизитаСпособаВыставления = Сред(Элемент.Значение.СпособВыставления.Значение, Найти(Элемент.Значение.СпособВыставления.Значение, ".")+1);
						ЗначениеСпособаВыставления = Элемент.Значение.СпособВыставления.Вычислить;
						ДокОбъект = ДокСсылка.ПолучитьОбъект();
						ДокОбъект.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина); // обязательно требуется для состоянияЭД
						Если ТипЗнч(Событие.ДатаВремяДокумента) = Тип("Дата") Тогда
							ДокОбъект[ИмяРеквизитаДатыВыставления] = Событие.ДатаВремяДокумента;
						Иначе
							ДокОбъект[ИмяРеквизитаДатыВыставления] = ДокОбъект.Дата;
						КонецЕсли;
						ДокОбъект[ИмяРеквизитаСпособаВыставления] = ЗначениеСпособаВыставления;
						ДокОбъект.Записать();
					КонецЕсли;
					Прервать;
				КонецЦикла;
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСпособОбменаКонтрагента(СоставПакета,Ини,КэшПоКонтрагентам) экспорт
	Если Ини.Конфигурация.Свойство("ЗаполнятьСпособОбменаКонтрагента") и Ини.Конфигурация.ЗаполнятьСпособОбменаКонтрагента.Значение = "'Истина'" и
		СоставПакета.Свойство("Событие") и СоставПакета.Событие[0].Свойство("Название") и СоставПакета.Событие[0].Название = "Извещение о получении" Тогда
		ИННКПП = ?(СоставПакета.Контрагент.Свойство("СвЮЛ"),СоставПакета.Контрагент.СвЮЛ.ИНН+"_"+СоставПакета.Контрагент.СвЮЛ.КПП, СоставПакета.Контрагент.СвФЛ.ИНН);
		Если не КэшПоКонтрагентам.Свойство("к"+ИННКПП) Тогда
			КэшПоКонтрагентам.Вставить("к"+ИННКПП);
			Контрагент = НайтиКонтрагентаИзДокументаСБИС(Ини.Конфигурация, СоставПакета.Контрагент);
			Если Контрагент<>Ложь Тогда
				сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент,Ини.Конфигурация);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
&НаСервере
Функция ЗаписатьПараметрыДокументовСБИС(ДанныеПоСтатусам,ИниКонфигурация,КаталогНастроек) Экспорт
	Для Каждого Элемент Из ДанныеПоСтатусам Цикл
		ДопПараметрыЗаписи = Новый Структура("Регламент, ИдАккаунта", "");
		ЗаполнитьЗначенияСвойств(ДопПараметрыЗаписи, Элемент);
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 20 +
		ЗаписатьПараметрыДокументаСБИС(Элемент.СтруктураСвойств,Элемент.Документ1С, ИниКонфигурация, КаталогНастроек, ДопПараметрыЗаписи);
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	КонецЦикла;
КонецФункции

&НаСервере
Функция ЗаписатьПараметрыДокументаСБИС(СтруктураПараметровДокументаСБИС,ДокументСсылка,ИниКонфигурация,КаталогНастроек,ДополнительныеПараметры=Неопределено) Экспорт
	// добавляет свойства для документа 1С (при сопоставлении и загрузке документов)	
	Для Каждого Свойство Из СтруктураПараметровДокументаСБИС Цикл
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 21 + 
		ЗначениеЗаписать = Свойство.Значение;
		Если	Не	ПараметрыСоединения.СвойстваВРазрезеАккаунта.НайтиПоЗначению(НРег(Свойство.Ключ)) = Неопределено
			И		ЗначениеЗаполнено(ЗначениеЗаписать)
			И	Не	ДополнительныеПараметры = Неопределено
			И		ДополнительныеПараметры.Свойство("ИдАккаунта")
			И	Не	ДополнительныеПараметры.ИдАккаунта = Неопределено Тогда
			ЗначениеЗаписать = ЗначениеЗаписать + "_" + ДополнительныеПараметры.ИдАккаунта;
		КонецЕсли;

		ДобавитьСвойствоОбъекта(Свойство.Ключ, ЗначениеЗаписать, ДокументСсылка, КаталогНастроек, ИниКонфигурация, Истина, ДополнительныеПараметры);
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	КонецЦикла;
КонецФункции

&НаСервере
Функция ДобавитьСвойствоОбъекта(ИмяСвойства,ЗначениеСвойства,ДокументСсылка,КаталогНастроек,ИниКонфигурация,НоваяРедакция=Ложь,ДополнительныеПараметры=Неопределено) Экспорт
	
	ПараметрыСвойстваОбъекта = Новый Структура("Имя", ИмяСвойства); 
	Если	ЗначениеЗаполнено(ДополнительныеПараметры)
		И	ДополнительныеПараметры.Свойство("Регламент") Тогда
		ПараметрыСвойстваОбъекта.Вставить("Регламент", ДополнительныеПараметры.Регламент);
	КонецЕсли;
	ПолноеИмяСвойства	= СбисПолучитьКлючСвойстваДокументаНаСервере(ПараметрыСвойстваОбъекта);
	СвойствоСсылка		= СбисПолучитьСвойствоОбъектаНаСервере(ПараметрыСвойстваОбъекта);
	
	// устанавливает значение параметра в регистре сведений	
	ОбновлятьЗначение = Истина;
	ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
	НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ДокументСсылка);
	//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)-->  23 +
	НаборЗаписей.Отбор.Свойство.Установить(СвойствоСсылка);
	//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество()=0 Тогда
		НоваяЗаписьНабора = НаборЗаписей.Добавить();
		НоваяЗаписьНабора.Объект = ДокументСсылка;
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 24 +
		НоваяЗаписьНабора.Свойство = СвойствоСсылка;
		//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
	Иначе
		НоваяЗаписьНабора = НаборЗаписей.Получить(0);	
		//KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)--> 25 +
		Если Найти(ПолноеИмяСвойства, СбисПолучитьКлючСвойстваДокументаНаСервере(Новый Структура("Имя", "ДокументСБИС_Статус"))) > 0 Тогда
			//<-- KES 050751151 Статусы в разрезе регламентов (ОТПРАВКА ПАКЕТА ДОКУМЕНТОВ, ПОЛУЧЕНИЕ СПИСКА ИЗМЕНЕНИЙ)
			СтароеЗначениеСвойства = НоваяЗаписьНабора.Значение;
			ОбновлятьЗначение = (сбисПриоритетСтатуса(ЗначениеСвойства) > сбисПриоритетСтатуса(СтароеЗначениеСвойства)) Или НоваяРедакция;
		КонецЕсли;
	КонецЕсли;
	Если ОбновлятьЗначение Тогда
		Попытка
			НоваяЗаписьНабора.Значение = ЗначениеСвойства;
			НаборЗаписей.Записать();
		Исключение
			Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	возврат ОбновлятьЗначение; // alo
КонецФункции

Функция МассивСтруктурВТаблицуЗначений(МассивСтруктур)
	// преобразует массив структур в таблицу значений	
	Результат = Новый ТаблицаЗначений;
	Если МассивСтруктур = Неопределено Или МассивСтруктур.Количество() = 0 Тогда
		Возврат Результат;
	Иначе 
		Образец = МассивСтруктур[0];
		Для Каждого  Стр из Образец Цикл
			Результат.Колонки.Добавить(Стр.Ключ );
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Стр Из МассивСтруктур Цикл
		СтрТ = Результат.Добавить();
		ЗаполнитьЗначенияСвойств(СтрТ, Стр);		
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Функция ищет организацию или контрагента в базе 1С по ИНН/КПП
&НаСервереБезКонтекста
Функция НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса, ТолькоПоИНН = Ложь) Экспорт
	ЮлОрг   = оУчастник.Свойство("СвЮЛ");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИНН", ?(ЮлОрг, оУчастник.СвЮЛ.ИНН, оУчастник.СвФЛ.ИНН));
	
	Если ЮлОрг и НЕ ТолькоПоИНН Тогда
		Запрос.УстановитьПараметр("КПП",оУчастник.СвЮЛ.КПП);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И Участник.КПП=&КПП","");
	КонецЕсли;
	
	Если оУчастник.Свойство("Подразделение") и оУчастник.Подразделение.Свойство("Идентификатор") Тогда
		Запрос.УстановитьПараметр("КодФилиала",оУчастник.Подразделение.Идентификатор);
	Иначе
		Запрос.УстановитьПараметр("КодФилиала","");
	КонецЕсли;
	
	Если оУчастник.Свойство("GLN") Тогда
		Запрос.УстановитьПараметр("GLN",оУчастник.GLN);
	Иначе
		Запрос.УстановитьПараметр("GLN","");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		Возврат РезультатЗапроса.Ссылка;
	КонецЦикла;
	Возврат Ложь;
	
КонецФункции	

// Функция ищет контрагента в базе 1С по данным участника в универсальном формате
&НаСервереБезКонтекста
Функция НайтиКонтрагентаИзДокументаСБИС(Ини, оУчастник) Экспорт
	Если Ини.Свойство("ЗапросКонтрагента") Тогда
		ТекстЗапроса = СтрЗаменить(Ини.ЗапросКонтрагента.Значение,"'","");
	Иначе
		ТекстЗапроса="ВЫБРАТЬ
		|Участник.Ссылка
		|ИЗ
		|"+СтрЗаменить(Ини.Контрагенты.Значение,"'","")+" КАК Участник
		|ГДЕ НЕ Участник.ПометкаУдаления И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_ИНН.Значение,"'",""))+" =&ИНН
		|И Участник."+сбисСообщитьИмяРеквизита(СтрЗаменить(Ини.Контрагенты_КПП.Значение,"'","")) +"=&КПП";
	КонецЕсли;

	Возврат НайтиУчастникаВСправочнике(оУчастник, ТекстЗапроса);
КонецФункции

// Функция возвращает название реквизита для значений из файлов настроек (например, для [Документ].Контрагент)	
&НаСервереБезКонтекста
Функция сбисСообщитьИмяРеквизита(ЗначениеРеквизита)Экспорт
	Возврат Сред(ЗначениеРеквизита,Найти(ЗначениеРеквизита,".")+1);	
КонецФункции

// устанавливает значение параметра в регистре сведений	
&НаСервере
Функция сбисЗаполнитьСпособДоставкиКонтрагента(Контрагент, ИниКонфигурация) Экспорт
	Свойство = ПланыВидовХарактеристик[ПараметрыСоединения.ИмяПланаВидовХарактеристикСвойствОбъектов].НайтиПоНаименованию("СБИС_СпособДоставки").Ссылка;
	Если ЗначениеЗаполнено(Свойство) Тогда
		ИмяРегистраСвойствОбъектов = ПараметрыСоединения.ИмяРегистраСвойствОбъектов;
		НаборЗаписей = РегистрыСведений[ИмяРегистраСвойствОбъектов].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Контрагент);
		НаборЗаписей.Отбор.Свойство.Установить(Свойство);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество()=0 Тогда
			НоваяЗаписьНабора = НаборЗаписей.Добавить();
			НоваяЗаписьНабора.Объект = Контрагент;
			НоваяЗаписьНабора.Свойство = Свойство;
			СправочникСвойствОбъектов = ПараметрыСоединения.СправочникСвойствОбъектов;
			Выборка = Справочники[СправочникСвойствОбъектов].Выбрать(,Свойство,Новый Структура("Наименование", "Бумага, хочет ЭДО"));
			Если Выборка.Следующий() Тогда
				Попытка
					НоваяЗаписьНабора.Значение = Выборка.Ссылка;
					НаборЗаписей.Записать();
				Исключение
					Ошибка = ОписаниеОшибки();
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция РазбитьСтрокуВМассив(сбисСтрока, сбисРазделитель=".")
	Результат = Новый Массив();	
	МногоуровневаяСтрока = СтрЗаменить(сбисСтрока, сбисРазделитель, Символы.ПС);
	Для НомерСтроки = 1 По СтрЧислоСтрок(МногоуровневаяСтрока) Цикл 
		Результат.Добавить(СокрЛП(СтрПолучитьСтроку(МногоуровневаяСтрока, НомерСтроки)));
	КонецЦикла;
	Возврат Результат;
КонецФункции

